/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 0x1000004a generated on 2022-03-03 14:04:27.493731
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==0x1000004a);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#ifndef isinf
#define isinf _isinf
#endif
//#ifndef isfinite
//#define isfinite _isfinite
//#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1. has to be smaller than thresholds used for branch conds and evaluation
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)1e-7)
#endif

// used to check input to atan2 for degenerate cases. has to be smaller than thresholds used for branch conds and evaluation
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)1e-7)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

// there are checkpoints in ikfast that are evaluated to make sure they are 0. This threshold speicfies by how much they can deviate
#ifndef IKFAST_EVALCOND_THRESH
#define IKFAST_EVALCOND_THRESH ((IkReal)0.00001)
#endif


inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2Simple(float fy, float fx) {
    return atan2f(fy,fx);
}
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2Simple(double fy, double fx) {
    return atan2(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

template <typename T>
struct CheckValue
{
    T value;
    bool valid;
};

template <typename T>
inline CheckValue<T> IKatan2WithCheck(T fy, T fx, T epsilon)
{
    CheckValue<T> ret;
    ret.valid = false;
    ret.value = 0;
    if( !isnan(fy) && !isnan(fx) ) {
        if( IKabs(fy) >= IKFAST_ATAN2_MAGTHRESH || IKabs(fx) > IKFAST_ATAN2_MAGTHRESH ) {
            ret.value = IKatan2Simple(fy,fx);
            ret.valid = true;
        }
    }
    return ret;
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

template <typename T>
inline CheckValue<T> IKPowWithIntegerCheck(T f, int n)
{
    CheckValue<T> ret;
    ret.valid = true;
    if( n == 0 ) {
        ret.value = 1.0;
        return ret;
    }
    else if( n == 1 )
    {
        ret.value = f;
        return ret;
    }
    else if( n < 0 )
    {
        if( f == 0 )
        {
            ret.valid = false;
            ret.value = (T)1.0e30;
            return ret;
        }
        if( n == -1 ) {
            ret.value = T(1.0)/f;
            return ret;
        }
    }

    int num = n > 0 ? n : -n;
    if( num == 2 ) {
        ret.value = f*f;
    }
    else if( num == 3 ) {
        ret.value = f*f*f;
    }
    else {
        ret.value = 1.0;
        while(num>0) {
            if( num & 1 ) {
                ret.value *= f;
            }
            num >>= 1;
            f *= f;
        }
    }
    
    if( n < 0 ) {
        ret.value = T(1.0)/ret.value;
    }
    return ret;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81;
x0=IKcos(j[0]);
x1=IKcos(j[1]);
x2=IKsin(j[2]);
x3=IKcos(j[2]);
x4=IKsin(j[1]);
x5=IKcos(j[3]);
x6=IKsin(j[0]);
x7=IKsin(j[3]);
x8=IKcos(j[4]);
x9=IKsin(j[4]);
x10=IKcos(j[5]);
x11=IKsin(j[5]);
x12=((1.0)*x8);
x13=((0.433012903784321)*x0);
x14=((1.0)*x9);
x15=((0.866025201892125)*x7);
x16=((0.749999650312296)*x1);
x17=((0.0320689132260654)*x6);
x18=((0.749999650312296)*x0);
x19=((0.03703)*x7);
x20=((0.500000349687582)*x5);
x21=((0.866025201892125)*x0);
x22=((0.749999650312296)*x6);
x23=((1.0)*x7);
x24=((0.03703)*x5);
x25=((1.0)*x5);
x26=((0.0925768564493609)*x0);
x27=((0.303510022428961)*x6);
x28=((0.250000349687704)*x0);
x29=((1.0)*x6);
x30=((0.0925768564493609)*x6);
x31=((0.866025201892125)*x5);
x32=((0.41)*x4);
x33=((0.500000349687582)*x6);
x34=((0.433012903784321)*x6);
x35=((0.500000349687582)*x0);
x36=((0.866025201892125)*x6);
x37=((0.250000349687704)*x6);
x38=((0.0320689132260654)*x0);
x39=((0.500000349687582)*x7);
x40=((0.303510022428961)*x0);
x41=((1.0)*x0);
x42=(x3*x4);
x43=(x5*x6);
x44=(x2*x4);
x45=(x1*x3);
x46=(x1*x2);
x47=(x5*x9);
x48=((-0.500000349687582)*x7);
x49=((-1.0)*x7);
x50=(x0*x5);
x51=(x34*x5);
x52=(x13*x5);
x53=((0.500000349687582)*x42);
x54=((0.500000349687582)*x46);
x55=((0.433012903784321)*x44);
x56=((0.433012903784321)*x45);
x57=((0.866025201892125)*x45);
x58=((0.866025201892125)*x44);
x59=(x0*x16);
x60=(x13*x42);
x61=(x34*x46);
x62=((((-1.0)*x46))+x42);
x63=(x53+(((-1.0)*x54)));
x64=(x55+x56);
x65=(x58+x57);
x66=(x5*x62);
x67=(x7*((((x16*x2))+(((-0.749999650312296)*x42)))));
x68=(x63*x7);
x69=(x47*((x54+(((-1.0)*x53)))));
x70=(x41*(((((-1.0)*x44))+(((-1.0)*x45)))));
x71=(x35*((x44+x45)));
x72=(x29*(((((-1.0)*x44))+(((-1.0)*x45)))));
x73=(x33*((x44+x45)));
x74=(x5*x70);
x75=((((-1.0)*x25*x72))+((x0*x23)));
x76=((((-1.0)*x25*x70))+(((-1.0)*x23*x6)));
x77=(x67+x69);
x78=(((x21*(((((-1.0)*x42))+x46))))+(((-1.0)*x23*x71))+(((-1.0)*x20*x6)));
x79=(((x0*x20))+((x36*(((((-1.0)*x42))+x46))))+(((-1.0)*x23*x73)));
x80=(((x7*(((((-1.0)*x18*x44))+(((-1.0)*x3*x59))))))+((x8*(((((-0.250000349687704)*x43))+((x13*x46))+(((-1.0)*x39*x71))+(((-1.0)*x60))))))+((x9*((((x20*x70))+((x33*x7))))))+x60+(((-0.433012903784321)*x0*x46))+(((-0.749999650312296)*x43)));
x81=((((-0.749999650312296)*x50))+((x9*(((((-1.0)*x20*x72))+(((-1.0)*x0*x48))))))+((x49*(((((-1.0)*x16*x3*x6))+(((-1.0)*x22*x44))))))+(((-0.433012903784321)*x42*x6))+((x8*(((((-0.250000349687704)*x50))+(((1.0)*x39*x73))+(((1.0)*x34*x42))+(((-1.0)*x61))))))+x61);
eerot[0]=(((x11*x80))+((x10*((((x78*x9))+((x76*x8)))))));
eerot[1]=(((x11*(((((-1.0)*x12*x76))+(((-1.0)*x14*x78))))))+((x10*x80)));
IkReal x82=((1.0)*x13);
eerot[2]=(((x9*(((((-1.0)*x31*x70))+(((-1.0)*x15*x6))))))+((x28*x42))+((x8*(((((-1.0)*x2*x59))+((x18*x42))+x51+((x15*x71))))))+((x7*(((((-1.0)*x44*x82))+(((-1.0)*x45*x82))))))+(((-1.0)*x28*x46))+(((-1.0)*x51)));
IkReal x83=((1.0)*x42);
eetrans[0]=(((x40*x46))+((x30*x5))+((x9*((((x19*x6))+((x24*x70))))))+(((-0.0098)*x6))+((x7*((((x26*x45))+((x26*x44))))))+((x0*x32))+(((-1.0)*x40*x83))+((x8*(((((-1.0)*x38*x83))+((x38*x46))+(((-0.0185150129489311)*x43))+(((-1.0)*x19*x71)))))));
eerot[3]=(((x11*x81))+((x10*(((((-1.0)*x12*x75))+(((-1.0)*x14*x79)))))));
eerot[4]=(((x10*x81))+((x11*((((x79*x9))+((x75*x8)))))));
IkReal x84=((1.0)*x15);
IkReal x85=((1.0)*x42);
eerot[5]=(((x7*((((x34*x45))+((x34*x44))))))+((x37*x46))+(((-1.0)*x37*x85))+((x8*(((((-1.0)*x73*x84))+((x16*x2*x6))+(((-1.0)*x22*x85))+x52))))+(((-1.0)*x52))+((x9*(((((-1.0)*x0*x84))+((x31*x72)))))));
IkReal x86=((1.0)*x30);
IkReal x87=((1.0)*x46);
eetrans[1]=(((x9*((((x0*x19))+(((-1.0)*x24*x72))))))+((x27*x42))+(((-1.0)*x27*x87))+(((-0.0098)*x0))+((x8*(((((-1.0)*x17*x87))+(((-0.0185150129489311)*x50))+((x17*x42))+((x19*x73))))))+(((-1.0)*x32*x6))+((x26*x5))+((x7*(((((-1.0)*x44*x86))+(((-1.0)*x45*x86)))))));
eerot[6]=(((x11*((x77+((x8*(((((-1.0)*x39*x63))+x64))))+(((-1.0)*x64))))))+((x10*((((x9*((x65+((x49*x63))))))+((x66*x8)))))));
eerot[7]=((((-1.0)*x11*((((x12*x66))+((x14*((x65+(((-1.0)*x23*x63))))))))))+((x10*(((((-0.433012903784321)*x45))+(((-0.433012903784321)*x44))+x77+((x8*((x64+((x48*x63)))))))))));
eerot[8]=(((x8*((((x15*x63))+(((-1.0)*x16*x3))+(((-0.749999650312296)*x44))))))+(((-0.250000349687704)*x44))+(((-0.250000349687704)*x45))+((x47*(((((0.866025201892125)*x42))+(((-0.866025201892125)*x46))))))+((x7*(((((-0.433012903784321)*x42))+(((0.433012903784321)*x46)))))));
eetrans[2]=((0.2755)+((x8*(((((0.0320689132260654)*x44))+(((0.0320689132260654)*x45))+(((-1.0)*x19*x63))))))+(((0.303510022428961)*x45))+(((0.303510022428961)*x44))+(((-0.41)*x1))+((x47*(((((-0.03703)*x42))+(((0.03703)*x46))))))+((x7*(((((-0.0925768564493609)*x46))+(((0.0925768564493609)*x42)))))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j0,cj0,sj0,htj0,j0mul,j1,cj1,sj1,htj1,j1mul,j2,cj2,sj2,htj2,j2mul,j3,cj3,sj3,htj3,j3mul,j4,cj4,sj4,htj4,j4mul,j5,cj5,sj5,htj5,j5mul,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5;

IkReal j100, cj100, sj100;
unsigned char _ij100[2], _nj100;
bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=r00;
new_r01=r01;
new_r02=((-1.0)*r02);
new_px=((((-0.0641389356550269)*r02))+(((-1.0)*px)));
new_r10=((-1.0)*r10);
new_r11=((-1.0)*r11);
new_r12=r12;
new_py=(py+(((0.0641389356550269)*r12)));
new_r20=r20;
new_r21=r21;
new_r22=((-1.0)*r22);
new_pz=((0.2755)+(((-1.0)*pz))+(((-0.0641389356550269)*r22)));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
IkReal x88=((1.0)*px);
IkReal x89=((1.0)*pz);
IkReal x90=((1.0)*py);
pp=((px*px)+(py*py)+(pz*pz));
npx=(((px*r00))+((py*r10))+((pz*r20)));
npy=(((px*r01))+((py*r11))+((pz*r21)));
npz=(((px*r02))+((py*r12))+((pz*r22)));
rxp0_0=((((-1.0)*r20*x90))+((pz*r10)));
rxp0_1=(((px*r20))+(((-1.0)*r00*x89)));
rxp0_2=((((-1.0)*r10*x88))+((py*r00)));
rxp1_0=((((-1.0)*r21*x90))+((pz*r11)));
rxp1_1=(((px*r21))+(((-1.0)*r01*x89)));
rxp1_2=((((-1.0)*r11*x88))+((py*r01)));
rxp2_0=((((-1.0)*r22*x90))+((pz*r12)));
rxp2_1=((((-1.0)*r02*x89))+((px*r22)));
rxp2_2=((((-1.0)*r12*x88))+((py*r02)));
IkReal op[72], zeror[48];
int numroots;;
IkReal x91=((0.121461423340705)*npx);
IkReal x92=((0.2225808)*npz);
IkReal x93=((0.41)*pp);
IkReal x94=((0.0607307116703524)*npy);
IkReal x95=((0.0740618435004298)*r20);
IkReal x96=((0.0098)*r02);
IkReal x97=((1.0)*rxp2_2);
IkReal x98=((0.14812368700086)*r21);
IkReal x99=((0.710313086556749)*npy);
IkReal x100=((0.355156543278374)*npx);
IkReal x101=((0.0169740939570857)*r00);
IkReal x102=((1.73205040378425)*rxp0_2);
IkReal x103=((0.128278845939925)*r22);
IkReal x104=((0.0370300258978623)*r21);
IkReal x105=((0.0339481879141713)*r11);
IkReal x106=((3.4641008075685)*rxp1_2);
IkReal x107=((0.0740600517957246)*r20);
IkReal x108=((0.0339481879141713)*r01);
IkReal x109=((0.0169740939570857)*r10);
IkReal x110=((0.476618215006745)*npx);
IkReal x111=((0.0849937170959635)*npz);
IkReal x112=((0.238309107503372)*npy);
IkReal x113=((0.499999300624592)*rxp2_2);
IkReal x114=((0.00489999314612101)*r02);
IkReal x115=((0.00848705291417269)*r01);
IkReal x116=((0.0555458958510542)*r20);
IkReal x117=((0.866025807568642)*rxp1_2);
IkReal x118=((0.00489999314612101)*r12);
IkReal x119=((0.00848705291417269)*r11);
IkReal x120=((0.0169741058283454)*r10);
IkReal x121=((1.73205161513728)*rxp0_2);
IkReal x122=((0.111091791702108)*r21);
IkReal x123=((0.0169741058283454)*r00);
IkReal x124=((-0.0098)*r12);
IkReal x125=((-0.355156543278374)*npx);
IkReal x126=((-0.0169740939570857)*r10);
IkReal x127=((((-1.0)*x119))+x118);
IkReal x128=((0.0299267406287546)+x111);
IkReal x129=(x119+x118);
IkReal x130=(x106+x107);
IkReal x131=(x117+x116);
IkReal x132=(x101+x102);
IkReal x133=(x97+x96);
IkReal x134=(x104+x101);
IkReal x135=(x113+x115);
IkReal x136=(x93+x92);
IkReal x137=((0.0365027959923003)+(((-1.0)*x136))+x94);
IkReal x138=((0.0365027959923003)+(((-1.0)*x136))+(((-1.0)*x94)));
IkReal x139=(x128+x112+(((-1.0)*x93)));
IkReal x140=((((-1.0)*x112))+x128+(((-1.0)*x93)));
op[0]=x137;
op[1]=x137;
op[2]=x91;
op[3]=x91;
op[4]=x138;
op[5]=x138;
op[6]=((((-1.0)*x133))+(((-1.0)*x95)));
op[7]=x124;
op[8]=x98;
op[9]=0;
op[10]=((((-1.0)*x133))+x95);
op[11]=x124;
op[12]=x124;
op[13]=(x96+(((-1.0)*x97))+(((-1.0)*x95)));
op[14]=0;
op[15]=x98;
op[16]=x124;
op[17]=(x95+x96+(((-1.0)*x97)));
op[18]=0;
op[19]=x137;
op[20]=0;
op[21]=x91;
op[22]=0;
op[23]=x138;
op[24]=x125;
op[25]=x125;
op[26]=x99;
op[27]=x99;
op[28]=x100;
op[29]=x100;
op[30]=(x104+x103+(((-1.0)*x132)));
op[31]=x126;
op[32]=(x130+x108);
op[33]=x105;
op[34]=((((-1.0)*x104))+x132+x103);
op[35]=x109;
op[36]=x126;
op[37]=((((-1.0)*x102))+x134+x103);
op[38]=x105;
op[39]=((((-1.0)*x108))+x130);
op[40]=x109;
op[41]=(x102+x103+(((-1.0)*x134)));
op[42]=0;
op[43]=x125;
op[44]=0;
op[45]=x99;
op[46]=0;
op[47]=x100;
op[48]=x139;
op[49]=x139;
op[50]=x110;
op[51]=x110;
op[52]=x140;
op[53]=x140;
op[54]=(x135+x131+x114);
op[55]=x129;
op[56]=((((-1.0)*x122))+x123+x121);
op[57]=x120;
op[58]=((((-1.0)*x115))+x113+x114+(((-1.0)*x131)));
op[59]=x127;
op[60]=x129;
op[61]=((((-1.0)*x114))+(((-1.0)*x115))+x131+x113);
op[62]=x120;
op[63]=((((-1.0)*x123))+(((-1.0)*x122))+x121);
op[64]=x127;
op[65]=((((-1.0)*x114))+x135+(((-1.0)*x131)));
op[66]=0;
op[67]=x139;
op[68]=0;
op[69]=x110;
op[70]=0;
op[71]=x140;
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j4array[16], cj4array[16], sj4array[16], j5array[16], cj5array[16], sj5array[16], j0array[16], cj0array[16], sj0array[16];
int numsolutions = 0;
for(int ij4 = 0; ij4 < numroots; ij4 += 3)
{
IkReal htj4 = zeror[ij4+0], htj5 = zeror[ij4+1], htj0 = zeror[ij4+2];
if(isnan(htj4)||isnan(htj5)||isnan(htj0)){
continue;
}
j4array[numsolutions]=((2.0)*(atan(htj4)));
j5array[numsolutions]=((2.0)*(atan(htj5)));
j0array[numsolutions]=((2.0)*(atan(htj0)));
if(isinf(htj4)){
cj4array[numsolutions] = IKcos(j4array[numsolutions]);
sj4array[numsolutions] = IKsin(j4array[numsolutions]);
}
else{
IkReal x141=htj4*htj4;
CheckValue<IkReal> x142=IKPowWithIntegerCheck(((1.0)+x141),-1);
if(!x142.valid){
continue;
}
cj4array[numsolutions]=((x142.value)*(((1.0)+(((-1.0)*x141)))));
CheckValue<IkReal> x143=IKPowWithIntegerCheck(((1.0)+(htj4*htj4)),-1);
if(!x143.valid){
continue;
}
sj4array[numsolutions]=((2.0)*htj4*(x143.value));
}
if(isinf(htj5)){
cj5array[numsolutions] = IKcos(j5array[numsolutions]);
sj5array[numsolutions] = IKsin(j5array[numsolutions]);
}
else{
IkReal x144=htj5*htj5;
CheckValue<IkReal> x145=IKPowWithIntegerCheck(((1.0)+x144),-1);
if(!x145.valid){
continue;
}
cj5array[numsolutions]=((x145.value)*(((1.0)+(((-1.0)*x144)))));
CheckValue<IkReal> x146=IKPowWithIntegerCheck(((1.0)+(htj5*htj5)),-1);
if(!x146.valid){
continue;
}
sj5array[numsolutions]=((2.0)*htj5*(x146.value));
}
if(isinf(htj0)){
cj0array[numsolutions] = IKcos(j0array[numsolutions]);
sj0array[numsolutions] = IKsin(j0array[numsolutions]);
}
else{
IkReal x147=htj0*htj0;
CheckValue<IkReal> x148=IKPowWithIntegerCheck(((1.0)+x147),-1);
if(!x148.valid){
continue;
}
cj0array[numsolutions]=((x148.value)*(((1.0)+(((-1.0)*x147)))));
CheckValue<IkReal> x149=IKPowWithIntegerCheck(((1.0)+(htj0*htj0)),-1);
if(!x149.valid){
continue;
}
sj0array[numsolutions]=((2.0)*htj0*(x149.value));
}
if( j4array[numsolutions] > IKPI )
{
    j4array[numsolutions]-=IK2PI;
}
else if( j4array[numsolutions] < -IKPI )
{
    j4array[numsolutions]+=IK2PI;
}
if( j5array[numsolutions] > IKPI )
{
    j5array[numsolutions]-=IK2PI;
}
else if( j5array[numsolutions] < -IKPI )
{
    j5array[numsolutions]+=IK2PI;
}
if( j0array[numsolutions] > IKPI )
{
    j0array[numsolutions]-=IK2PI;
}
else if( j0array[numsolutions] < -IKPI )
{
    j0array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j4valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj4 = 16;
_nj5 = 1;
_nj0 = 1;
for(int ij4 = 0; ij4 < numsolutions; ++ij4)
    {
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
_ij5[0] = 0; _ij5[1] = -1;
_ij0[0] = 0; _ij0[1] = -1;
for(int iij4 = ij4+1; iij4 < numsolutions; ++iij4)
{
if( !j4valid[iij4] ) { continue; }
if( IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(cj5array[ij4]-cj5array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij4]-sj5array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(cj0array[ij4]-cj0array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij4]-sj0array[iij4]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j4valid[iij4]=false; _ij4[1] = iij4; _ij5[1] = 0; _ij0[1] = 0;  break; 
}
}
    j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];

    j5 = j5array[ij4]; cj5 = cj5array[ij4]; sj5 = sj5array[ij4];

    j0 = j0array[ij4]; cj0 = cj0array[ij4]; sj0 = sj0array[ij4];

innerfn(solutions);
    }
}
return solutions.GetNumSolutions()>0;
}
inline void innerfn(IkSolutionListBase<IkReal>& solutions) {
for(int fniter = 0; fniter < 1; ++fniter) {
{
IkReal j3eval[4];
IkReal x150=(sj4*sj5);
IkReal x151=(cj5*r01);
IkReal x152=(cj4*r02);
IkReal x153=(r00*sj5);
IkReal x154=(cj0*r21);
IkReal x155=((1.99999860125065)*cj4);
IkReal x156=((0.433012903784321)*cj4);
IkReal x157=((1.73204919243206)*cj4);
IkReal x158=(cj0*r20);
IkReal x159=(cj5*sj4);
j3eval[0]=((((-2.99999440500457)*x152))+(((-1.0)*x153*x157))+(((-1.0)*x151*x157))+(((-1.0)*r02))+(((1.73204919243206)*x153))+(((1.73204919243206)*x151))+(((3.46409596216145)*r01*x150))+(((-3.46409596216145)*r00*x159)));
j3eval[1]=1.87500043710948e-9;
j3eval[2]=((((-1.0)*x150*x158))+(((-1.0)*sj5*x154*x155))+((cj5*x155*x158))+(((-1.73204919243206)*cj0*r22*sj4))+(((-1.0)*x154*x159)));
j3eval[3]=IKsign(((((-0.866025201892125)*r00*x159))+(((-0.250000349687704)*r02))+(((-1.0)*x153*x156))+(((-1.0)*x151*x156))+(((0.433012903784321)*x151))+(((0.433012903784321)*x153))+(((-0.749999650312296)*x152))+(((0.866025201892125)*r01*x150))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  || IKabs(j3eval[3]) < 0.0000010000000000  )
{
{
IkReal j3eval[4];
IkReal x160=(cj4*cj5);
IkReal x161=(r20*sj0);
IkReal x162=(cj4*r12);
IkReal x163=(r10*sj5);
IkReal x164=((0.433012903784321)*r11);
IkReal x165=(sj0*sj4);
IkReal x166=(sj4*sj5);
IkReal x167=((1.73204919243206)*r11);
IkReal x168=(cj5*r10*sj4);
j3eval[0]=((((-1.73204919243206)*cj4*x163))+((cj5*x167))+(((-1.0)*x160*x167))+(((-2.99999440500457)*x162))+(((-1.0)*r12))+(((3.46409596216145)*r11*x166))+(((1.73204919243206)*x163))+(((-3.46409596216145)*x168)));
j3eval[1]=IKsign(((((-0.250000349687704)*r12))+(((0.866025201892125)*r11*x166))+((cj5*x164))+(((-1.0)*x160*x164))+(((-0.866025201892125)*x168))+(((0.433012903784321)*x163))+(((-0.749999650312296)*x162))+(((-0.433012903784321)*cj4*x163))));
j3eval[2]=1.87500043710948e-9;
j3eval[3]=((((-1.99999860125065)*cj4*r21*sj0*sj5))+(((-1.0)*cj5*r21*x165))+(((-1.0)*x161*x166))+(((-1.73204919243206)*r22*x165))+(((1.99999860125065)*x160*x161)));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  || IKabs(j3eval[2]) < 0.0000010000000000  || IKabs(j3eval[3]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
IkReal x169=(cj4*r22);
IkReal x170=(cj5*r21);
IkReal x171=((0.866025201892125)*sj4);
IkReal x172=(cj5*r20);
IkReal x173=(r21*sj5);
IkReal x174=((3.46409596216145)*sj4);
IkReal x175=(r20*sj5);
IkReal x176=(cj4*x175);
j3eval[0]=((((2.99999440500457)*x169))+(((-1.73204919243206)*x170))+(((-1.73204919243206)*x175))+((x172*x174))+(((1.73204919243206)*cj4*x170))+r22+(((1.73204919243206)*x176))+(((-1.0)*x173*x174)));
j3eval[1]=IKsign(((((-0.433012903784321)*x170))+(((-0.433012903784321)*x175))+(((0.749999650312296)*x169))+(((0.433012903784321)*x176))+(((0.250000349687704)*r22))+((x171*x172))+(((-1.0)*x171*x173))+(((0.433012903784321)*cj4*x170))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[2];
sj0=0;
cj0=1.0;
j0=0;
IkReal x177=(cj5*r01);
IkReal x178=(cj4*r02);
IkReal x179=(r00*sj5);
IkReal x180=((0.433012903784321)*cj4);
IkReal x181=((1.73204919243206)*cj4);
IkReal x182=(r01*sj4*sj5);
IkReal x183=(cj5*r00*sj4);
j3eval[0]=((((3.46409596216145)*x182))+(((-2.99999440500457)*x178))+(((-1.0)*r02))+(((-1.0)*x177*x181))+(((-3.46409596216145)*x183))+(((-1.0)*x179*x181))+(((1.73204919243206)*x177))+(((1.73204919243206)*x179)));
j3eval[1]=IKsign(((((-0.250000349687704)*r02))+(((0.866025201892125)*x182))+(((0.433012903784321)*x179))+(((0.433012903784321)*x177))+(((-1.0)*x177*x180))+(((-0.866025201892125)*x183))+(((-1.0)*x179*x180))+(((-0.749999650312296)*x178))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=0;
cj0=1.0;
j0=0;
IkReal x184=(cj4*r22);
IkReal x185=(cj5*r21);
IkReal x186=((0.866025201892125)*sj4);
IkReal x187=(cj5*r20);
IkReal x188=(r21*sj5);
IkReal x189=((3.46409596216145)*sj4);
IkReal x190=(r20*sj5);
IkReal x191=(cj4*x190);
j3eval[0]=((((-1.0)*x188*x189))+(((-1.73204919243206)*x185))+(((-1.73204919243206)*x190))+(((2.99999440500457)*x184))+((x187*x189))+r22+(((1.73204919243206)*x191))+(((1.73204919243206)*cj4*x185)));
j3eval[1]=IKsign((((x186*x187))+(((-0.433012903784321)*x185))+(((-1.0)*x186*x188))+(((-0.433012903784321)*x190))+(((0.749999650312296)*x184))+(((0.250000349687704)*r22))+(((0.433012903784321)*x191))+(((0.433012903784321)*cj4*x185))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=0;
cj0=1.0;
j0=0;
IkReal x192=cj4*cj4;
IkReal x193=r11*r11;
IkReal x194=cj5*cj5;
IkReal x195=r10*r10;
IkReal x196=r12*r12;
IkReal x197=(r12*sj5);
IkReal x198=(cj5*r11);
IkReal x199=(r11*sj4);
IkReal x200=(r10*sj5);
IkReal x201=(cj4*r10);
IkReal x202=(cj5*sj4);
IkReal x203=((3.9999972025013)*sj5);
IkReal x204=((0.375000349687459)*cj4);
IkReal x205=((2.0)*cj4);
IkReal x206=(cj4*r12);
IkReal x207=((0.750000174843424)*sj5);
IkReal x208=(r10*r12);
IkReal x209=((3.46409838486413)*x192);
IkReal x210=((4.99999440500457)*x194);
IkReal x211=(r10*x194);
IkReal x212=(cj4*x195);
IkReal x213=((0.649519052837905)*x192);
IkReal x214=(x192*x193);
IkReal x215=(x193*x194);
IkReal x216=(x194*x195);
IkReal x217=(x192*x195);
IkReal x218=(x192*x196);
IkReal x219=(cj4*sj5*x193*x202);
j3eval[0]=((((-1.0)*x195*x205))+(((-5.99998881000913)*x198*x200))+((x210*x214))+((x196*x205))+(((3.9999972025013)*r10*x199))+(((9.99998881000913)*x192*x198*x200))+((r10*x197*x209))+(((-4.99999440500457)*x196))+((r12*x198*x209))+(((-2.309396769726)*x197*x201))+(((-7.99999440500261)*x199*x211))+((x193*x202*x203))+((x205*x216))+(((-1.0)*x205*x215))+(((-2.99999440500457)*x215))+(((2.30940161513813)*x202*x208))+(((-1.33333395500065)*x193))+(((7.99999440500261)*x194*x199*x201))+(((6.9281919243229)*r12*x201*x202))+x217+(((-2.30940161513813)*x197*x199))+(((-1.0)*x210*x217))+(((-1.0)*cj4*x193*x202*x203))+(((-1.15470161513813)*r10*x197))+(((-3.99999440500457)*x214))+((x202*x203*x212))+(((-1.15470161513813)*r12*x198))+(((-4.33332836000522)*x195))+(((-6.9281919243229)*cj4*x197*x199))+(((-3.9999972025013)*x199*x201))+(((-2.309396769726)*x198*x206))+(((-1.0)*x195*x202*x203))+(((-4.0)*cj4*x198*x200))+(((2.99999440500457)*x216))+(((2.99999440500457)*x218)));
j3eval[1]=IKsign(((((-1.0)*x195*x204))+(((-0.433012298107169)*x197*x201))+(((0.18750017484373)*x217))+((x204*x216))+(((-0.81249982515627)*x195))+(((-0.562499475468567)*x215))+(((-0.937499825156026)*x196))+(((-0.749999650312296)*x214))+((x196*x204))+(((-1.50000034968685)*x199*x211))+(((0.562499475468567)*x218))+(((0.562499475468567)*x216))+(((0.750000174843424)*r10*x199))+(((-0.216506754730737)*r10*x197))+(((-0.750000174843424)*x199*x201))+(((-1.0)*x204*x215))+(((1.29903719716146)*r12*x201*x202))+((x193*x202*x207))+(((1.50000034968685)*x194*x199*x201))+(((-0.433013206622791)*x197*x199))+(((-0.750000699374918)*cj4*x198*x200))+(((-0.433012298107169)*x198*x206))+(((-1.0)*cj4*x193*x202*x207))+((r12*x198*x213))+(((-0.250000349687704)*x193))+(((0.433013206622791)*x202*x208))+((x202*x207*x212))+(((1.87499965031205)*x192*x198*x200))+((r10*x197*x213))+(((0.937499825156026)*x194*x214))+(((-0.937499825156026)*x192*x216))+(((-1.12499895093713)*x198*x200))+(((-0.216506754730737)*r12*x198))+(((-1.29903719716146)*cj4*x197*x199))+(((-1.0)*x195*x202*x207))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j1, j2, j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x220=cj4*cj4;
IkReal x221=cj5*cj5;
IkReal x222=r10*r10;
IkReal x223=r12*r12;
IkReal x224=r11*r11;
IkReal x225=(r12*sj5);
IkReal x226=(r11*sj4);
IkReal x227=(r12*sj4);
IkReal x228=((0.750000174843424)*cj4);
IkReal x229=(cj5*sj5);
IkReal x230=((0.433012903784321)*r12);
IkReal x231=(r10*sj5);
IkReal x232=((1.50000034968685)*r10);
IkReal x233=((0.433012298107169)*cj4);
IkReal x234=(r10*r11);
IkReal x235=(cj5*r11);
IkReal x236=(cj5*r10);
IkReal x237=((0.375000349687459)*cj4);
IkReal x238=((1.29903719716146)*cj4);
IkReal x239=((0.250000349687704)*cj4);
IkReal x240=((0.500000349687582)*sj4);
IkReal x241=((0.562499475468567)*x221);
IkReal x242=(r12*x235);
IkReal x243=(sj4*x224);
IkReal x244=(cj4*x221);
IkReal x245=((0.937499825156026)*x221);
IkReal x246=(r10*x220);
IkReal x247=(sj4*x222);
IkReal x248=(x220*x224);
IkReal x249=(x220*x222);
CheckValue<IkReal> x250=IKPowWithIntegerCheck(IKsign(((((-1.0)*x221*x226*x232))+(((-1.12499895093713)*x229*x234))+(((-0.750000699374918)*cj4*x229*x234))+(((-0.216506754730737)*r10*x225))+(((0.649519052837905)*x220*x242))+(((-1.0)*r10*x225*x233))+(((0.433013206622791)*x227*x236))+(((-0.937499825156026)*x223))+(((-1.0)*r10*x226*x228))+(((-1.0)*x228*x229*x243))+(((-0.250000349687704)*x224))+(((-1.0)*x221*x224*x237))+(((-0.216506754730737)*x242))+(((0.750000174843424)*x229*x243))+((x226*x232*x244))+(((0.18750017484373)*x249))+(((-1.0)*x233*x242))+((x228*x229*x247))+((x221*x222*x237))+(((-0.749999650312296)*x248))+(((1.87499965031205)*x220*x229*x234))+(((-0.433013206622791)*x225*x226))+(((-1.0)*x225*x226*x238))+(((-1.0)*x245*x249))+((x227*x236*x238))+(((0.750000174843424)*r10*x226))+((x245*x248))+(((-1.0)*x224*x241))+((x222*x241))+(((-0.81249982515627)*x222))+(((0.649519052837905)*x225*x246))+(((-0.750000174843424)*x229*x247))+((x223*x237))+(((0.562499475468567)*x220*x223))+(((-1.0)*x222*x237)))),-1);
if(!x250.valid){
continue;
}
CheckValue<IkReal> x251 = IKatan2WithCheck(IkReal(((((-1.0)*cj4*x236))+((x231*x240))+(((0.500000349687582)*cj5*x226))+((cj4*r11*sj5))+(((0.866025201892125)*x227)))),IkReal(((((-1.0)*x235*x239))+(((-1.0)*cj4*x230))+(((-1.0)*x236*x240))+x230+(((0.500000349687582)*sj5*x226))+(((-1.0)*x231*x239))+(((-0.749999650312296)*x235))+(((-0.749999650312296)*x231)))),IKFAST_ATAN2_MAGTHRESH);
if(!x251.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x250.value)))+(x251.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x252=IKsin(j3);
IkReal x253=IKcos(j3);
IkReal x254=(r11*sj5);
IkReal x255=(r10*sj5);
IkReal x256=(cj5*r20);
IkReal x257=(cj5*r11);
IkReal x258=(r00*sj5);
IkReal x259=(cj4*cj5);
IkReal x260=((0.500000349687582)*cj5);
IkReal x261=(r21*sj5);
IkReal x262=(r20*sj5);
IkReal x263=(r01*sj5);
IkReal x264=(sj4*x252);
IkReal x265=((1.0)*x252);
IkReal x266=((0.250000349687704)*x253);
IkReal x267=((0.749999650312296)*x253);
IkReal x268=((0.433012903784321)*cj4*r12);
IkReal x269=((0.749999650312296)*x252);
IkReal x270=(r12*x253);
IkReal x271=(cj4*x252);
IkReal x272=((0.500000349687582)*sj4*x253);
IkReal x273=((0.250000349687704)*x271);
IkReal x274=((0.433012903784321)*r02*x253);
IkReal x275=((0.433012903784321)*r22*x253);
evalcond[0]=((((-1.0)*x262*x267))+(((0.866025201892125)*r22*x264))+(((-1.0)*cj4*x275))+(((-1.0)*cj5*r21*x267))+(((-1.0)*r21*x259*x266))+x275+((r21*x260*x264))+(((0.500000349687582)*x262*x264))+((x261*x272))+((x261*x271))+(((-1.0)*cj4*x262*x266))+(((-1.0)*x256*x272))+(((-1.0)*cj4*x256*x265)));
evalcond[1]=((((-1.0)*r00*x259*x265))+((r01*x260*x264))+(((-1.0)*cj4*x274))+(((-1.0)*r01*x259*x266))+(((-1.0)*cj4*x258*x266))+(((-1.0)*x258*x267))+(((-1.0)*cj5*r01*x267))+((x263*x271))+((x263*x272))+(((0.500000349687582)*x258*x264))+x274+(((0.866025201892125)*r02*x264))+(((-1.0)*r00*sj4*x253*x260)));
evalcond[2]=((((-0.500000349687582)*x254*x264))+((r10*x260*x264))+((x252*x268))+((cj4*x253*x254))+((x255*x273))+((x255*x272))+(((0.866025201892125)*sj4*x270))+((x255*x269))+((x257*x269))+(((-0.433012903784321)*r12*x252))+((x257*x273))+((x257*x272))+(((-1.0)*r10*x253*x259)));
evalcond[3]=((1.0)+(((-1.0)*x255*x267))+(((-1.0)*r10*sj4*x253*x260))+(((0.500000349687582)*x255*x264))+(((-1.0)*x253*x268))+(((-1.0)*cj4*x255*x266))+((x254*x271))+((x254*x272))+(((-1.0)*r10*x259*x265))+(((0.433012903784321)*x270))+(((0.866025201892125)*r12*x264))+(((0.500000349687582)*x257*x264))+(((-1.0)*x257*x267))+(((-1.0)*cj4*x257*x266)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x276=((0.26409636501044)*cj4);
IkReal x277=(r20*sj5);
IkReal x278=(cj5*r21);
IkReal x279=((0.457427895740576)*cj4);
IkReal x280=(r00*sj5);
IkReal x281=((0.528192360616262)*sj4);
IkReal x282=(cj5*r01);
if( IKabs(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*x276*x282))+(((-1.0)*x276*x280))+(((-1.0)*cj5*r00*x281))+((r01*sj5*x281))+(((-1.0)*r02*x279))+(((0.444735007694415)*x282))+(((0.444735007694415)*x280)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+((r22*x279))+(((-0.444735007694415)*x277))+(((-0.444735007694415)*x278))+((cj5*r20*x281))+(((-1.0)*r21*sj5*x281))+((x276*x277))+((x276*x278))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*x276*x282))+(((-1.0)*x276*x280))+(((-1.0)*cj5*r00*x281))+((r01*sj5*x281))+(((-1.0)*r02*x279))+(((0.444735007694415)*x282))+(((0.444735007694415)*x280))))+IKsqr(((((0.204620884747229)*r22))+((r22*x279))+(((-0.444735007694415)*x277))+(((-0.444735007694415)*x278))+((cj5*r20*x281))+(((-1.0)*r21*sj5*x281))+((x276*x277))+((x276*x278))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*x276*x282))+(((-1.0)*x276*x280))+(((-1.0)*cj5*r00*x281))+((r01*sj5*x281))+(((-1.0)*r02*x279))+(((0.444735007694415)*x282))+(((0.444735007694415)*x280))), ((((0.204620884747229)*r22))+((r22*x279))+(((-0.444735007694415)*x277))+(((-0.444735007694415)*x278))+((cj5*r20*x281))+(((-1.0)*r21*sj5*x281))+((x276*x277))+((x276*x278))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x283=((1.0)*px);
IkReal x284=((0.187545437253636)*cj4);
IkReal x285=(r20*sj5);
IkReal x286=(r01*sj3);
IkReal x287=(cj5*r21);
IkReal x288=(cj3*r00);
IkReal x289=((0.0185150129489311)*sj4);
IkReal x290=(r21*sj5);
IkReal x291=((0.20357990508077)*sj3);
IkReal x292=(cj5*sj4);
IkReal x293=((0.135720094919197)*sj3);
IkReal x294=(cj4*cj5);
IkReal x295=(r00*sj5);
IkReal x296=((0.00925751294893567)*cj4);
IkReal x297=((0.10827950965428)*cj4);
IkReal x298=(cj4*r22);
IkReal x299=((0.117537022603216)*sj3);
IkReal x300=(cj5*r01);
IkReal x301=((0.135720094919197)*cj3);
IkReal x302=(r01*sj5);
IkReal x303=((0.216558867852667)*sj4);
IkReal x304=(cj4*r02);
IkReal x305=((0.27144)*cj3);
IkReal x306=((0.41)*(IKsin(j1)));
IkReal x307=((0.41)*(IKcos(j1)));
IkReal x308=((0.135720094919197)*sj4*sj5);
IkReal x309=((0.0678600949192303)*cj4*sj3);
IkReal x310=((0.235073880801598)*cj3*sj4);
IkReal x311=(x306+x283);
evalcond[0]=(((x287*x297))+((r22*x284))+(((-0.18234135315471)*x287))+(((-0.18234135315471)*x285))+((x285*x297))+pz+(((0.216558867852667)*r20*x292))+(((0.0838945627463637)*r22))+(((-1.0)*x307))+(((-1.0)*x290*x303)));
evalcond[1]=((((-1.0)*r02*x284))+(((-0.0838945627463637)*r02))+(((-0.216558867852667)*r00*x292))+(((-1.0)*x311))+((x302*x303))+(((-1.0)*x295*x297))+(((0.18234135315471)*x300))+(((0.18234135315471)*x295))+(((-0.10827950965428)*r01*x294)));
evalcond[2]=((((-1.0)*x285*x291))+(((0.0160344678271334)*x304))+((r20*x294*x305))+(((-0.0160344678271334)*r02))+(((-1.0)*sj4*x285*x301))+(((-1.0)*sj4*x287*x301))+(((-1.0)*x287*x309))+(((0.0648043305514941)*x300))+(((0.00925751294893567)*r01*x294))+((cj5*r00*x289))+((sj4*x290*x293))+(((-1.0)*x285*x309))+(((-1.0)*x298*x299))+(((-1.0)*x311))+((x295*x296))+(((-1.0)*cj4*x290*x305))+(((-1.0)*x287*x291))+(((-1.0)*x289*x302))+(((-1.0)*r20*x292*x293))+(((-1.0)*r22*x310))+(((0.0648043305514941)*x295))+((r22*x299)));
evalcond[3]=(((x291*x295))+(((0.0160344678271334)*x298))+((cj4*x302*x305))+((r00*x292*x293))+((r01*x292*x301))+(((-1.0)*x289*x290))+((r02*x310))+(((-1.0)*x286*x308))+(((-0.0160344678271334)*r22))+((x287*x296))+(((0.0648043305514941)*x285))+(((0.0648043305514941)*x287))+((x299*x304))+(((-1.0)*r02*x299))+x307+(((-1.0)*pz))+((cj5*r20*x289))+(((-0.27144)*x288*x294))+((x285*x296))+((x295*x309))+((x288*x308))+(((0.20357990508077)*cj5*x286))+(((0.0678600949192303)*x286*x294)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x312=((0.250000349687704)*sj1);
IkReal x313=(cj1*cj4);
IkReal x314=((0.749999650312296)*r22);
IkReal x315=(cj4*sj1);
IkReal x316=((0.749999650312296)*r02);
IkReal x317=((0.250000349687704)*cj1);
IkReal x318=((0.433012903784321)*r00*sj5);
IkReal x319=((0.433012903784321)*r20*sj5);
IkReal x320=((0.433012903784321)*cj5*r01);
IkReal x321=((0.433012903784321)*cj5*r21);
IkReal x322=((0.866025201892125)*cj5*sj1*sj4);
IkReal x323=((0.866025201892125)*cj1*cj5*sj4);
IkReal x324=((0.866025201892125)*r01*sj4*sj5);
IkReal x325=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*sj1*x321))+(((-1.0)*sj1*x325))+((r20*x322))+((r02*x317))+((r00*x323))+(((-1.0)*sj1*x319))+((x313*x320))+(((-1.0)*cj1*x320))+(((-1.0)*cj1*x324))+((x315*x319))+(((-1.0)*cj1*x318))+((x315*x321))+((x314*x315))+((r22*x312))+((x313*x318))+((x313*x316)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r02*x312))+((r20*x323))+((x313*x321))+(((-1.0)*cj1*x325))+(((-1.0)*cj1*x321))+(((-1.0)*x315*x320))+((sj1*x318))+((sj1*x320))+((sj1*x324))+(((-1.0)*r00*x322))+(((-1.0)*cj1*x319))+(((-1.0)*x315*x318))+(((-1.0)*x315*x316))+((r22*x317))+((x313*x319))+((x313*x314)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj1*x321))+(((-1.0)*sj1*x325))+((r20*x322))+((r02*x317))+((r00*x323))+(((-1.0)*sj1*x319))+((x313*x320))+(((-1.0)*cj1*x320))+(((-1.0)*cj1*x324))+((x315*x319))+(((-1.0)*cj1*x318))+((x315*x321))+((x314*x315))+((r22*x312))+((x313*x318))+((x313*x316))))+IKsqr(((((-1.0)*r02*x312))+((r20*x323))+((x313*x321))+(((-1.0)*cj1*x325))+(((-1.0)*cj1*x321))+(((-1.0)*x315*x320))+((sj1*x318))+((sj1*x320))+((sj1*x324))+(((-1.0)*r00*x322))+(((-1.0)*cj1*x319))+(((-1.0)*x315*x318))+(((-1.0)*x315*x316))+((r22*x317))+((x313*x319))+((x313*x314))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*sj1*x321))+(((-1.0)*sj1*x325))+((r20*x322))+((r02*x317))+((r00*x323))+(((-1.0)*sj1*x319))+((x313*x320))+(((-1.0)*cj1*x320))+(((-1.0)*cj1*x324))+((x315*x319))+(((-1.0)*cj1*x318))+((x315*x321))+((x314*x315))+((r22*x312))+((x313*x318))+((x313*x316))), ((((-1.0)*r02*x312))+((r20*x323))+((x313*x321))+(((-1.0)*cj1*x325))+(((-1.0)*cj1*x321))+(((-1.0)*x315*x320))+((sj1*x318))+((sj1*x320))+((sj1*x324))+(((-1.0)*r00*x322))+(((-1.0)*cj1*x319))+(((-1.0)*x315*x318))+(((-1.0)*x315*x316))+((r22*x317))+((x313*x319))+((x313*x314))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x326=IKsin(j2);
IkReal x327=IKcos(j2);
IkReal x328=((0.749999650312296)*sj3);
IkReal x329=(cj5*r01);
IkReal x330=(r00*sj5);
IkReal x331=(cj4*cj5);
IkReal x332=((1.0)*cj3);
IkReal x333=(r21*sj3);
IkReal x334=(cj4*sj5);
IkReal x335=(cj3*r21);
IkReal x336=((0.500000349687582)*sj4);
IkReal x337=((0.433012903784321)*r20);
IkReal x338=(cj4*r22);
IkReal x339=((0.433012903784321)*sj3);
IkReal x340=((0.433012903784321)*cj4);
IkReal x341=(r01*sj5);
IkReal x342=(r20*sj5);
IkReal x343=((0.0160344678271334)*r02);
IkReal x344=(cj4*r02);
IkReal x345=((0.00925751294893567)*cj4);
IkReal x346=((0.0185150129489311)*sj4);
IkReal x347=(r21*sj5);
IkReal x348=(cj5*r21);
IkReal x349=((0.866025201892125)*sj4);
IkReal x350=(cj5*r20);
IkReal x351=(cj5*r00);
IkReal x352=((0.250000349687704)*sj3);
IkReal x353=(cj1*x327);
IkReal x354=(sj1*x326);
IkReal x355=(cj1*x326);
IkReal x356=(sj1*x327);
IkReal x357=(x353+x354);
evalcond[0]=((((-0.250000349687704)*r22))+(((0.433012903784321)*x348))+((sj5*x337))+(((-1.0)*x349*x350))+x357+((x347*x349))+(((-1.0)*x334*x337))+(((-0.433012903784321)*r21*x331))+(((-0.749999650312296)*x338)));
evalcond[1]=((((0.433012903784321)*x329))+(((-0.250000349687704)*r02))+(((-1.0)*x330*x340))+(((-1.0)*x349*x351))+(((-1.0)*x356))+x355+(((0.433012903784321)*x330))+(((-0.749999650312296)*x344))+((x341*x349))+(((-1.0)*x329*x340)));
evalcond[2]=((((-0.27144)*x354))+(((-0.27144)*x353))+(((0.00925751294893567)*r21*x331))+(((0.41)*cj1))+((x346*x350))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((-1.0)*x346*x347))+(((0.0648043305514941)*x342))+(((0.0648043305514941)*x348))+(((0.00925751294893567)*r20*x334))+(((0.0160344678271334)*x338)));
evalcond[3]=((((-0.27144)*x355))+(((0.0648043305514941)*x330))+((x329*x345))+((x346*x351))+(((-0.41)*sj1))+(((-1.0)*px))+((cj4*x343))+(((0.27144)*x356))+(((0.0648043305514941)*x329))+(((-1.0)*x341*x346))+(((-1.0)*x343))+((x330*x345)));
evalcond[4]=(((cj3*r02*x349))+(((-1.0)*r00*x331*x332))+((x328*x329))+((cj3*x329*x336))+((cj4*x330*x352))+x357+(((-1.0)*r02*x339))+((sj3*x336*x351))+((x328*x330))+((cj3*x330*x336))+((cj3*r01*x334))+(((-1.0)*sj3*x336*x341))+((x339*x344))+((cj4*x329*x352)));
evalcond[5]=(((x334*x335))+(((-1.0)*sj5*x333*x336))+((cj3*r22*x349))+(((-1.0)*r20*x331*x332))+((r20*x334*x352))+((x338*x339))+((cj3*x336*x342))+((cj5*x335*x336))+(((-1.0)*x355))+x356+((sj3*x336*x350))+(((0.250000349687704)*x331*x333))+((x328*x342))+((x328*x348))+(((-1.0)*r22*x339)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x358=((0.433012903784321)*cj5);
IkReal x359=((0.433012903784321)*cj4);
IkReal x360=(cj5*r01);
IkReal x361=((0.866025201892125)*sj4);
IkReal x362=((0.250000349687704)*cj4);
IkReal x363=(cj5*r00);
IkReal x364=((0.500000349687582)*sj4);
IkReal x365=(r00*sj5);
IkReal x366=(r01*sj5);
CheckValue<IkReal> x367 = IKatan2WithCheck(IkReal(((((-1.0)*x363*x364))+(((-1.0)*x362*x365))+((x364*x366))+(((-1.0)*x360*x362))+(((-0.749999650312296)*x365))+(((-0.749999650312296)*x360))+(((0.433012903784321)*r02))+(((-1.0)*r02*x359)))),IkReal(((((-1.0)*r02*x361))+(((-1.0)*x360*x364))+((cj4*x363))+(((-1.0)*cj4*x366))+(((-1.0)*x364*x365)))),IKFAST_ATAN2_MAGTHRESH);
if(!x367.valid){
continue;
}
CheckValue<IkReal> x368=IKPowWithIntegerCheck(IKsign((((r21*(((((-1.0)*sj5*x361))+(((-1.0)*x358))+((cj4*x358))))))+((r20*((((sj5*x359))+((cj5*x361))+(((-0.433012903784321)*sj5))))))+((r22*(((0.250000349687704)+(((0.749999650312296)*cj4)))))))),-1);
if(!x368.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x367.value)+(((1.5707963267949)*(x368.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x369=IKsin(j3);
IkReal x370=IKcos(j3);
IkReal x371=(r11*sj5);
IkReal x372=(r10*sj5);
IkReal x373=(cj5*r20);
IkReal x374=(cj5*r11);
IkReal x375=(r00*sj5);
IkReal x376=(cj4*cj5);
IkReal x377=((0.500000349687582)*cj5);
IkReal x378=(r21*sj5);
IkReal x379=(r20*sj5);
IkReal x380=(r01*sj5);
IkReal x381=(sj4*x369);
IkReal x382=((1.0)*x369);
IkReal x383=((0.250000349687704)*x370);
IkReal x384=((0.749999650312296)*x370);
IkReal x385=((0.433012903784321)*cj4*r12);
IkReal x386=((0.749999650312296)*x369);
IkReal x387=(r12*x370);
IkReal x388=(cj4*x369);
IkReal x389=((0.500000349687582)*sj4*x370);
IkReal x390=((0.250000349687704)*x388);
IkReal x391=((0.433012903784321)*r02*x370);
IkReal x392=((0.433012903784321)*r22*x370);
evalcond[0]=(((x378*x388))+((x378*x389))+(((0.866025201892125)*r22*x381))+(((-1.0)*x373*x389))+(((-1.0)*cj4*x373*x382))+(((-1.0)*cj4*x392))+(((-1.0)*r21*x376*x383))+(((-1.0)*x379*x384))+x392+(((-1.0)*cj5*r21*x384))+(((-1.0)*cj4*x379*x383))+((r21*x377*x381))+(((0.500000349687582)*x379*x381)));
evalcond[1]=(((r01*x377*x381))+(((-1.0)*cj4*x391))+(((-1.0)*cj5*r01*x384))+(((-1.0)*x375*x384))+(((0.500000349687582)*x375*x381))+(((-1.0)*r00*x376*x382))+x391+(((-1.0)*r00*sj4*x370*x377))+(((-1.0)*cj4*x375*x383))+((x380*x389))+((x380*x388))+(((0.866025201892125)*r02*x381))+(((-1.0)*r01*x376*x383)));
evalcond[2]=(((x372*x389))+((x372*x386))+(((-0.500000349687582)*x371*x381))+((x374*x386))+((x374*x389))+(((0.866025201892125)*sj4*x387))+(((-1.0)*r10*x370*x376))+((x372*x390))+((cj4*x370*x371))+(((-0.433012903784321)*r12*x369))+((x369*x385))+((r10*x377*x381))+((x374*x390)));
evalcond[3]=((1.0)+(((-1.0)*cj4*x374*x383))+(((-1.0)*r10*sj4*x370*x377))+(((-1.0)*x374*x384))+(((0.500000349687582)*x374*x381))+(((0.433012903784321)*x387))+(((0.500000349687582)*x372*x381))+(((0.866025201892125)*r12*x381))+((x371*x388))+((x371*x389))+(((-1.0)*x370*x385))+(((-1.0)*r10*x376*x382))+(((-1.0)*x372*x384))+(((-1.0)*cj4*x372*x383)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x393=((0.26409636501044)*cj4);
IkReal x394=(r20*sj5);
IkReal x395=(cj5*r21);
IkReal x396=((0.457427895740576)*cj4);
IkReal x397=(r00*sj5);
IkReal x398=((0.528192360616262)*sj4);
IkReal x399=(cj5*r01);
if( IKabs(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*r02*x396))+(((0.444735007694415)*x399))+(((0.444735007694415)*x397))+((r01*sj5*x398))+(((-1.0)*cj5*r00*x398))+(((-1.0)*x393*x399))+(((-1.0)*x393*x397)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x398))+((r22*x396))+(((-0.444735007694415)*x395))+(((-0.444735007694415)*x394))+((cj5*r20*x398))+((x393*x394))+((x393*x395))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*r02*x396))+(((0.444735007694415)*x399))+(((0.444735007694415)*x397))+((r01*sj5*x398))+(((-1.0)*cj5*r00*x398))+(((-1.0)*x393*x399))+(((-1.0)*x393*x397))))+IKsqr(((((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x398))+((r22*x396))+(((-0.444735007694415)*x395))+(((-0.444735007694415)*x394))+((cj5*r20*x398))+((x393*x394))+((x393*x395))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*r02*x396))+(((0.444735007694415)*x399))+(((0.444735007694415)*x397))+((r01*sj5*x398))+(((-1.0)*cj5*r00*x398))+(((-1.0)*x393*x399))+(((-1.0)*x393*x397))), ((((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x398))+((r22*x396))+(((-0.444735007694415)*x395))+(((-0.444735007694415)*x394))+((cj5*r20*x398))+((x393*x394))+((x393*x395))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x400=((1.0)*px);
IkReal x401=((0.187545437253636)*cj4);
IkReal x402=(r20*sj5);
IkReal x403=(r01*sj3);
IkReal x404=(cj5*r21);
IkReal x405=(cj3*r00);
IkReal x406=((0.0185150129489311)*sj4);
IkReal x407=(r21*sj5);
IkReal x408=((0.20357990508077)*sj3);
IkReal x409=(cj5*sj4);
IkReal x410=((0.135720094919197)*sj3);
IkReal x411=(cj4*cj5);
IkReal x412=(r00*sj5);
IkReal x413=((0.00925751294893567)*cj4);
IkReal x414=((0.10827950965428)*cj4);
IkReal x415=(cj4*r22);
IkReal x416=((0.117537022603216)*sj3);
IkReal x417=(cj5*r01);
IkReal x418=((0.135720094919197)*cj3);
IkReal x419=(r01*sj5);
IkReal x420=((0.216558867852667)*sj4);
IkReal x421=(cj4*r02);
IkReal x422=((0.27144)*cj3);
IkReal x423=((0.41)*(IKsin(j1)));
IkReal x424=((0.41)*(IKcos(j1)));
IkReal x425=((0.135720094919197)*sj4*sj5);
IkReal x426=((0.0678600949192303)*cj4*sj3);
IkReal x427=((0.235073880801598)*cj3*sj4);
IkReal x428=(x400+x423);
evalcond[0]=(((x404*x414))+((r22*x401))+(((-1.0)*x424))+(((-0.18234135315471)*x404))+(((-0.18234135315471)*x402))+(((0.216558867852667)*r20*x409))+pz+(((-1.0)*x407*x420))+((x402*x414))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-1.0)*x412*x414))+(((-1.0)*x428))+(((-1.0)*r02*x401))+(((-0.0838945627463637)*r02))+(((0.18234135315471)*x417))+(((0.18234135315471)*x412))+((x419*x420))+(((-0.10827950965428)*r01*x411))+(((-0.216558867852667)*r00*x409)));
evalcond[2]=((((-1.0)*x406*x419))+(((-1.0)*cj4*x407*x422))+(((-0.0160344678271334)*r02))+(((-1.0)*x428))+((r22*x416))+((r20*x411*x422))+((cj5*r00*x406))+(((-1.0)*sj4*x404*x418))+(((-1.0)*x402*x408))+(((0.0160344678271334)*x421))+(((-1.0)*x404*x408))+(((-1.0)*x404*x426))+(((0.0648043305514941)*x417))+(((0.0648043305514941)*x412))+(((0.00925751294893567)*r01*x411))+(((-1.0)*sj4*x402*x418))+((x412*x413))+(((-1.0)*x415*x416))+((sj4*x407*x410))+(((-1.0)*r20*x409*x410))+(((-1.0)*x402*x426))+(((-1.0)*r22*x427)));
evalcond[3]=(((r00*x409*x410))+((x404*x413))+((r01*x409*x418))+(((-1.0)*x406*x407))+(((-0.27144)*x405*x411))+(((-1.0)*r02*x416))+(((0.0160344678271334)*x415))+((r02*x427))+(((-0.0160344678271334)*r22))+((x408*x412))+((x405*x425))+((x416*x421))+(((0.20357990508077)*cj5*x403))+(((-1.0)*pz))+(((0.0648043305514941)*x404))+(((0.0648043305514941)*x402))+x424+(((0.0678600949192303)*x403*x411))+((x412*x426))+((x402*x413))+((cj5*r20*x406))+((cj4*x419*x422))+(((-1.0)*x403*x425)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x429=((0.250000349687704)*sj1);
IkReal x430=(cj1*cj4);
IkReal x431=((0.749999650312296)*r22);
IkReal x432=(cj4*sj1);
IkReal x433=((0.749999650312296)*r02);
IkReal x434=((0.250000349687704)*cj1);
IkReal x435=((0.433012903784321)*r00*sj5);
IkReal x436=((0.433012903784321)*r20*sj5);
IkReal x437=((0.433012903784321)*cj5*r01);
IkReal x438=((0.433012903784321)*cj5*r21);
IkReal x439=((0.866025201892125)*cj5*sj1*sj4);
IkReal x440=((0.866025201892125)*cj1*cj5*sj4);
IkReal x441=((0.866025201892125)*r01*sj4*sj5);
IkReal x442=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*sj1*x438))+(((-1.0)*sj1*x436))+((r02*x434))+(((-1.0)*cj1*x437))+(((-1.0)*cj1*x435))+(((-1.0)*cj1*x441))+((r22*x429))+((x430*x437))+((x430*x435))+((x430*x433))+((x431*x432))+((r00*x440))+((x432*x436))+((x432*x438))+((r20*x439))+(((-1.0)*sj1*x442)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj1*x441))+(((-1.0)*x432*x437))+(((-1.0)*x432*x435))+(((-1.0)*x432*x433))+(((-1.0)*cj1*x438))+(((-1.0)*cj1*x436))+(((-1.0)*cj1*x442))+(((-1.0)*r02*x429))+((r22*x434))+((x430*x436))+((x430*x438))+((x430*x431))+(((-1.0)*r00*x439))+((r20*x440))+((sj1*x437))+((sj1*x435)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj1*x438))+(((-1.0)*sj1*x436))+((r02*x434))+(((-1.0)*cj1*x437))+(((-1.0)*cj1*x435))+(((-1.0)*cj1*x441))+((r22*x429))+((x430*x437))+((x430*x435))+((x430*x433))+((x431*x432))+((r00*x440))+((x432*x436))+((x432*x438))+((r20*x439))+(((-1.0)*sj1*x442))))+IKsqr((((sj1*x441))+(((-1.0)*x432*x437))+(((-1.0)*x432*x435))+(((-1.0)*x432*x433))+(((-1.0)*cj1*x438))+(((-1.0)*cj1*x436))+(((-1.0)*cj1*x442))+(((-1.0)*r02*x429))+((r22*x434))+((x430*x436))+((x430*x438))+((x430*x431))+(((-1.0)*r00*x439))+((r20*x440))+((sj1*x437))+((sj1*x435))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*sj1*x438))+(((-1.0)*sj1*x436))+((r02*x434))+(((-1.0)*cj1*x437))+(((-1.0)*cj1*x435))+(((-1.0)*cj1*x441))+((r22*x429))+((x430*x437))+((x430*x435))+((x430*x433))+((x431*x432))+((r00*x440))+((x432*x436))+((x432*x438))+((r20*x439))+(((-1.0)*sj1*x442))), (((sj1*x441))+(((-1.0)*x432*x437))+(((-1.0)*x432*x435))+(((-1.0)*x432*x433))+(((-1.0)*cj1*x438))+(((-1.0)*cj1*x436))+(((-1.0)*cj1*x442))+(((-1.0)*r02*x429))+((r22*x434))+((x430*x436))+((x430*x438))+((x430*x431))+(((-1.0)*r00*x439))+((r20*x440))+((sj1*x437))+((sj1*x435))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x443=IKsin(j2);
IkReal x444=IKcos(j2);
IkReal x445=((0.749999650312296)*sj3);
IkReal x446=(cj5*r01);
IkReal x447=(r00*sj5);
IkReal x448=(cj4*cj5);
IkReal x449=((1.0)*cj3);
IkReal x450=(r21*sj3);
IkReal x451=(cj4*sj5);
IkReal x452=(cj3*r21);
IkReal x453=((0.500000349687582)*sj4);
IkReal x454=((0.433012903784321)*r20);
IkReal x455=(cj4*r22);
IkReal x456=((0.433012903784321)*sj3);
IkReal x457=((0.433012903784321)*cj4);
IkReal x458=(r01*sj5);
IkReal x459=(r20*sj5);
IkReal x460=((0.0160344678271334)*r02);
IkReal x461=(cj4*r02);
IkReal x462=((0.00925751294893567)*cj4);
IkReal x463=((0.0185150129489311)*sj4);
IkReal x464=(r21*sj5);
IkReal x465=(cj5*r21);
IkReal x466=((0.866025201892125)*sj4);
IkReal x467=(cj5*r20);
IkReal x468=(cj5*r00);
IkReal x469=((0.250000349687704)*sj3);
IkReal x470=(cj1*x444);
IkReal x471=(sj1*x443);
IkReal x472=(cj1*x443);
IkReal x473=(sj1*x444);
IkReal x474=(x470+x471);
evalcond[0]=((((-1.0)*x466*x467))+(((-0.250000349687704)*r22))+(((-0.433012903784321)*r21*x448))+x474+(((-0.749999650312296)*x455))+(((0.433012903784321)*x465))+(((-1.0)*x451*x454))+((x464*x466))+((sj5*x454)));
evalcond[1]=((((-1.0)*x446*x457))+(((-1.0)*x466*x468))+(((-0.250000349687704)*r02))+(((-1.0)*x447*x457))+(((-1.0)*x473))+(((-0.749999650312296)*x461))+x472+(((0.433012903784321)*x447))+(((0.433012903784321)*x446))+((x458*x466)));
evalcond[2]=((((-1.0)*x463*x464))+(((0.0648043305514941)*x459))+(((0.41)*cj1))+(((0.0648043305514941)*x465))+((x463*x467))+(((-0.0160344678271334)*r22))+(((0.00925751294893567)*r20*x451))+(((-0.27144)*x470))+(((-0.27144)*x471))+(((-1.0)*pz))+(((0.0160344678271334)*x455))+(((0.00925751294893567)*r21*x448)));
evalcond[3]=(((cj4*x460))+((x463*x468))+(((0.0648043305514941)*x447))+(((0.0648043305514941)*x446))+(((-0.27144)*x472))+(((0.27144)*x473))+(((-1.0)*x460))+(((-0.41)*sj1))+((x446*x462))+(((-1.0)*px))+((x447*x462))+(((-1.0)*x458*x463)));
evalcond[4]=(((x456*x461))+(((-1.0)*sj3*x453*x458))+((sj3*x453*x468))+(((-1.0)*r00*x448*x449))+((cj3*x446*x453))+x474+((cj3*x447*x453))+((x445*x447))+((x445*x446))+((cj4*x446*x469))+((cj3*r01*x451))+((cj4*x447*x469))+(((-1.0)*r02*x456))+((cj3*r02*x466)));
evalcond[5]=(((r20*x451*x469))+((cj3*x453*x459))+((x455*x456))+(((-1.0)*r20*x448*x449))+((sj3*x453*x467))+(((-1.0)*x472))+(((0.250000349687704)*x448*x450))+x473+(((-1.0)*r22*x456))+((x445*x459))+((x451*x452))+((x445*x465))+((cj5*x452*x453))+(((-1.0)*sj5*x450*x453))+((cj3*r22*x466)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x475=((0.433012903784321)*cj5);
IkReal x476=((0.866025201892125)*sj4);
IkReal x477=((0.433012903784321)*r22);
IkReal x478=(cj4*sj5);
IkReal x479=(cj5*r21);
IkReal x480=(r20*sj5);
IkReal x481=((0.500000349687582)*sj4);
IkReal x482=(cj5*x481);
CheckValue<IkReal> x483 = IKatan2WithCheck(IkReal(((((-0.250000349687704)*cj4*x479))+(((-1.0)*cj4*x477))+(((-0.749999650312296)*x480))+(((-0.749999650312296)*x479))+x477+(((-0.250000349687704)*r20*x478))+(((-1.0)*r20*x482))+((r21*sj5*x481)))),IkReal(((((-1.0)*r21*x478))+(((-1.0)*r22*x476))+(((-1.0)*x480*x481))+((cj4*cj5*r20))+(((-1.0)*x479*x481)))),IKFAST_ATAN2_MAGTHRESH);
if(!x483.valid){
continue;
}
CheckValue<IkReal> x484=IKPowWithIntegerCheck(IKsign((((r02*(((-0.250000349687704)+(((-0.749999650312296)*cj4))))))+((r01*((((sj5*x476))+(((-1.0)*cj4*x475))+x475))))+((r00*(((((-1.0)*cj5*x476))+(((-0.433012903784321)*x478))+(((0.433012903784321)*sj5)))))))),-1);
if(!x484.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x483.value)+(((1.5707963267949)*(x484.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x485=IKsin(j3);
IkReal x486=IKcos(j3);
IkReal x487=(r11*sj5);
IkReal x488=(r10*sj5);
IkReal x489=(cj5*r20);
IkReal x490=(cj5*r11);
IkReal x491=(r00*sj5);
IkReal x492=(cj4*cj5);
IkReal x493=((0.500000349687582)*cj5);
IkReal x494=(r21*sj5);
IkReal x495=(r20*sj5);
IkReal x496=(r01*sj5);
IkReal x497=(sj4*x485);
IkReal x498=((1.0)*x485);
IkReal x499=((0.250000349687704)*x486);
IkReal x500=((0.749999650312296)*x486);
IkReal x501=((0.433012903784321)*cj4*r12);
IkReal x502=((0.749999650312296)*x485);
IkReal x503=(r12*x486);
IkReal x504=(cj4*x485);
IkReal x505=((0.500000349687582)*sj4*x486);
IkReal x506=((0.250000349687704)*x504);
IkReal x507=((0.433012903784321)*r02*x486);
IkReal x508=((0.433012903784321)*r22*x486);
evalcond[0]=((((-1.0)*x489*x505))+(((-1.0)*cj4*x489*x498))+((x494*x505))+((x494*x504))+(((-1.0)*cj4*x508))+(((-1.0)*x495*x500))+(((-1.0)*cj4*x495*x499))+(((-1.0)*cj5*r21*x500))+x508+(((0.500000349687582)*x495*x497))+(((0.866025201892125)*r22*x497))+((r21*x493*x497))+(((-1.0)*r21*x492*x499)));
evalcond[1]=((((-1.0)*r01*x492*x499))+(((-1.0)*cj4*x507))+(((-1.0)*x491*x500))+((x496*x504))+((x496*x505))+(((0.866025201892125)*r02*x497))+x507+(((-1.0)*cj4*x491*x499))+((r01*x493*x497))+(((-1.0)*r00*x492*x498))+(((0.500000349687582)*x491*x497))+(((-1.0)*cj5*r01*x500))+(((-1.0)*r00*sj4*x486*x493)));
evalcond[2]=((((0.866025201892125)*sj4*x503))+((x488*x502))+((x488*x506))+((x488*x505))+((r10*x493*x497))+((x490*x502))+((x490*x506))+((x490*x505))+(((-0.500000349687582)*x487*x497))+((x485*x501))+(((-0.433012903784321)*r12*x485))+((cj4*x486*x487))+(((-1.0)*r10*x486*x492)));
evalcond[3]=((1.0)+(((-1.0)*cj4*x490*x499))+(((-1.0)*x488*x500))+(((0.433012903784321)*x503))+((x487*x504))+((x487*x505))+(((-1.0)*r10*x492*x498))+(((0.500000349687582)*x490*x497))+(((-1.0)*x490*x500))+(((-1.0)*r10*sj4*x486*x493))+(((0.500000349687582)*x488*x497))+(((-1.0)*x486*x501))+(((0.866025201892125)*r12*x497))+(((-1.0)*cj4*x488*x499)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x509=((0.26409636501044)*cj4);
IkReal x510=(r20*sj5);
IkReal x511=(cj5*r21);
IkReal x512=((0.457427895740576)*cj4);
IkReal x513=(r00*sj5);
IkReal x514=((0.528192360616262)*sj4);
IkReal x515=(cj5*r01);
if( IKabs(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+((r01*sj5*x514))+(((-1.0)*cj5*r00*x514))+(((0.444735007694415)*x515))+(((0.444735007694415)*x513))+(((-1.0)*r02*x512))+(((-1.0)*x509*x513))+(((-1.0)*x509*x515)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+((cj5*r20*x514))+(((-1.0)*r21*sj5*x514))+(((-0.444735007694415)*x511))+(((-0.444735007694415)*x510))+((r22*x512))+(((2.4390243902439)*pz))+((x509*x510))+((x509*x511)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+((r01*sj5*x514))+(((-1.0)*cj5*r00*x514))+(((0.444735007694415)*x515))+(((0.444735007694415)*x513))+(((-1.0)*r02*x512))+(((-1.0)*x509*x513))+(((-1.0)*x509*x515))))+IKsqr(((((0.204620884747229)*r22))+((cj5*r20*x514))+(((-1.0)*r21*sj5*x514))+(((-0.444735007694415)*x511))+(((-0.444735007694415)*x510))+((r22*x512))+(((2.4390243902439)*pz))+((x509*x510))+((x509*x511))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+((r01*sj5*x514))+(((-1.0)*cj5*r00*x514))+(((0.444735007694415)*x515))+(((0.444735007694415)*x513))+(((-1.0)*r02*x512))+(((-1.0)*x509*x513))+(((-1.0)*x509*x515))), ((((0.204620884747229)*r22))+((cj5*r20*x514))+(((-1.0)*r21*sj5*x514))+(((-0.444735007694415)*x511))+(((-0.444735007694415)*x510))+((r22*x512))+(((2.4390243902439)*pz))+((x509*x510))+((x509*x511))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x516=((1.0)*px);
IkReal x517=((0.187545437253636)*cj4);
IkReal x518=(r20*sj5);
IkReal x519=(r01*sj3);
IkReal x520=(cj5*r21);
IkReal x521=(cj3*r00);
IkReal x522=((0.0185150129489311)*sj4);
IkReal x523=(r21*sj5);
IkReal x524=((0.20357990508077)*sj3);
IkReal x525=(cj5*sj4);
IkReal x526=((0.135720094919197)*sj3);
IkReal x527=(cj4*cj5);
IkReal x528=(r00*sj5);
IkReal x529=((0.00925751294893567)*cj4);
IkReal x530=((0.10827950965428)*cj4);
IkReal x531=(cj4*r22);
IkReal x532=((0.117537022603216)*sj3);
IkReal x533=(cj5*r01);
IkReal x534=((0.135720094919197)*cj3);
IkReal x535=(r01*sj5);
IkReal x536=((0.216558867852667)*sj4);
IkReal x537=(cj4*r02);
IkReal x538=((0.27144)*cj3);
IkReal x539=((0.41)*(IKsin(j1)));
IkReal x540=((0.41)*(IKcos(j1)));
IkReal x541=((0.135720094919197)*sj4*sj5);
IkReal x542=((0.0678600949192303)*cj4*sj3);
IkReal x543=((0.235073880801598)*cj3*sj4);
IkReal x544=(x539+x516);
evalcond[0]=((((-0.18234135315471)*x520))+(((-1.0)*x523*x536))+(((-0.18234135315471)*x518))+((x518*x530))+(((-1.0)*x540))+pz+((x520*x530))+((r22*x517))+(((0.216558867852667)*r20*x525))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-0.216558867852667)*r00*x525))+(((-0.10827950965428)*r01*x527))+(((-0.0838945627463637)*r02))+(((-1.0)*x544))+(((-1.0)*x528*x530))+(((-1.0)*r02*x517))+(((0.18234135315471)*x533))+(((0.18234135315471)*x528))+((x535*x536)));
evalcond[2]=((((-1.0)*r22*x543))+(((-1.0)*x520*x524))+(((-0.0160344678271334)*r02))+(((-1.0)*cj4*x523*x538))+((r20*x527*x538))+(((-1.0)*x520*x542))+(((-1.0)*x531*x532))+(((-1.0)*x544))+(((0.0160344678271334)*x537))+(((0.0648043305514941)*x528))+(((0.0648043305514941)*x533))+((r22*x532))+(((-1.0)*x518*x542))+(((-1.0)*x518*x524))+(((-1.0)*sj4*x518*x534))+(((-1.0)*x522*x535))+(((-1.0)*sj4*x520*x534))+((x528*x529))+(((0.00925751294893567)*r01*x527))+((cj5*r00*x522))+((sj4*x523*x526))+(((-1.0)*r20*x525*x526)));
evalcond[3]=(((r01*x525*x534))+((r02*x543))+((cj5*r20*x522))+(((-0.0160344678271334)*r22))+((cj4*x535*x538))+(((0.0648043305514941)*x518))+(((-1.0)*r02*x532))+(((0.0160344678271334)*x531))+(((0.0648043305514941)*x520))+((x518*x529))+(((-0.27144)*x521*x527))+(((-1.0)*pz))+((x521*x541))+((r00*x525*x526))+((x520*x529))+x540+((x524*x528))+(((0.20357990508077)*cj5*x519))+(((-1.0)*x522*x523))+((x532*x537))+((x528*x542))+(((-1.0)*x519*x541))+(((0.0678600949192303)*x519*x527)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x545=((0.250000349687704)*sj1);
IkReal x546=(cj1*cj4);
IkReal x547=((0.749999650312296)*r22);
IkReal x548=(cj4*sj1);
IkReal x549=((0.749999650312296)*r02);
IkReal x550=((0.250000349687704)*cj1);
IkReal x551=((0.433012903784321)*r00*sj5);
IkReal x552=((0.433012903784321)*r20*sj5);
IkReal x553=((0.433012903784321)*cj5*r01);
IkReal x554=((0.433012903784321)*cj5*r21);
IkReal x555=((0.866025201892125)*cj5*sj1*sj4);
IkReal x556=((0.866025201892125)*cj1*cj5*sj4);
IkReal x557=((0.866025201892125)*r01*sj4*sj5);
IkReal x558=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x548*x552))+((x548*x554))+(((-1.0)*cj1*x551))+(((-1.0)*cj1*x557))+(((-1.0)*cj1*x553))+((r02*x550))+((r20*x555))+((x547*x548))+(((-1.0)*sj1*x558))+(((-1.0)*sj1*x554))+(((-1.0)*sj1*x552))+((r22*x545))+((x546*x551))+((x546*x553))+((r00*x556))+((x546*x549)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj1*x557))+((sj1*x551))+((sj1*x553))+(((-1.0)*cj1*x558))+(((-1.0)*cj1*x552))+(((-1.0)*cj1*x554))+((r20*x556))+(((-1.0)*r00*x555))+(((-1.0)*x548*x553))+(((-1.0)*x548*x551))+(((-1.0)*r02*x545))+(((-1.0)*x548*x549))+((r22*x550))+((x546*x552))+((x546*x554))+((x546*x547)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x548*x552))+((x548*x554))+(((-1.0)*cj1*x551))+(((-1.0)*cj1*x557))+(((-1.0)*cj1*x553))+((r02*x550))+((r20*x555))+((x547*x548))+(((-1.0)*sj1*x558))+(((-1.0)*sj1*x554))+(((-1.0)*sj1*x552))+((r22*x545))+((x546*x551))+((x546*x553))+((r00*x556))+((x546*x549))))+IKsqr((((sj1*x557))+((sj1*x551))+((sj1*x553))+(((-1.0)*cj1*x558))+(((-1.0)*cj1*x552))+(((-1.0)*cj1*x554))+((r20*x556))+(((-1.0)*r00*x555))+(((-1.0)*x548*x553))+(((-1.0)*x548*x551))+(((-1.0)*r02*x545))+(((-1.0)*x548*x549))+((r22*x550))+((x546*x552))+((x546*x554))+((x546*x547))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x548*x552))+((x548*x554))+(((-1.0)*cj1*x551))+(((-1.0)*cj1*x557))+(((-1.0)*cj1*x553))+((r02*x550))+((r20*x555))+((x547*x548))+(((-1.0)*sj1*x558))+(((-1.0)*sj1*x554))+(((-1.0)*sj1*x552))+((r22*x545))+((x546*x551))+((x546*x553))+((r00*x556))+((x546*x549))), (((sj1*x557))+((sj1*x551))+((sj1*x553))+(((-1.0)*cj1*x558))+(((-1.0)*cj1*x552))+(((-1.0)*cj1*x554))+((r20*x556))+(((-1.0)*r00*x555))+(((-1.0)*x548*x553))+(((-1.0)*x548*x551))+(((-1.0)*r02*x545))+(((-1.0)*x548*x549))+((r22*x550))+((x546*x552))+((x546*x554))+((x546*x547))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x559=IKsin(j2);
IkReal x560=IKcos(j2);
IkReal x561=((0.749999650312296)*sj3);
IkReal x562=(cj5*r01);
IkReal x563=(r00*sj5);
IkReal x564=(cj4*cj5);
IkReal x565=((1.0)*cj3);
IkReal x566=(r21*sj3);
IkReal x567=(cj4*sj5);
IkReal x568=(cj3*r21);
IkReal x569=((0.500000349687582)*sj4);
IkReal x570=((0.433012903784321)*r20);
IkReal x571=(cj4*r22);
IkReal x572=((0.433012903784321)*sj3);
IkReal x573=((0.433012903784321)*cj4);
IkReal x574=(r01*sj5);
IkReal x575=(r20*sj5);
IkReal x576=((0.0160344678271334)*r02);
IkReal x577=(cj4*r02);
IkReal x578=((0.00925751294893567)*cj4);
IkReal x579=((0.0185150129489311)*sj4);
IkReal x580=(r21*sj5);
IkReal x581=(cj5*r21);
IkReal x582=((0.866025201892125)*sj4);
IkReal x583=(cj5*r20);
IkReal x584=(cj5*r00);
IkReal x585=((0.250000349687704)*sj3);
IkReal x586=(cj1*x560);
IkReal x587=(sj1*x559);
IkReal x588=(cj1*x559);
IkReal x589=(sj1*x560);
IkReal x590=(x586+x587);
evalcond[0]=((((-0.250000349687704)*r22))+(((-0.749999650312296)*x571))+((x580*x582))+(((-1.0)*x582*x583))+(((0.433012903784321)*x581))+x590+(((-1.0)*x567*x570))+(((-0.433012903784321)*r21*x564))+((sj5*x570)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x589))+(((-0.749999650312296)*x577))+(((-1.0)*x582*x584))+(((0.433012903784321)*x562))+(((0.433012903784321)*x563))+((x574*x582))+(((-1.0)*x563*x573))+x588+(((-1.0)*x562*x573)));
evalcond[2]=((((0.00925751294893567)*r20*x567))+((x579*x583))+(((0.00925751294893567)*r21*x564))+(((0.0648043305514941)*x581))+(((0.0648043305514941)*x575))+(((0.41)*cj1))+(((-1.0)*x579*x580))+(((-0.0160344678271334)*r22))+(((-0.27144)*x587))+(((-0.27144)*x586))+(((-1.0)*pz))+(((0.0160344678271334)*x571)));
evalcond[3]=((((0.27144)*x589))+((x579*x584))+((x563*x578))+(((0.0648043305514941)*x563))+(((0.0648043305514941)*x562))+(((-0.27144)*x588))+(((-0.41)*sj1))+(((-1.0)*x574*x579))+((x562*x578))+(((-1.0)*px))+(((-1.0)*x576))+((cj4*x576)));
evalcond[4]=(((cj4*x563*x585))+((cj3*r02*x582))+((cj3*x562*x569))+((sj3*x569*x584))+((x561*x562))+((x561*x563))+x590+(((-1.0)*r00*x564*x565))+(((-1.0)*r02*x572))+((cj4*x562*x585))+((x572*x577))+((cj3*r01*x567))+((cj3*x563*x569))+(((-1.0)*sj3*x569*x574)));
evalcond[5]=((((0.250000349687704)*x564*x566))+(((-1.0)*r20*x564*x565))+((x561*x575))+((x571*x572))+(((-1.0)*x588))+((x561*x581))+((r20*x567*x585))+((sj3*x569*x583))+((x567*x568))+((cj3*r22*x582))+x589+((cj3*x569*x575))+((cj5*x568*x569))+(((-1.0)*r22*x572))+(((-1.0)*sj5*x566*x569)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[2];
sj0=0;
cj0=-1.0;
j0=3.14159265358979;
IkReal x591=(cj5*r01);
IkReal x592=(cj4*r02);
IkReal x593=(r00*sj5);
IkReal x594=((0.433012903784321)*cj4);
IkReal x595=((1.73204919243206)*cj4);
IkReal x596=(r01*sj4*sj5);
IkReal x597=(cj5*r00*sj4);
j3eval[0]=((((-1.73204919243206)*x593))+(((-1.73204919243206)*x591))+(((2.99999440500457)*x592))+r02+((x591*x595))+((x593*x595))+(((3.46409596216145)*x597))+(((-3.46409596216145)*x596)));
j3eval[1]=IKsign(((((0.250000349687704)*r02))+(((-0.433012903784321)*x593))+(((-0.433012903784321)*x591))+(((-0.866025201892125)*x596))+(((0.749999650312296)*x592))+(((0.866025201892125)*x597))+((x591*x594))+((x593*x594))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=0;
cj0=-1.0;
j0=3.14159265358979;
IkReal x598=(cj4*r22);
IkReal x599=(cj5*r21);
IkReal x600=((0.866025201892125)*sj4);
IkReal x601=(cj5*r20);
IkReal x602=(r21*sj5);
IkReal x603=((3.46409596216145)*sj4);
IkReal x604=(r20*sj5);
IkReal x605=(cj4*x604);
j3eval[0]=((((-2.99999440500457)*x598))+(((-1.73204919243206)*x605))+(((-1.73204919243206)*cj4*x599))+(((1.73204919243206)*x604))+(((1.73204919243206)*x599))+(((-1.0)*r22))+((x602*x603))+(((-1.0)*x601*x603)));
j3eval[1]=IKsign(((((-0.250000349687704)*r22))+(((-0.749999650312296)*x598))+(((0.433012903784321)*x599))+((x600*x602))+(((-1.0)*x600*x601))+(((-0.433012903784321)*cj4*x599))+(((0.433012903784321)*x604))+(((-0.433012903784321)*x605))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=0;
cj0=-1.0;
j0=3.14159265358979;
IkReal x606=cj5*cj5;
IkReal x607=r11*r11;
IkReal x608=cj4*cj4;
IkReal x609=r10*r10;
IkReal x610=r12*r12;
IkReal x611=(r10*sj5);
IkReal x612=((0.216506754730737)*r12);
IkReal x613=(cj5*r11);
IkReal x614=((1.15470161513813)*r12);
IkReal x615=(r11*sj4);
IkReal x616=(cj4*r12);
IkReal x617=(cj5*sj4);
IkReal x618=((3.9999972025013)*sj5);
IkReal x619=((0.375000349687459)*cj4);
IkReal x620=((2.0)*cj4);
IkReal x621=(cj4*r10);
IkReal x622=((0.433013206622791)*r12);
IkReal x623=((0.750000174843424)*sj5);
IkReal x624=((2.30940161513813)*r12);
IkReal x625=((4.99999440500457)*x606);
IkReal x626=(r10*x606);
IkReal x627=(cj4*x609);
IkReal x628=(x607*x608);
IkReal x629=(x606*x607);
IkReal x630=((3.46409838486413)*r12*x608);
IkReal x631=(x606*x609);
IkReal x632=(x608*x609);
IkReal x633=((0.649519052837905)*r12*x608);
IkReal x634=(x608*x610);
IkReal x635=(cj4*sj5*x607*x617);
j3eval[0]=((((-1.0)*x617*x618*x627))+((x609*x617*x618))+(((7.99999440500261)*x615*x626))+(((2.99999440500457)*x629))+(((5.99998881000913)*x611*x613))+((x625*x632))+(((-7.99999440500261)*x606*x615*x621))+(((6.9281919243229)*sj5*x615*x616))+(((-2.99999440500457)*x631))+(((-2.99999440500457)*x634))+(((-1.0)*x620*x631))+(((-1.0)*x611*x630))+((x611*x614))+(((-1.0)*x607*x617*x618))+(((4.99999440500457)*x610))+(((3.99999440500457)*x628))+(((-1.0)*x610*x620))+((x609*x620))+(((2.309396769726)*x611*x616))+(((4.0)*cj4*x611*x613))+((x613*x614))+(((2.309396769726)*x613*x616))+((cj4*x607*x617*x618))+(((-1.0)*r10*x617*x624))+(((-9.99998881000913)*x608*x611*x613))+(((-1.0)*x625*x628))+(((4.33332836000522)*x609))+(((1.33333395500065)*x607))+(((-1.0)*x632))+(((-3.9999972025013)*r10*x615))+((sj5*x615*x624))+(((-6.9281919243229)*r10*x616*x617))+(((3.9999972025013)*x615*x621))+((x620*x629))+(((-1.0)*x613*x630)));
j3eval[1]=IKsign(((((-1.50000034968685)*x606*x615*x621))+(((1.12499895093713)*x611*x613))+(((-0.18750017484373)*x632))+(((0.750000699374918)*cj4*x611*x613))+(((0.562499475468567)*x629))+(((-1.0)*x610*x619))+(((-1.0)*x617*x623*x627))+(((-1.0)*x607*x617*x623))+(((-0.750000174843424)*r10*x615))+(((0.433012298107169)*x613*x616))+((x619*x629))+(((-1.0)*x611*x633))+((x611*x612))+(((-1.29903719716146)*r10*x616*x617))+(((0.749999650312296)*x628))+((x612*x613))+(((0.937499825156026)*x608*x631))+(((-0.937499825156026)*x606*x628))+(((0.433012298107169)*x611*x616))+(((0.250000349687704)*x607))+(((0.750000174843424)*x615*x621))+(((1.50000034968685)*x615*x626))+(((0.937499825156026)*x610))+(((-1.87499965031205)*x608*x611*x613))+(((1.29903719716146)*sj5*x615*x616))+(((-1.0)*r10*x617*x622))+(((-1.0)*x619*x631))+(((0.81249982515627)*x609))+((x609*x619))+(((-0.562499475468567)*x631))+(((-0.562499475468567)*x634))+((x609*x617*x623))+((cj4*x607*x617*x623))+((sj5*x615*x622))+(((-1.0)*x613*x633))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j1, j2, j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x636=r11*r11;
IkReal x637=cj5*cj5;
IkReal x638=r10*r10;
IkReal x639=cj4*cj4;
IkReal x640=r12*r12;
IkReal x641=(r10*sj5);
IkReal x642=((0.216506754730737)*r12);
IkReal x643=(cj5*r11);
IkReal x644=(r12*sj4);
IkReal x645=(r11*sj4);
IkReal x646=((0.375000349687459)*cj4);
IkReal x647=(cj4*r10);
IkReal x648=((0.433012903784321)*r12);
IkReal x649=(r11*sj5);
IkReal x650=(cj5*r10);
IkReal x651=((0.250000349687704)*cj4);
IkReal x652=((0.500000349687582)*sj4);
IkReal x653=((0.562499475468567)*x637);
IkReal x654=((1.50000034968685)*x637);
IkReal x655=((0.433012298107169)*cj4*r12);
IkReal x656=((0.937499825156026)*x637);
IkReal x657=(x636*x639);
IkReal x658=((0.649519052837905)*r12*x639);
IkReal x659=((0.750000174843424)*cj5*sj4*sj5);
IkReal x660=(x638*x639);
IkReal x661=(cj4*x659);
CheckValue<IkReal> x662=IKPowWithIntegerCheck(IKsign(((((1.29903719716146)*cj4*x644*x649))+((r10*x645*x654))+((x638*x646))+((x636*x653))+(((-1.0)*x638*x661))+(((-1.0)*x641*x658))+(((0.750000699374918)*cj4*x641*x643))+(((0.81249982515627)*x638))+(((-1.29903719716146)*cj5*x644*x647))+(((-0.562499475468567)*x639*x640))+(((-1.0)*x640*x646))+(((-0.18750017484373)*x660))+((x643*x655))+((x656*x660))+(((-1.0)*x656*x657))+(((0.749999650312296)*x657))+((x641*x642))+(((-1.0)*x645*x647*x654))+(((-0.433013206622791)*x644*x650))+(((1.12499895093713)*x641*x643))+((x641*x655))+(((-1.0)*x643*x658))+(((-0.750000174843424)*r10*x645))+(((-1.0)*x636*x659))+(((0.937499825156026)*x640))+((x636*x661))+(((0.433013206622791)*x644*x649))+(((-1.0)*x638*x653))+(((-1.0)*x637*x638*x646))+(((0.250000349687704)*x636))+(((0.750000174843424)*x645*x647))+((x642*x643))+((x638*x659))+(((-1.87499965031205)*x639*x641*x643))+((x636*x637*x646)))),-1);
if(!x662.valid){
continue;
}
CheckValue<IkReal> x663 = IKatan2WithCheck(IkReal((((cj4*x649))+((x643*x652))+(((0.866025201892125)*x644))+(((-1.0)*cj5*x647))+((x641*x652)))),IkReal(((((-0.749999650312296)*x641))+(((-0.749999650312296)*x643))+(((-1.0)*x641*x651))+(((0.500000349687582)*sj5*x645))+(((-1.0)*x643*x651))+x648+(((-1.0)*x650*x652))+(((-1.0)*cj4*x648)))),IKFAST_ATAN2_MAGTHRESH);
if(!x663.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x662.value)))+(x663.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x664=IKsin(j3);
IkReal x665=IKcos(j3);
IkReal x666=(r11*sj5);
IkReal x667=(r10*sj5);
IkReal x668=(cj5*r20);
IkReal x669=(cj5*r11);
IkReal x670=(r00*sj5);
IkReal x671=(cj4*cj5);
IkReal x672=((0.500000349687582)*cj5);
IkReal x673=(r21*sj5);
IkReal x674=(r20*sj5);
IkReal x675=(r01*sj5);
IkReal x676=(sj4*x664);
IkReal x677=((1.0)*x664);
IkReal x678=((0.250000349687704)*x665);
IkReal x679=((0.749999650312296)*x665);
IkReal x680=((0.433012903784321)*cj4*r12);
IkReal x681=((0.749999650312296)*x664);
IkReal x682=(r12*x665);
IkReal x683=(cj4*x664);
IkReal x684=((0.500000349687582)*sj4*x665);
IkReal x685=((0.250000349687704)*x683);
IkReal x686=((0.433012903784321)*r02*x665);
IkReal x687=((0.433012903784321)*r22*x665);
evalcond[0]=((((-1.0)*cj5*r21*x679))+(((-1.0)*cj4*x674*x678))+(((0.500000349687582)*x674*x676))+(((-1.0)*x668*x684))+(((-1.0)*cj4*x687))+(((-1.0)*cj4*x668*x677))+(((-1.0)*r21*x671*x678))+((r21*x672*x676))+((x673*x684))+((x673*x683))+x687+(((-1.0)*x674*x679))+(((0.866025201892125)*r22*x676)));
evalcond[1]=(((r01*x672*x676))+(((-1.0)*cj4*x686))+(((-1.0)*r00*x671*x677))+(((0.866025201892125)*r02*x676))+(((-1.0)*x670*x679))+(((-1.0)*cj5*r01*x679))+x686+(((-1.0)*r00*sj4*x665*x672))+(((-1.0)*r01*x671*x678))+((x675*x684))+((x675*x683))+(((0.500000349687582)*x670*x676))+(((-1.0)*cj4*x670*x678)));
evalcond[2]=(((x669*x685))+((x669*x684))+((x669*x681))+((cj4*x665*x666))+(((-0.500000349687582)*x666*x676))+((x667*x681))+((x667*x685))+((x667*x684))+(((-0.433012903784321)*r12*x664))+((x664*x680))+((r10*x672*x676))+(((-1.0)*r10*x665*x671))+(((0.866025201892125)*sj4*x682)));
evalcond[3]=((-1.0)+(((0.500000349687582)*x667*x676))+(((-1.0)*x665*x680))+(((-1.0)*cj4*x669*x678))+(((0.433012903784321)*x682))+(((-1.0)*r10*sj4*x665*x672))+((x666*x684))+((x666*x683))+(((-1.0)*x667*x679))+(((0.500000349687582)*x669*x676))+(((-1.0)*x669*x679))+(((0.866025201892125)*r12*x676))+(((-1.0)*cj4*x667*x678))+(((-1.0)*r10*x671*x677)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x688=(cj5*r21);
IkReal x689=((0.26409636501044)*cj4);
IkReal x690=((0.457427895740576)*cj4);
IkReal x691=((0.528192360616262)*sj4);
IkReal x692=(cj5*r01);
IkReal x693=((0.444735007694415)*sj5);
if( IKabs((((r00*sj5*x689))+(((-1.0)*r00*x693))+(((-1.0)*r01*sj5*x691))+(((-0.444735007694415)*x692))+((x689*x692))+((r02*x690))+(((0.204620884747229)*r02))+((cj5*r00*x691))+(((2.4390243902439)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+((x688*x689))+((r22*x690))+(((-1.0)*r20*x693))+((r20*sj5*x689))+(((-1.0)*r21*sj5*x691))+(((-0.444735007694415)*x688))+((cj5*r20*x691))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r00*sj5*x689))+(((-1.0)*r00*x693))+(((-1.0)*r01*sj5*x691))+(((-0.444735007694415)*x692))+((x689*x692))+((r02*x690))+(((0.204620884747229)*r02))+((cj5*r00*x691))+(((2.4390243902439)*px))))+IKsqr(((((0.204620884747229)*r22))+((x688*x689))+((r22*x690))+(((-1.0)*r20*x693))+((r20*sj5*x689))+(((-1.0)*r21*sj5*x691))+(((-0.444735007694415)*x688))+((cj5*r20*x691))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r00*sj5*x689))+(((-1.0)*r00*x693))+(((-1.0)*r01*sj5*x691))+(((-0.444735007694415)*x692))+((x689*x692))+((r02*x690))+(((0.204620884747229)*r02))+((cj5*r00*x691))+(((2.4390243902439)*px))), ((((0.204620884747229)*r22))+((x688*x689))+((r22*x690))+(((-1.0)*r20*x693))+((r20*sj5*x689))+(((-1.0)*r21*sj5*x691))+(((-0.444735007694415)*x688))+((cj5*r20*x691))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x694=((0.187545437253636)*cj4);
IkReal x695=(cj5*r20);
IkReal x696=(r01*sj5);
IkReal x697=(cj5*r21);
IkReal x698=(cj3*r00);
IkReal x699=(sj4*sj5);
IkReal x700=((0.20357990508077)*sj3);
IkReal x701=(r20*sj5);
IkReal x702=(cj4*cj5);
IkReal x703=((0.00925751294893567)*cj4);
IkReal x704=((0.117537022603216)*sj3);
IkReal x705=((0.10827950965428)*cj4);
IkReal x706=(r00*sj5);
IkReal x707=(cj4*r22);
IkReal x708=(r21*sj5);
IkReal x709=((0.216558867852667)*sj4);
IkReal x710=((0.0185150129489311)*sj4);
IkReal x711=(cj3*sj4);
IkReal x712=(cj4*r02);
IkReal x713=(cj5*r01);
IkReal x714=((0.41)*(IKcos(j1)));
IkReal x715=((0.41)*(IKsin(j1)));
IkReal x716=((0.135720094919197)*sj3*sj4);
IkReal x717=((0.0678600949192303)*cj4*sj3);
IkReal x718=(cj5*r00*sj4);
IkReal x719=((0.27144)*cj3*cj4);
evalcond[0]=(((r02*x694))+(((-0.18234135315471)*x713))+(((-1.0)*x715))+px+(((-0.18234135315471)*x706))+(((-1.0)*x696*x709))+(((0.10827950965428)*r01*x702))+((cj5*r00*x709))+((x705*x706))+(((0.0838945627463637)*r02)));
evalcond[1]=(((x701*x705))+(((-0.216558867852667)*r21*x699))+((x695*x709))+((r22*x694))+(((-0.18234135315471)*x697))+((x697*x705))+(((-1.0)*x714))+pz+(((-0.18234135315471)*x701))+(((0.0838945627463637)*r22)));
evalcond[2]=((((0.135720094919197)*x698*x699))+(((-1.0)*r02*x704))+(((0.135720094919197)*x711*x713))+(((0.0678600949192303)*r01*sj3*x702))+(((-0.0648043305514941)*x697))+((x700*x713))+((x700*x706))+(((-0.0648043305514941)*x701))+((x706*x717))+(((0.0185150129489311)*r21*x699))+(((-1.0)*x695*x710))+(((-0.0160344678271334)*x707))+(((-1.0)*x714))+pz+(((-0.27144)*x698*x702))+((x696*x719))+(((-1.0)*x696*x716))+(((0.0160344678271334)*r22))+((x704*x712))+(((-1.0)*x697*x703))+(((0.235073880801598)*r02*x711))+(((-1.0)*x701*x703))+((cj5*r00*x716)));
evalcond[3]=((((0.0648043305514941)*x706))+(((0.135720094919197)*x697*x711))+(((0.0648043305514941)*x713))+(((0.235073880801598)*r22*x711))+((x701*x717))+(((-0.0160344678271334)*r02))+((x700*x701))+(((0.0160344678271334)*x712))+((x703*x706))+(((-1.0)*x695*x719))+((x695*x716))+(((-1.0)*px))+((x697*x700))+((x697*x717))+(((-1.0)*x696*x710))+((x704*x707))+(((0.00925751294893567)*r01*x702))+x715+(((0.135720094919197)*cj3*r20*x699))+((x708*x719))+((cj5*r00*x710))+(((-1.0)*r22*x704))+(((-0.135720094919197)*r21*sj3*x699)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x720=(r02*sj1);
IkReal x721=(cj1*cj4);
IkReal x722=((0.749999650312296)*r22);
IkReal x723=(cj4*sj1);
IkReal x724=((0.250000349687704)*r22);
IkReal x725=((0.433012903784321)*r00*sj5);
IkReal x726=((0.433012903784321)*r20*sj5);
IkReal x727=((0.433012903784321)*cj5*r01);
IkReal x728=((0.433012903784321)*cj5*r21);
IkReal x729=((0.866025201892125)*cj5*sj1*sj4);
IkReal x730=((0.866025201892125)*cj1*cj5*sj4);
IkReal x731=((0.866025201892125)*r01*sj4*sj5);
IkReal x732=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((cj1*x727))+((cj1*x725))+(((-0.749999650312296)*r02*x721))+((x723*x726))+((x723*x728))+((r20*x729))+((x722*x723))+(((-1.0)*x721*x725))+(((-1.0)*x721*x727))+(((-1.0)*sj1*x728))+(((-1.0)*sj1*x726))+(((-1.0)*sj1*x732))+(((-0.250000349687704)*cj1*r02))+((sj1*x724))+((cj1*x731))+(((-1.0)*r00*x730)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x721*x722))+((x721*x728))+((x721*x726))+((cj1*x724))+((x723*x725))+((x723*x727))+((r20*x730))+((r00*x729))+(((-1.0)*cj1*x732))+(((-1.0)*cj1*x726))+(((-1.0)*cj1*x728))+(((-1.0)*sj1*x727))+(((-1.0)*sj1*x725))+(((-1.0)*sj1*x731))+(((0.749999650312296)*cj4*x720))+(((0.250000349687704)*x720)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj1*x727))+((cj1*x725))+(((-0.749999650312296)*r02*x721))+((x723*x726))+((x723*x728))+((r20*x729))+((x722*x723))+(((-1.0)*x721*x725))+(((-1.0)*x721*x727))+(((-1.0)*sj1*x728))+(((-1.0)*sj1*x726))+(((-1.0)*sj1*x732))+(((-0.250000349687704)*cj1*r02))+((sj1*x724))+((cj1*x731))+(((-1.0)*r00*x730))))+IKsqr((((x721*x722))+((x721*x728))+((x721*x726))+((cj1*x724))+((x723*x725))+((x723*x727))+((r20*x730))+((r00*x729))+(((-1.0)*cj1*x732))+(((-1.0)*cj1*x726))+(((-1.0)*cj1*x728))+(((-1.0)*sj1*x727))+(((-1.0)*sj1*x725))+(((-1.0)*sj1*x731))+(((0.749999650312296)*cj4*x720))+(((0.250000349687704)*x720))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj1*x727))+((cj1*x725))+(((-0.749999650312296)*r02*x721))+((x723*x726))+((x723*x728))+((r20*x729))+((x722*x723))+(((-1.0)*x721*x725))+(((-1.0)*x721*x727))+(((-1.0)*sj1*x728))+(((-1.0)*sj1*x726))+(((-1.0)*sj1*x732))+(((-0.250000349687704)*cj1*r02))+((sj1*x724))+((cj1*x731))+(((-1.0)*r00*x730))), (((x721*x722))+((x721*x728))+((x721*x726))+((cj1*x724))+((x723*x725))+((x723*x727))+((r20*x730))+((r00*x729))+(((-1.0)*cj1*x732))+(((-1.0)*cj1*x726))+(((-1.0)*cj1*x728))+(((-1.0)*sj1*x727))+(((-1.0)*sj1*x725))+(((-1.0)*sj1*x731))+(((0.749999650312296)*cj4*x720))+(((0.250000349687704)*x720))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x733=IKcos(j2);
IkReal x734=IKsin(j2);
IkReal x735=((0.433012903784321)*sj3);
IkReal x736=((0.749999650312296)*sj3);
IkReal x737=(r00*sj5);
IkReal x738=(cj4*cj5);
IkReal x739=((1.0)*cj3);
IkReal x740=(cj5*r01);
IkReal x741=(r21*sj3);
IkReal x742=(cj4*sj5);
IkReal x743=(cj3*r21);
IkReal x744=((0.500000349687582)*sj4);
IkReal x745=((0.433012903784321)*r20);
IkReal x746=(cj4*r22);
IkReal x747=(r20*sj5);
IkReal x748=((0.0160344678271334)*r02);
IkReal x749=(cj4*r02);
IkReal x750=(r01*sj5);
IkReal x751=(cj5*r00);
IkReal x752=((0.0185150129489311)*sj4);
IkReal x753=(r21*sj5);
IkReal x754=(cj5*r21);
IkReal x755=((0.866025201892125)*sj4);
IkReal x756=(cj5*r20);
IkReal x757=((0.250000349687704)*sj3);
IkReal x758=(sj1*x733);
IkReal x759=(cj1*x733);
IkReal x760=(sj1*x734);
IkReal x761=(cj1*x734);
IkReal x762=((1.0)*x761);
evalcond[0]=((((-0.250000349687704)*r22))+(((-0.433012903784321)*r21*x738))+(((-1.0)*x742*x745))+(((0.433012903784321)*x754))+(((-1.0)*x755*x756))+(((-0.749999650312296)*x746))+x759+x760+((x753*x755))+((sj5*x745)));
evalcond[1]=((((-0.250000349687704)*r02))+(((0.433012903784321)*x740))+(((-1.0)*x762))+(((0.433012903784321)*x737))+(((-0.433012903784321)*r01*x738))+(((-1.0)*x751*x755))+(((-0.749999650312296)*x749))+x758+(((-0.433012903784321)*cj4*x737))+((x750*x755)));
evalcond[2]=((((0.00925751294893567)*r21*x738))+((x752*x756))+(((0.41)*cj1))+(((0.0160344678271334)*x746))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((0.00925751294893567)*r20*x742))+(((0.0648043305514941)*x747))+(((-0.27144)*x760))+(((-1.0)*x752*x753))+(((0.0648043305514941)*x754))+(((-0.27144)*x759)));
evalcond[3]=((((-1.0)*x750*x752))+((x751*x752))+(((0.41)*sj1))+(((0.00925751294893567)*cj4*x737))+(((-1.0)*px))+(((0.27144)*x761))+(((0.0648043305514941)*x740))+(((0.00925751294893567)*r01*x738))+(((0.0648043305514941)*x737))+(((-1.0)*x748))+((cj4*x748))+(((-0.27144)*x758)));
evalcond[4]=(((cj3*x744*x747))+((r20*x742*x757))+((cj3*r22*x755))+((cj5*x743*x744))+((x742*x743))+((x736*x754))+(((-1.0)*x762))+((sj3*x744*x756))+x758+(((0.250000349687704)*x738*x741))+(((-1.0)*sj5*x741*x744))+(((-1.0)*r22*x735))+(((-1.0)*r20*x738*x739))+((x735*x746))+((x736*x747)));
evalcond[5]=((((-1.0)*sj3*x744*x750))+((cj3*r02*x755))+((x736*x737))+((cj3*x740*x744))+(((-1.0)*r02*x735))+((cj3*r01*x742))+((sj3*x744*x751))+((cj3*x737*x744))+((r01*x738*x757))+(((-1.0)*r00*x738*x739))+(((-1.0)*x760))+(((-1.0)*x759))+((x735*x749))+((x736*x740))+((cj4*x737*x757)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x763=((0.433012903784321)*cj5);
IkReal x764=((0.433012903784321)*cj4);
IkReal x765=(cj5*r01);
IkReal x766=((0.866025201892125)*sj4);
IkReal x767=((0.250000349687704)*cj4);
IkReal x768=(cj5*r00);
IkReal x769=((0.500000349687582)*sj4);
IkReal x770=(r00*sj5);
IkReal x771=(r01*sj5);
CheckValue<IkReal> x772 = IKatan2WithCheck(IkReal(((((-1.0)*x765*x767))+(((-1.0)*x767*x770))+(((0.433012903784321)*r02))+((x769*x771))+(((-0.749999650312296)*x770))+(((-1.0)*r02*x764))+(((-1.0)*x768*x769))+(((-0.749999650312296)*x765)))),IkReal(((((-1.0)*x765*x769))+(((-1.0)*cj4*x771))+(((-1.0)*x769*x770))+((cj4*x768))+(((-1.0)*r02*x766)))),IKFAST_ATAN2_MAGTHRESH);
if(!x772.valid){
continue;
}
CheckValue<IkReal> x773=IKPowWithIntegerCheck(IKsign((((r20*(((((-1.0)*cj5*x766))+(((-1.0)*sj5*x764))+(((0.433012903784321)*sj5))))))+((r22*(((-0.250000349687704)+(((-0.749999650312296)*cj4))))))+((r21*((x763+(((-1.0)*cj4*x763))+((sj5*x766)))))))),-1);
if(!x773.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x772.value)+(((1.5707963267949)*(x773.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x774=IKsin(j3);
IkReal x775=IKcos(j3);
IkReal x776=(r11*sj5);
IkReal x777=(r10*sj5);
IkReal x778=(cj5*r20);
IkReal x779=(cj5*r11);
IkReal x780=(r00*sj5);
IkReal x781=(cj4*cj5);
IkReal x782=((0.500000349687582)*cj5);
IkReal x783=(r21*sj5);
IkReal x784=(r20*sj5);
IkReal x785=(r01*sj5);
IkReal x786=(sj4*x774);
IkReal x787=((1.0)*x774);
IkReal x788=((0.250000349687704)*x775);
IkReal x789=((0.749999650312296)*x775);
IkReal x790=((0.433012903784321)*cj4*r12);
IkReal x791=((0.749999650312296)*x774);
IkReal x792=(r12*x775);
IkReal x793=(cj4*x774);
IkReal x794=((0.500000349687582)*sj4*x775);
IkReal x795=((0.250000349687704)*x793);
IkReal x796=((0.433012903784321)*r02*x775);
IkReal x797=((0.433012903784321)*r22*x775);
evalcond[0]=((((0.500000349687582)*x784*x786))+(((-1.0)*cj4*x778*x787))+(((-1.0)*r21*x781*x788))+((x783*x794))+((x783*x793))+(((-1.0)*x784*x789))+(((-1.0)*cj4*x784*x788))+x797+(((0.866025201892125)*r22*x786))+(((-1.0)*cj4*x797))+(((-1.0)*x778*x794))+((r21*x782*x786))+(((-1.0)*cj5*r21*x789)));
evalcond[1]=((((0.500000349687582)*x780*x786))+((r01*x782*x786))+((x785*x793))+((x785*x794))+(((-1.0)*r00*sj4*x775*x782))+(((-1.0)*cj4*x780*x788))+(((-1.0)*r00*x781*x787))+(((-1.0)*r01*x781*x788))+(((-1.0)*cj5*r01*x789))+x796+(((0.866025201892125)*r02*x786))+(((-1.0)*cj4*x796))+(((-1.0)*x780*x789)));
evalcond[2]=(((x774*x790))+(((0.866025201892125)*sj4*x792))+((x779*x794))+((x779*x795))+((x779*x791))+((r10*x782*x786))+(((-1.0)*r10*x775*x781))+(((-0.500000349687582)*x776*x786))+((cj4*x775*x776))+((x777*x794))+((x777*x795))+((x777*x791))+(((-0.433012903784321)*r12*x774)));
evalcond[3]=((-1.0)+(((-1.0)*r10*x781*x787))+(((0.866025201892125)*r12*x786))+(((-1.0)*cj4*x777*x788))+(((-1.0)*x775*x790))+(((-1.0)*x777*x789))+(((-1.0)*cj4*x779*x788))+(((0.500000349687582)*x779*x786))+(((0.433012903784321)*x792))+(((-1.0)*r10*sj4*x775*x782))+(((0.500000349687582)*x777*x786))+((x776*x794))+((x776*x793))+(((-1.0)*x779*x789)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x798=(cj5*r21);
IkReal x799=((0.26409636501044)*cj4);
IkReal x800=((0.457427895740576)*cj4);
IkReal x801=((0.528192360616262)*sj4);
IkReal x802=(cj5*r01);
IkReal x803=((0.444735007694415)*sj5);
if( IKabs((((r00*sj5*x799))+(((-1.0)*r00*x803))+((r02*x800))+((x799*x802))+(((0.204620884747229)*r02))+(((-0.444735007694415)*x802))+((cj5*r00*x801))+(((-1.0)*r01*sj5*x801))+(((2.4390243902439)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r20*sj5*x799))+((cj5*r20*x801))+(((0.204620884747229)*r22))+((r22*x800))+(((-1.0)*r20*x803))+((x798*x799))+(((-1.0)*r21*sj5*x801))+(((-0.444735007694415)*x798))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r00*sj5*x799))+(((-1.0)*r00*x803))+((r02*x800))+((x799*x802))+(((0.204620884747229)*r02))+(((-0.444735007694415)*x802))+((cj5*r00*x801))+(((-1.0)*r01*sj5*x801))+(((2.4390243902439)*px))))+IKsqr((((r20*sj5*x799))+((cj5*r20*x801))+(((0.204620884747229)*r22))+((r22*x800))+(((-1.0)*r20*x803))+((x798*x799))+(((-1.0)*r21*sj5*x801))+(((-0.444735007694415)*x798))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r00*sj5*x799))+(((-1.0)*r00*x803))+((r02*x800))+((x799*x802))+(((0.204620884747229)*r02))+(((-0.444735007694415)*x802))+((cj5*r00*x801))+(((-1.0)*r01*sj5*x801))+(((2.4390243902439)*px))), (((r20*sj5*x799))+((cj5*r20*x801))+(((0.204620884747229)*r22))+((r22*x800))+(((-1.0)*r20*x803))+((x798*x799))+(((-1.0)*r21*sj5*x801))+(((-0.444735007694415)*x798))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x804=((0.187545437253636)*cj4);
IkReal x805=(cj5*r20);
IkReal x806=(r01*sj5);
IkReal x807=(cj5*r21);
IkReal x808=(cj3*r00);
IkReal x809=(sj4*sj5);
IkReal x810=((0.20357990508077)*sj3);
IkReal x811=(r20*sj5);
IkReal x812=(cj4*cj5);
IkReal x813=((0.00925751294893567)*cj4);
IkReal x814=((0.117537022603216)*sj3);
IkReal x815=((0.10827950965428)*cj4);
IkReal x816=(r00*sj5);
IkReal x817=(cj4*r22);
IkReal x818=(r21*sj5);
IkReal x819=((0.216558867852667)*sj4);
IkReal x820=((0.0185150129489311)*sj4);
IkReal x821=(cj3*sj4);
IkReal x822=(cj4*r02);
IkReal x823=(cj5*r01);
IkReal x824=((0.41)*(IKcos(j1)));
IkReal x825=((0.41)*(IKsin(j1)));
IkReal x826=((0.135720094919197)*sj3*sj4);
IkReal x827=((0.0678600949192303)*cj4*sj3);
IkReal x828=(cj5*r00*sj4);
IkReal x829=((0.27144)*cj3*cj4);
evalcond[0]=(((x815*x816))+(((-0.18234135315471)*x823))+(((-1.0)*x825))+((cj5*r00*x819))+(((-0.18234135315471)*x816))+((r02*x804))+px+(((0.10827950965428)*r01*x812))+(((-1.0)*x806*x819))+(((0.0838945627463637)*r02)));
evalcond[1]=((((-0.216558867852667)*r21*x809))+(((-1.0)*x824))+((r22*x804))+(((-0.18234135315471)*x811))+((x807*x815))+((x811*x815))+pz+((x805*x819))+(((0.0838945627463637)*r22))+(((-0.18234135315471)*x807)));
evalcond[2]=((((-0.0648043305514941)*x807))+((cj5*r00*x826))+(((-0.0160344678271334)*x817))+(((-1.0)*x824))+((x810*x816))+(((0.235073880801598)*r02*x821))+(((-1.0)*x811*x813))+(((0.135720094919197)*x808*x809))+((x814*x822))+(((0.0185150129489311)*r21*x809))+((x816*x827))+(((-0.0648043305514941)*x811))+((x810*x823))+((x806*x829))+pz+(((0.0160344678271334)*r22))+(((0.135720094919197)*x821*x823))+(((-1.0)*x807*x813))+(((-1.0)*r02*x814))+(((-0.27144)*x808*x812))+(((-1.0)*x806*x826))+(((-1.0)*x805*x820))+(((0.0678600949192303)*r01*sj3*x812)));
evalcond[3]=((((0.0160344678271334)*x822))+((cj5*r00*x820))+(((-0.0160344678271334)*r02))+((x810*x811))+((x811*x827))+((x813*x816))+((x814*x817))+(((0.00925751294893567)*r01*x812))+(((-1.0)*px))+(((0.0648043305514941)*x823))+((x807*x810))+((x818*x829))+(((-1.0)*r22*x814))+(((0.135720094919197)*cj3*r20*x809))+(((-0.135720094919197)*r21*sj3*x809))+(((0.135720094919197)*x807*x821))+(((0.0648043305514941)*x816))+((x807*x827))+(((0.235073880801598)*r22*x821))+((x805*x826))+x825+(((-1.0)*x806*x820))+(((-1.0)*x805*x829)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x830=(r02*sj1);
IkReal x831=(cj1*cj4);
IkReal x832=((0.749999650312296)*r22);
IkReal x833=(cj4*sj1);
IkReal x834=((0.250000349687704)*r22);
IkReal x835=((0.433012903784321)*r00*sj5);
IkReal x836=((0.433012903784321)*r20*sj5);
IkReal x837=((0.433012903784321)*cj5*r01);
IkReal x838=((0.433012903784321)*cj5*r21);
IkReal x839=((0.866025201892125)*cj5*sj1*sj4);
IkReal x840=((0.866025201892125)*cj1*cj5*sj4);
IkReal x841=((0.866025201892125)*r01*sj4*sj5);
IkReal x842=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*sj1*x836))+(((-1.0)*sj1*x838))+((cj1*x841))+(((-0.749999650312296)*r02*x831))+((x832*x833))+((x833*x836))+((x833*x838))+((r20*x839))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x840))+((sj1*x834))+(((-1.0)*sj1*x842))+(((-1.0)*x831*x837))+(((-1.0)*x831*x835))+((cj1*x835))+((cj1*x837)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj1*x837))+(((-1.0)*sj1*x835))+((x831*x836))+((x831*x832))+((x831*x838))+((x833*x835))+((x833*x837))+((r20*x840))+((r00*x839))+(((0.749999650312296)*cj4*x830))+(((-1.0)*cj1*x836))+(((-1.0)*cj1*x838))+(((-1.0)*sj1*x841))+(((0.250000349687704)*x830))+(((-1.0)*cj1*x842))+((cj1*x834)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj1*x836))+(((-1.0)*sj1*x838))+((cj1*x841))+(((-0.749999650312296)*r02*x831))+((x832*x833))+((x833*x836))+((x833*x838))+((r20*x839))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x840))+((sj1*x834))+(((-1.0)*sj1*x842))+(((-1.0)*x831*x837))+(((-1.0)*x831*x835))+((cj1*x835))+((cj1*x837))))+IKsqr(((((-1.0)*sj1*x837))+(((-1.0)*sj1*x835))+((x831*x836))+((x831*x832))+((x831*x838))+((x833*x835))+((x833*x837))+((r20*x840))+((r00*x839))+(((0.749999650312296)*cj4*x830))+(((-1.0)*cj1*x836))+(((-1.0)*cj1*x838))+(((-1.0)*sj1*x841))+(((0.250000349687704)*x830))+(((-1.0)*cj1*x842))+((cj1*x834))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*sj1*x836))+(((-1.0)*sj1*x838))+((cj1*x841))+(((-0.749999650312296)*r02*x831))+((x832*x833))+((x833*x836))+((x833*x838))+((r20*x839))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x840))+((sj1*x834))+(((-1.0)*sj1*x842))+(((-1.0)*x831*x837))+(((-1.0)*x831*x835))+((cj1*x835))+((cj1*x837))), ((((-1.0)*sj1*x837))+(((-1.0)*sj1*x835))+((x831*x836))+((x831*x832))+((x831*x838))+((x833*x835))+((x833*x837))+((r20*x840))+((r00*x839))+(((0.749999650312296)*cj4*x830))+(((-1.0)*cj1*x836))+(((-1.0)*cj1*x838))+(((-1.0)*sj1*x841))+(((0.250000349687704)*x830))+(((-1.0)*cj1*x842))+((cj1*x834))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x843=IKcos(j2);
IkReal x844=IKsin(j2);
IkReal x845=((0.433012903784321)*sj3);
IkReal x846=((0.749999650312296)*sj3);
IkReal x847=(r00*sj5);
IkReal x848=(cj4*cj5);
IkReal x849=((1.0)*cj3);
IkReal x850=(cj5*r01);
IkReal x851=(r21*sj3);
IkReal x852=(cj4*sj5);
IkReal x853=(cj3*r21);
IkReal x854=((0.500000349687582)*sj4);
IkReal x855=((0.433012903784321)*r20);
IkReal x856=(cj4*r22);
IkReal x857=(r20*sj5);
IkReal x858=((0.0160344678271334)*r02);
IkReal x859=(cj4*r02);
IkReal x860=(r01*sj5);
IkReal x861=(cj5*r00);
IkReal x862=((0.0185150129489311)*sj4);
IkReal x863=(r21*sj5);
IkReal x864=(cj5*r21);
IkReal x865=((0.866025201892125)*sj4);
IkReal x866=(cj5*r20);
IkReal x867=((0.250000349687704)*sj3);
IkReal x868=(sj1*x843);
IkReal x869=(cj1*x843);
IkReal x870=(sj1*x844);
IkReal x871=(cj1*x844);
IkReal x872=((1.0)*x871);
evalcond[0]=(((sj5*x855))+(((-1.0)*x865*x866))+(((-0.250000349687704)*r22))+(((-1.0)*x852*x855))+(((-0.433012903784321)*r21*x848))+((x863*x865))+(((0.433012903784321)*x864))+(((-0.749999650312296)*x856))+x869+x870);
evalcond[1]=((((-0.250000349687704)*r02))+(((-0.433012903784321)*r01*x848))+(((-1.0)*x861*x865))+(((-0.749999650312296)*x859))+(((0.433012903784321)*x850))+((x860*x865))+x868+(((-0.433012903784321)*cj4*x847))+(((0.433012903784321)*x847))+(((-1.0)*x872)));
evalcond[2]=((((0.0160344678271334)*x856))+(((0.0648043305514941)*x857))+(((0.00925751294893567)*r20*x852))+(((-0.27144)*x869))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*x862*x863))+(((-0.27144)*x870))+(((-1.0)*pz))+(((0.00925751294893567)*r21*x848))+((x862*x866))+(((0.0648043305514941)*x864)));
evalcond[3]=((((0.0648043305514941)*x850))+(((-1.0)*x858))+(((0.00925751294893567)*r01*x848))+(((-0.27144)*x868))+(((0.41)*sj1))+(((-1.0)*x860*x862))+(((-1.0)*px))+(((0.0648043305514941)*x847))+((x861*x862))+(((0.27144)*x871))+((cj4*x858))+(((0.00925751294893567)*cj4*x847)));
evalcond[4]=(((sj3*x854*x866))+((r20*x852*x867))+((x845*x856))+((cj3*x854*x857))+(((0.250000349687704)*x848*x851))+(((-1.0)*sj5*x851*x854))+((cj5*x853*x854))+(((-1.0)*r20*x848*x849))+(((-1.0)*r22*x845))+((cj3*r22*x865))+((x846*x857))+((x852*x853))+x868+((x846*x864))+(((-1.0)*x872)));
evalcond[5]=(((cj3*r02*x865))+((sj3*x854*x861))+(((-1.0)*r02*x845))+(((-1.0)*sj3*x854*x860))+((x845*x859))+((x846*x847))+(((-1.0)*x869))+(((-1.0)*x870))+((cj3*x847*x854))+((r01*x848*x867))+((cj3*r01*x852))+((cj3*x850*x854))+((x846*x850))+(((-1.0)*r00*x848*x849))+((cj4*x847*x867)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x873=((0.433012903784321)*cj5);
IkReal x874=((0.866025201892125)*sj4);
IkReal x875=((0.433012903784321)*r22);
IkReal x876=(cj4*sj5);
IkReal x877=(cj5*r21);
IkReal x878=(r20*sj5);
IkReal x879=((0.500000349687582)*sj4);
IkReal x880=(cj5*x879);
CheckValue<IkReal> x881 = IKatan2WithCheck(IkReal(((((-0.749999650312296)*x878))+(((-0.749999650312296)*x877))+(((-0.250000349687704)*r20*x876))+(((-1.0)*cj4*x875))+(((-0.250000349687704)*cj4*x877))+x875+((r21*sj5*x879))+(((-1.0)*r20*x880)))),IkReal(((((-1.0)*x877*x879))+(((-1.0)*r21*x876))+((cj4*cj5*r20))+(((-1.0)*x878*x879))+(((-1.0)*r22*x874)))),IKFAST_ATAN2_MAGTHRESH);
if(!x881.valid){
continue;
}
CheckValue<IkReal> x882=IKPowWithIntegerCheck(IKsign((((r00*(((((0.433012903784321)*x876))+(((-0.433012903784321)*sj5))+((cj5*x874))))))+((r02*(((0.250000349687704)+(((0.749999650312296)*cj4))))))+((r01*(((((-1.0)*sj5*x874))+((cj4*x873))+(((-1.0)*x873)))))))),-1);
if(!x882.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x881.value)+(((1.5707963267949)*(x882.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x883=IKsin(j3);
IkReal x884=IKcos(j3);
IkReal x885=(r11*sj5);
IkReal x886=(r10*sj5);
IkReal x887=(cj5*r20);
IkReal x888=(cj5*r11);
IkReal x889=(r00*sj5);
IkReal x890=(cj4*cj5);
IkReal x891=((0.500000349687582)*cj5);
IkReal x892=(r21*sj5);
IkReal x893=(r20*sj5);
IkReal x894=(r01*sj5);
IkReal x895=(sj4*x883);
IkReal x896=((1.0)*x883);
IkReal x897=((0.250000349687704)*x884);
IkReal x898=((0.749999650312296)*x884);
IkReal x899=((0.433012903784321)*cj4*r12);
IkReal x900=((0.749999650312296)*x883);
IkReal x901=(r12*x884);
IkReal x902=(cj4*x883);
IkReal x903=((0.500000349687582)*sj4*x884);
IkReal x904=((0.250000349687704)*x902);
IkReal x905=((0.433012903784321)*r02*x884);
IkReal x906=((0.433012903784321)*r22*x884);
evalcond[0]=(((x892*x903))+((x892*x902))+(((-1.0)*cj4*x893*x897))+(((-1.0)*x887*x903))+(((-1.0)*cj4*x906))+(((0.866025201892125)*r22*x895))+(((-1.0)*cj5*r21*x898))+(((-1.0)*x893*x898))+(((-1.0)*cj4*x887*x896))+((r21*x891*x895))+(((0.500000349687582)*x893*x895))+x906+(((-1.0)*r21*x890*x897)));
evalcond[1]=(((x894*x902))+((x894*x903))+(((-1.0)*r01*x890*x897))+(((-1.0)*r00*sj4*x884*x891))+(((-1.0)*cj4*x889*x897))+(((-1.0)*x889*x898))+(((-1.0)*cj4*x905))+(((-1.0)*cj5*r01*x898))+(((0.500000349687582)*x889*x895))+(((-1.0)*r00*x890*x896))+(((0.866025201892125)*r02*x895))+x905+((r01*x891*x895)));
evalcond[2]=(((x886*x900))+((x886*x903))+((x886*x904))+((x883*x899))+((r10*x891*x895))+(((0.866025201892125)*sj4*x901))+(((-1.0)*r10*x884*x890))+(((-0.433012903784321)*r12*x883))+((cj4*x884*x885))+((x888*x903))+((x888*x900))+((x888*x904))+(((-0.500000349687582)*x885*x895)));
evalcond[3]=((-1.0)+(((0.500000349687582)*x888*x895))+(((-1.0)*x884*x899))+(((-1.0)*r10*sj4*x884*x891))+(((0.866025201892125)*r12*x895))+((x885*x902))+((x885*x903))+(((0.500000349687582)*x886*x895))+(((-1.0)*r10*x890*x896))+(((0.433012903784321)*x901))+(((-1.0)*x888*x898))+(((-1.0)*cj4*x888*x897))+(((-1.0)*cj4*x886*x897))+(((-1.0)*x886*x898)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x907=(cj5*r21);
IkReal x908=((0.26409636501044)*cj4);
IkReal x909=((0.457427895740576)*cj4);
IkReal x910=((0.528192360616262)*sj4);
IkReal x911=(cj5*r01);
IkReal x912=((0.444735007694415)*sj5);
if( IKabs((((r02*x909))+(((-1.0)*r00*x912))+(((-1.0)*r01*sj5*x910))+(((0.204620884747229)*r02))+((x908*x911))+((cj5*r00*x910))+(((-0.444735007694415)*x911))+(((2.4390243902439)*px))+((r00*sj5*x908)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-0.444735007694415)*x907))+((cj5*r20*x910))+(((0.204620884747229)*r22))+((r20*sj5*x908))+(((-1.0)*r20*x912))+((x907*x908))+(((-1.0)*r21*sj5*x910))+((r22*x909))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r02*x909))+(((-1.0)*r00*x912))+(((-1.0)*r01*sj5*x910))+(((0.204620884747229)*r02))+((x908*x911))+((cj5*r00*x910))+(((-0.444735007694415)*x911))+(((2.4390243902439)*px))+((r00*sj5*x908))))+IKsqr(((((-0.444735007694415)*x907))+((cj5*r20*x910))+(((0.204620884747229)*r22))+((r20*sj5*x908))+(((-1.0)*r20*x912))+((x907*x908))+(((-1.0)*r21*sj5*x910))+((r22*x909))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r02*x909))+(((-1.0)*r00*x912))+(((-1.0)*r01*sj5*x910))+(((0.204620884747229)*r02))+((x908*x911))+((cj5*r00*x910))+(((-0.444735007694415)*x911))+(((2.4390243902439)*px))+((r00*sj5*x908))), ((((-0.444735007694415)*x907))+((cj5*r20*x910))+(((0.204620884747229)*r22))+((r20*sj5*x908))+(((-1.0)*r20*x912))+((x907*x908))+(((-1.0)*r21*sj5*x910))+((r22*x909))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x913=((0.187545437253636)*cj4);
IkReal x914=(cj5*r20);
IkReal x915=(r01*sj5);
IkReal x916=(cj5*r21);
IkReal x917=(cj3*r00);
IkReal x918=(sj4*sj5);
IkReal x919=((0.20357990508077)*sj3);
IkReal x920=(r20*sj5);
IkReal x921=(cj4*cj5);
IkReal x922=((0.00925751294893567)*cj4);
IkReal x923=((0.117537022603216)*sj3);
IkReal x924=((0.10827950965428)*cj4);
IkReal x925=(r00*sj5);
IkReal x926=(cj4*r22);
IkReal x927=(r21*sj5);
IkReal x928=((0.216558867852667)*sj4);
IkReal x929=((0.0185150129489311)*sj4);
IkReal x930=(cj3*sj4);
IkReal x931=(cj4*r02);
IkReal x932=(cj5*r01);
IkReal x933=((0.41)*(IKcos(j1)));
IkReal x934=((0.41)*(IKsin(j1)));
IkReal x935=((0.135720094919197)*sj3*sj4);
IkReal x936=((0.0678600949192303)*cj4*sj3);
IkReal x937=(cj5*r00*sj4);
IkReal x938=((0.27144)*cj3*cj4);
evalcond[0]=((((-0.18234135315471)*x925))+((x924*x925))+(((-0.18234135315471)*x932))+((cj5*r00*x928))+((r02*x913))+(((0.10827950965428)*r01*x921))+px+(((-1.0)*x915*x928))+(((0.0838945627463637)*r02))+(((-1.0)*x934)));
evalcond[1]=(((x916*x924))+((x920*x924))+(((-0.18234135315471)*x920))+(((-0.216558867852667)*r21*x918))+((x914*x928))+(((-0.18234135315471)*x916))+pz+((r22*x913))+(((0.0838945627463637)*r22))+(((-1.0)*x933)));
evalcond[2]=((((-0.0648043305514941)*x920))+((x919*x932))+(((0.0678600949192303)*r01*sj3*x921))+((x919*x925))+((x915*x938))+(((-0.27144)*x917*x921))+(((-1.0)*x914*x929))+(((0.0185150129489311)*r21*x918))+((cj5*r00*x935))+(((-1.0)*r02*x923))+(((-1.0)*x920*x922))+(((0.135720094919197)*x930*x932))+(((-0.0648043305514941)*x916))+(((-0.0160344678271334)*x926))+(((0.135720094919197)*x917*x918))+pz+(((0.235073880801598)*r02*x930))+((x923*x931))+(((0.0160344678271334)*r22))+(((-1.0)*x915*x935))+((x925*x936))+(((-1.0)*x916*x922))+(((-1.0)*x933)));
evalcond[3]=((((0.0648043305514941)*x925))+(((0.0648043305514941)*x932))+((x916*x936))+((x919*x920))+(((0.135720094919197)*cj3*r20*x918))+((x920*x936))+(((-0.0160344678271334)*r02))+(((-1.0)*x914*x938))+(((-1.0)*r22*x923))+((x927*x938))+((cj5*r00*x929))+(((0.235073880801598)*r22*x930))+(((-0.135720094919197)*r21*sj3*x918))+(((-1.0)*px))+((x914*x935))+((x923*x926))+((x916*x919))+((x922*x925))+(((0.00925751294893567)*r01*x921))+(((-1.0)*x915*x929))+(((0.135720094919197)*x916*x930))+x934+(((0.0160344678271334)*x931)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x939=(r02*sj1);
IkReal x940=(cj1*cj4);
IkReal x941=((0.749999650312296)*r22);
IkReal x942=(cj4*sj1);
IkReal x943=((0.250000349687704)*r22);
IkReal x944=((0.433012903784321)*r00*sj5);
IkReal x945=((0.433012903784321)*r20*sj5);
IkReal x946=((0.433012903784321)*cj5*r01);
IkReal x947=((0.433012903784321)*cj5*r21);
IkReal x948=((0.866025201892125)*cj5*sj1*sj4);
IkReal x949=((0.866025201892125)*cj1*cj5*sj4);
IkReal x950=((0.866025201892125)*r01*sj4*sj5);
IkReal x951=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*r00*x949))+((sj1*x943))+((cj1*x950))+((x941*x942))+((x942*x947))+((x942*x945))+((cj1*x946))+((cj1*x944))+(((-1.0)*sj1*x951))+(((-0.749999650312296)*r02*x940))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*sj1*x947))+(((-1.0)*sj1*x945))+(((-1.0)*x940*x946))+(((-1.0)*x940*x944))+((r20*x948)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj1*x951))+(((-1.0)*cj1*x945))+(((-1.0)*cj1*x947))+((x942*x944))+((x942*x946))+((cj1*x943))+((r00*x948))+(((-1.0)*sj1*x950))+(((0.250000349687704)*x939))+(((0.749999650312296)*cj4*x939))+((x940*x947))+((x940*x945))+((x940*x941))+(((-1.0)*sj1*x946))+(((-1.0)*sj1*x944))+((r20*x949)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r00*x949))+((sj1*x943))+((cj1*x950))+((x941*x942))+((x942*x947))+((x942*x945))+((cj1*x946))+((cj1*x944))+(((-1.0)*sj1*x951))+(((-0.749999650312296)*r02*x940))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*sj1*x947))+(((-1.0)*sj1*x945))+(((-1.0)*x940*x946))+(((-1.0)*x940*x944))+((r20*x948))))+IKsqr(((((-1.0)*cj1*x951))+(((-1.0)*cj1*x945))+(((-1.0)*cj1*x947))+((x942*x944))+((x942*x946))+((cj1*x943))+((r00*x948))+(((-1.0)*sj1*x950))+(((0.250000349687704)*x939))+(((0.749999650312296)*cj4*x939))+((x940*x947))+((x940*x945))+((x940*x941))+(((-1.0)*sj1*x946))+(((-1.0)*sj1*x944))+((r20*x949))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*r00*x949))+((sj1*x943))+((cj1*x950))+((x941*x942))+((x942*x947))+((x942*x945))+((cj1*x946))+((cj1*x944))+(((-1.0)*sj1*x951))+(((-0.749999650312296)*r02*x940))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*sj1*x947))+(((-1.0)*sj1*x945))+(((-1.0)*x940*x946))+(((-1.0)*x940*x944))+((r20*x948))), ((((-1.0)*cj1*x951))+(((-1.0)*cj1*x945))+(((-1.0)*cj1*x947))+((x942*x944))+((x942*x946))+((cj1*x943))+((r00*x948))+(((-1.0)*sj1*x950))+(((0.250000349687704)*x939))+(((0.749999650312296)*cj4*x939))+((x940*x947))+((x940*x945))+((x940*x941))+(((-1.0)*sj1*x946))+(((-1.0)*sj1*x944))+((r20*x949))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x952=IKcos(j2);
IkReal x953=IKsin(j2);
IkReal x954=((0.433012903784321)*sj3);
IkReal x955=((0.749999650312296)*sj3);
IkReal x956=(r00*sj5);
IkReal x957=(cj4*cj5);
IkReal x958=((1.0)*cj3);
IkReal x959=(cj5*r01);
IkReal x960=(r21*sj3);
IkReal x961=(cj4*sj5);
IkReal x962=(cj3*r21);
IkReal x963=((0.500000349687582)*sj4);
IkReal x964=((0.433012903784321)*r20);
IkReal x965=(cj4*r22);
IkReal x966=(r20*sj5);
IkReal x967=((0.0160344678271334)*r02);
IkReal x968=(cj4*r02);
IkReal x969=(r01*sj5);
IkReal x970=(cj5*r00);
IkReal x971=((0.0185150129489311)*sj4);
IkReal x972=(r21*sj5);
IkReal x973=(cj5*r21);
IkReal x974=((0.866025201892125)*sj4);
IkReal x975=(cj5*r20);
IkReal x976=((0.250000349687704)*sj3);
IkReal x977=(sj1*x952);
IkReal x978=(cj1*x952);
IkReal x979=(sj1*x953);
IkReal x980=(cj1*x953);
IkReal x981=((1.0)*x980);
evalcond[0]=((((-0.433012903784321)*r21*x957))+(((-0.250000349687704)*r22))+(((-1.0)*x961*x964))+(((0.433012903784321)*x973))+(((-0.749999650312296)*x965))+(((-1.0)*x974*x975))+x979+x978+((sj5*x964))+((x972*x974)));
evalcond[1]=((((-1.0)*x981))+((x969*x974))+(((-0.250000349687704)*r02))+(((0.433012903784321)*x959))+(((0.433012903784321)*x956))+(((-0.749999650312296)*x968))+(((-1.0)*x970*x974))+(((-0.433012903784321)*r01*x957))+(((-0.433012903784321)*cj4*x956))+x977);
evalcond[2]=((((0.41)*cj1))+(((0.0648043305514941)*x966))+(((-0.0160344678271334)*r22))+(((-1.0)*x971*x972))+(((-1.0)*pz))+(((0.0648043305514941)*x973))+(((0.0160344678271334)*x965))+(((0.00925751294893567)*r21*x957))+((x971*x975))+(((0.00925751294893567)*r20*x961))+(((-0.27144)*x979))+(((-0.27144)*x978)));
evalcond[3]=((((-1.0)*x969*x971))+(((0.00925751294893567)*cj4*x956))+(((0.41)*sj1))+(((0.0648043305514941)*x959))+(((0.0648043305514941)*x956))+(((-1.0)*px))+(((0.00925751294893567)*r01*x957))+((x970*x971))+(((0.27144)*x980))+(((-1.0)*x967))+(((-0.27144)*x977))+((cj4*x967)));
evalcond[4]=((((-1.0)*x981))+((cj5*x962*x963))+((x954*x965))+((x961*x962))+((cj3*x963*x966))+((r20*x961*x976))+(((0.250000349687704)*x957*x960))+(((-1.0)*r20*x957*x958))+((sj3*x963*x975))+(((-1.0)*r22*x954))+((cj3*r22*x974))+x977+(((-1.0)*sj5*x960*x963))+((x955*x973))+((x955*x966)));
evalcond[5]=(((cj3*r02*x974))+((x955*x959))+((x955*x956))+((x954*x968))+(((-1.0)*x979))+(((-1.0)*x978))+((cj3*r01*x961))+((cj3*x956*x963))+((sj3*x963*x970))+((r01*x957*x976))+((cj4*x956*x976))+(((-1.0)*sj3*x963*x969))+(((-1.0)*r00*x957*x958))+(((-1.0)*r02*x954))+((cj3*x959*x963)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[2];
sj0=1.0;
cj0=0;
j0=1.5707963267949;
IkReal x982=(cj4*r12);
IkReal x983=(r10*sj5);
IkReal x984=((0.433012903784321)*cj5*r11);
IkReal x985=(cj5*r10*sj4);
IkReal x986=(r11*sj4*sj5);
IkReal x987=((1.73204919243206)*cj5*r11);
j3eval[0]=((((1.73204919243206)*x983))+(((-1.73204919243206)*cj4*x983))+(((-1.0)*r12))+(((-2.99999440500457)*x982))+(((3.46409596216145)*x986))+(((-3.46409596216145)*x985))+x987+(((-1.0)*cj4*x987)));
j3eval[1]=IKsign(((((-0.250000349687704)*r12))+(((0.433012903784321)*x983))+(((-0.866025201892125)*x985))+(((-0.749999650312296)*x982))+x984+(((0.866025201892125)*x986))+(((-0.433012903784321)*cj4*x983))+(((-1.0)*cj4*x984))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=1.0;
cj0=0;
j0=1.5707963267949;
IkReal x988=(cj4*r22);
IkReal x989=(cj5*r21);
IkReal x990=((0.866025201892125)*sj4);
IkReal x991=(cj5*r20);
IkReal x992=(r21*sj5);
IkReal x993=((3.46409596216145)*sj4);
IkReal x994=(r20*sj5);
IkReal x995=(cj4*x994);
j3eval[0]=(((x991*x993))+(((-1.0)*x992*x993))+(((-1.73204919243206)*x994))+(((1.73204919243206)*x995))+r22+(((2.99999440500457)*x988))+(((-1.73204919243206)*x989))+(((1.73204919243206)*cj4*x989)));
j3eval[1]=IKsign(((((0.749999650312296)*x988))+(((-0.433012903784321)*x989))+(((-0.433012903784321)*x994))+(((0.433012903784321)*cj4*x989))+((x990*x991))+(((-1.0)*x990*x992))+(((0.433012903784321)*x995))+(((0.250000349687704)*r22))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=1.0;
cj0=0;
j0=1.5707963267949;
IkReal x996=cj5*cj5;
IkReal x997=r01*r01;
IkReal x998=r00*r00;
IkReal x999=cj4*cj4;
IkReal x1000=r02*r02;
IkReal x1001=((3.9999972025013)*sj4);
IkReal x1002=(r00*r01);
IkReal x1003=(cj5*sj4);
IkReal x1004=(r00*r02);
IkReal x1005=(cj4*sj4);
IkReal x1006=(r01*r02);
IkReal x1007=(cj5*sj5);
IkReal x1008=((0.375000349687459)*cj4);
IkReal x1009=((2.309396769726)*cj4);
IkReal x1010=((0.433012298107169)*cj4);
IkReal x1011=(sj4*sj5);
IkReal x1012=((2.0)*cj4);
IkReal x1013=(cj4*x1007);
IkReal x1014=((0.750000174843424)*x997);
IkReal x1015=((1.50000034968685)*x996);
IkReal x1016=((0.649519052837905)*x999);
IkReal x1017=((0.937499825156026)*x999);
IkReal x1018=((3.46409838486413)*x999);
IkReal x1019=((4.99999440500457)*x999);
IkReal x1020=((0.750000174843424)*x998);
IkReal x1021=((7.99999440500261)*x996);
IkReal x1022=(x1000*x999);
IkReal x1023=(x996*x998);
IkReal x1024=(x996*x997);
IkReal x1025=(x998*x999);
IkReal x1026=(x997*x999);
j3eval[0]=((((2.30940161513813)*x1006*x1011))+(((-1.0)*x1001*x1007*x997))+(((4.33332836000522)*x998))+(((1.33333395500065)*x997))+((x1001*x1007*x998))+((x1001*x1013*x997))+((sj4*x1002*x1021))+(((6.9281919243229)*sj5*x1005*x1006))+(((-9.99998881000913)*x1002*x1007*x999))+(((-1.0)*x1025))+((sj5*x1004*x1009))+(((-2.30940161513813)*x1003*x1004))+(((-1.0)*x1019*x1024))+(((1.15470161513813)*cj5*x1006))+(((-1.0)*x1002*x1005*x1021))+(((4.99999440500457)*x1000))+(((-6.9281919243229)*cj4*x1003*x1004))+((x1019*x1023))+(((-1.0)*sj5*x1004*x1018))+(((1.15470161513813)*sj5*x1004))+(((4.0)*x1002*x1013))+(((-1.0)*cj5*x1006*x1018))+((x1012*x1024))+(((-1.0)*x1001*x1002))+(((5.99998881000913)*x1002*x1007))+((cj4*x1001*x1002))+(((-1.0)*x1001*x1013*x998))+((cj5*x1006*x1009))+(((3.99999440500457)*x1026))+(((-2.99999440500457)*x1023))+(((-2.99999440500457)*x1022))+((x1012*x998))+(((2.99999440500457)*x1024))+(((-1.0)*x1000*x1012))+(((-1.0)*x1012*x1023)));
j3eval[1]=IKsign((((cj5*x1006*x1010))+((x1017*x1023))+((x1008*x1024))+(((-1.0)*cj4*sj5*x1003*x1020))+(((-0.562499475468567)*x1023))+(((-0.562499475468567)*x1022))+(((0.750000699374918)*x1002*x1013))+((sj5*x1003*x1020))+(((0.750000174843424)*x1002*x1005))+(((1.29903719716146)*sj5*x1005*x1006))+(((0.433013206622791)*x1006*x1011))+((sj4*x1002*x1015))+(((-0.750000174843424)*sj4*x1002))+(((-0.433013206622791)*x1003*x1004))+(((0.250000349687704)*x997))+(((0.937499825156026)*x1000))+((cj4*sj5*x1003*x1014))+(((1.12499895093713)*x1002*x1007))+((sj5*x1004*x1010))+(((-1.87499965031205)*x1002*x1007*x999))+(((-1.0)*x1002*x1005*x1015))+(((0.749999650312296)*x1026))+(((-1.0)*sj5*x1003*x1014))+(((0.216506754730737)*sj5*x1004))+(((0.562499475468567)*x1024))+(((-1.0)*sj5*x1004*x1016))+(((-1.0)*x1008*x1023))+(((-1.0)*cj5*x1006*x1016))+(((0.81249982515627)*x998))+((x1008*x998))+(((0.216506754730737)*cj5*x1006))+(((-1.0)*x1017*x1024))+(((-1.0)*x1000*x1008))+(((-1.29903719716146)*cj4*x1003*x1004))+(((-0.18750017484373)*x1025))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j1, j2, j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1027=r00*r00;
IkReal x1028=cj5*cj5;
IkReal x1029=r01*r01;
IkReal x1030=cj4*cj4;
IkReal x1031=r02*r02;
IkReal x1032=(sj4*sj5);
IkReal x1033=((0.500000349687582)*r01);
IkReal x1034=(r00*r02);
IkReal x1035=(cj4*r02);
IkReal x1036=(cj5*sj4);
IkReal x1037=(cj5*r01);
IkReal x1038=(cj4*r00);
IkReal x1039=(r00*sj5);
IkReal x1040=(r01*sj4);
IkReal x1041=((0.500000349687582)*r00);
IkReal x1042=((0.375000349687459)*cj4);
IkReal x1043=(cj4*sj5);
IkReal x1044=((0.937499825156026)*x1030);
IkReal x1045=((0.649519052837905)*x1030);
IkReal x1046=((1.50000034968685)*x1028);
IkReal x1047=((0.750000174843424)*cj5*x1029);
IkReal x1048=(x1027*x1028);
IkReal x1049=(x1028*x1029);
IkReal x1050=((0.750000174843424)*cj5*x1027);
CheckValue<IkReal> x1051=IKPowWithIntegerCheck(IKsign(((((-1.0)*x1032*x1047))+(((0.250000349687704)*x1029))+(((0.562499475468567)*x1049))+(((0.433013206622791)*r01*r02*x1032))+(((-1.0)*x1031*x1042))+(((0.433012298107169)*x1034*x1043))+((x1042*x1049))+(((-1.29903719716146)*cj4*x1034*x1036))+(((-1.0)*x1044*x1049))+(((0.749999650312296)*x1029*x1030))+((x1027*x1042))+(((0.216506754730737)*r02*x1037))+(((-0.750000174843424)*r00*x1040))+(((0.81249982515627)*x1027))+(((-1.0)*x1038*x1040*x1046))+(((-1.0)*r02*x1037*x1045))+(((0.937499825156026)*x1031))+((r00*x1040*x1046))+(((0.433012298107169)*x1035*x1037))+(((-1.0)*x1042*x1048))+(((-0.562499475468567)*x1048))+(((-1.0)*sj5*x1034*x1045))+(((0.216506754730737)*sj5*x1034))+(((-0.433013206622791)*x1034*x1036))+(((1.29903719716146)*r01*x1032*x1035))+(((0.750000699374918)*sj5*x1037*x1038))+((cj4*x1032*x1047))+(((0.750000174843424)*x1038*x1040))+((x1032*x1050))+(((-1.0)*cj4*x1032*x1050))+(((-0.18750017484373)*x1027*x1030))+(((1.12499895093713)*x1037*x1039))+(((-1.87499965031205)*x1030*x1037*x1039))+(((-0.562499475468567)*x1030*x1031))+((x1044*x1048)))),-1);
if(!x1051.valid){
continue;
}
CheckValue<IkReal> x1052 = IKatan2WithCheck(IkReal(((((0.866025201892125)*r02*sj4))+((r01*x1043))+((x1032*x1041))+((x1033*x1036))+(((-1.0)*cj5*x1038)))),IkReal(((((0.433012903784321)*r02))+(((-0.250000349687704)*sj5*x1038))+(((-0.749999650312296)*x1039))+(((-0.749999650312296)*x1037))+(((-0.433012903784321)*x1035))+(((-1.0)*x1036*x1041))+((x1032*x1033))+(((-0.250000349687704)*cj4*x1037)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1052.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1051.value)))+(x1052.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1053=IKsin(j3);
IkReal x1054=IKcos(j3);
IkReal x1055=((0.749999650312296)*r00);
IkReal x1056=(cj5*r20);
IkReal x1057=(cj4*cj5);
IkReal x1058=(cj5*r01);
IkReal x1059=(cj4*r00);
IkReal x1060=(cj4*sj5);
IkReal x1061=((0.500000349687582)*sj4);
IkReal x1062=((0.433012903784321)*r02);
IkReal x1063=((0.866025201892125)*sj4);
IkReal x1064=((0.433012903784321)*r22);
IkReal x1065=(sj5*x1053);
IkReal x1066=(r01*x1061);
IkReal x1067=((1.0)*x1053);
IkReal x1068=((0.250000349687704)*x1054);
IkReal x1069=(cj5*x1053);
IkReal x1070=(cj4*x1054);
IkReal x1071=(x1054*x1061);
IkReal x1072=((0.433012903784321)*r12*x1054);
IkReal x1073=((0.749999650312296)*sj5*x1054);
IkReal x1074=((0.749999650312296)*cj5*x1054);
evalcond[0]=((((-1.0)*r20*x1073))+(((-1.0)*r20*x1060*x1068))+(((-1.0)*r21*x1074))+(((-1.0)*cj4*x1056*x1067))+((r20*x1061*x1065))+((r22*x1053*x1063))+((x1054*x1064))+(((-1.0)*x1056*x1071))+((r21*x1053*x1060))+((r21*sj5*x1071))+((r21*x1061*x1069))+(((-1.0)*x1064*x1070))+(((-1.0)*r21*x1057*x1068)));
evalcond[1]=((((-1.0)*r10*x1057*x1067))+((r11*x1061*x1069))+((r10*x1061*x1065))+x1072+(((-1.0)*r11*x1074))+(((-1.0)*r10*x1073))+(((-1.0)*r11*x1057*x1068))+(((-1.0)*r10*x1060*x1068))+(((-0.433012903784321)*r12*x1070))+((r11*sj5*x1071))+((r12*x1053*x1063))+((r11*x1053*x1060))+(((-1.0)*cj5*r10*x1071)));
evalcond[2]=(((r00*x1061*x1069))+((x1058*x1071))+(((0.250000349687704)*r01*x1053*x1057))+((x1055*x1065))+(((0.749999650312296)*x1053*x1058))+((cj4*x1053*x1062))+(((-1.0)*r00*x1054*x1057))+((r02*x1054*x1063))+((r00*sj5*x1071))+(((0.250000349687704)*x1059*x1065))+(((-1.0)*x1053*x1062))+(((-1.0)*x1065*x1066))+((r01*x1054*x1060)));
evalcond[3]=((-1.0)+((r00*x1061*x1065))+((r02*x1053*x1063))+(((-1.0)*sj5*x1054*x1055))+((x1054*x1062))+((x1053*x1058*x1061))+((sj5*x1054*x1066))+(((-1.0)*x1062*x1070))+(((-1.0)*r00*x1057*x1067))+(((-1.0)*r01*x1057*x1068))+(((-0.749999650312296)*x1054*x1058))+(((-1.0)*cj5*r00*x1071))+((r01*x1053*x1060))+(((-1.0)*sj5*x1059*x1068)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1075=((0.528192360616262)*sj4);
IkReal x1076=(r20*sj5);
IkReal x1077=((0.26409636501044)*cj4);
IkReal x1078=((0.444735007694415)*cj5);
IkReal x1079=((0.457427895740576)*cj4);
IkReal x1080=(r10*sj5);
if( IKabs(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*r12*x1079))+(((0.444735007694415)*x1080))+(((-1.0)*x1077*x1080))+(((-1.0)*cj5*r11*x1077))+((r11*sj5*x1075))+((r11*x1078))+(((-1.0)*cj5*r10*x1075)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r21*x1077))+(((-1.0)*r21*x1078))+(((-0.444735007694415)*x1076))+(((0.204620884747229)*r22))+((cj5*r20*x1075))+((r22*x1079))+((x1076*x1077))+(((2.4390243902439)*pz))+(((-1.0)*r21*sj5*x1075)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*r12*x1079))+(((0.444735007694415)*x1080))+(((-1.0)*x1077*x1080))+(((-1.0)*cj5*r11*x1077))+((r11*sj5*x1075))+((r11*x1078))+(((-1.0)*cj5*r10*x1075))))+IKsqr((((cj5*r21*x1077))+(((-1.0)*r21*x1078))+(((-0.444735007694415)*x1076))+(((0.204620884747229)*r22))+((cj5*r20*x1075))+((r22*x1079))+((x1076*x1077))+(((2.4390243902439)*pz))+(((-1.0)*r21*sj5*x1075))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*r12*x1079))+(((0.444735007694415)*x1080))+(((-1.0)*x1077*x1080))+(((-1.0)*cj5*r11*x1077))+((r11*sj5*x1075))+((r11*x1078))+(((-1.0)*cj5*r10*x1075))), (((cj5*r21*x1077))+(((-1.0)*r21*x1078))+(((-0.444735007694415)*x1076))+(((0.204620884747229)*r22))+((cj5*r20*x1075))+((r22*x1079))+((x1076*x1077))+(((2.4390243902439)*pz))+(((-1.0)*r21*sj5*x1075))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1081=((1.0)*py);
IkReal x1082=(cj5*r11);
IkReal x1083=(cj5*sj3);
IkReal x1084=(r20*sj5);
IkReal x1085=((0.135720094919197)*sj4);
IkReal x1086=(r21*sj5);
IkReal x1087=((0.0185150129489311)*sj4);
IkReal x1088=((0.135720094919197)*sj3);
IkReal x1089=((0.00925751294893567)*cj4);
IkReal x1090=(cj4*cj5);
IkReal x1091=(cj3*r10);
IkReal x1092=((0.0678600949192303)*cj4);
IkReal x1093=(r10*sj5);
IkReal x1094=((0.10827950965428)*cj4);
IkReal x1095=(cj4*r22);
IkReal x1096=((0.0160344678271334)*r12);
IkReal x1097=((0.20357990508077)*sj3);
IkReal x1098=(cj5*r20);
IkReal x1099=((0.216558867852667)*sj4);
IkReal x1100=((0.117537022603216)*sj3);
IkReal x1101=((0.27144)*cj3);
IkReal x1102=(cj5*r21);
IkReal x1103=(cj4*r12);
IkReal x1104=((0.41)*(IKsin(j1)));
IkReal x1105=((0.41)*(IKcos(j1)));
IkReal x1106=(cj5*r10*sj4);
IkReal x1107=(r11*sj4*sj5);
IkReal x1108=((0.235073880801598)*cj3*sj4);
IkReal x1109=(x1104+x1081);
evalcond[0]=((((-1.0)*x1086*x1099))+(((-0.18234135315471)*x1084))+((x1084*x1094))+(((-0.18234135315471)*x1102))+pz+(((0.10827950965428)*r21*x1090))+(((0.187545437253636)*x1095))+((x1098*x1099))+(((-1.0)*x1105))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-1.0)*cj5*r10*x1099))+(((0.18234135315471)*x1082))+(((-0.187545437253636)*x1103))+(((0.18234135315471)*x1093))+((r11*sj5*x1099))+(((-0.0838945627463637)*r12))+(((-1.0)*x1093*x1094))+(((-1.0)*x1109))+(((-1.0)*x1082*x1094)));
evalcond[2]=(((x1082*x1089))+(((-1.0)*sj3*x1084*x1092))+((cj5*r10*x1087))+(((-1.0)*r11*sj5*x1087))+(((-1.0)*cj3*x1085*x1102))+((x1089*x1093))+((cj4*x1096))+(((-1.0)*r22*x1108))+(((-1.0)*r20*x1083*x1085))+(((-1.0)*x1096))+(((-1.0)*x1084*x1097))+((r22*x1100))+((r20*x1090*x1101))+(((-1.0)*r21*x1083*x1092))+(((0.0648043305514941)*x1082))+((sj3*x1085*x1086))+(((-1.0)*cj4*x1086*x1101))+(((-1.0)*x1095*x1100))+(((-1.0)*x1109))+(((-0.20357990508077)*r21*x1083))+(((-1.0)*cj3*x1084*x1085))+(((0.0648043305514941)*x1093)));
evalcond[3]=((((0.0160344678271334)*x1095))+(((-1.0)*r12*x1100))+x1105+((x1087*x1098))+((sj3*x1092*x1093))+(((-0.0160344678271334)*r22))+((sj5*x1085*x1091))+((x1089*x1102))+(((-1.0)*pz))+(((-1.0)*r11*sj3*sj5*x1085))+((x1093*x1097))+((cj3*x1082*x1085))+((sj3*x1082*x1092))+((x1082*x1097))+((r12*x1108))+((x1100*x1103))+(((0.0648043305514941)*x1084))+(((-0.27144)*x1090*x1091))+((r10*x1083*x1085))+((cj4*r11*sj5*x1101))+((x1084*x1089))+(((-1.0)*x1086*x1087))+(((0.0648043305514941)*x1102)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1110=((0.250000349687704)*r12);
IkReal x1111=((0.749999650312296)*cj4);
IkReal x1112=((0.433012903784321)*sj5);
IkReal x1113=(cj1*r10);
IkReal x1114=(cj1*r22);
IkReal x1115=(cj1*r20);
IkReal x1116=((0.866025201892125)*sj4);
IkReal x1117=(r20*sj1);
IkReal x1118=(r22*sj1);
IkReal x1119=(r10*sj1);
IkReal x1120=(r11*sj1);
IkReal x1121=((0.433012903784321)*cj5);
IkReal x1122=(r21*sj1);
IkReal x1123=(cj1*r21);
IkReal x1124=(cj1*r11);
IkReal x1125=(cj5*sj1*x1116);
IkReal x1126=(cj4*r21*x1121);
if( IKabs((((x1111*x1118))+(((-1.0)*x1121*x1124))+(((-1.0)*x1121*x1122))+(((-1.0)*sj5*x1116*x1124))+(((-1.0)*sj5*x1116*x1122))+((cj5*x1116*x1117))+(((-1.0)*x1112*x1117))+(((-1.0)*x1112*x1113))+((cj1*x1110))+((cj1*r12*x1111))+((cj4*x1121*x1122))+((cj4*x1121*x1124))+((cj5*x1113*x1116))+((cj4*x1112*x1117))+((cj4*x1112*x1113))+(((0.250000349687704)*x1118)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x1111*x1114))+((x1120*x1121))+((x1112*x1119))+(((-1.0)*x1121*x1123))+((cj5*x1115*x1116))+(((-1.0)*sj5*x1116*x1123))+(((-1.0)*sj1*x1110))+((sj5*x1116*x1120))+(((-1.0)*x1112*x1115))+(((-1.0)*cj5*x1116*x1119))+((cj4*x1121*x1123))+(((-1.0)*cj4*x1112*x1119))+((cj4*x1112*x1115))+(((-1.0)*r12*sj1*x1111))+(((0.250000349687704)*x1114))+(((-1.0)*cj4*x1120*x1121)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x1111*x1118))+(((-1.0)*x1121*x1124))+(((-1.0)*x1121*x1122))+(((-1.0)*sj5*x1116*x1124))+(((-1.0)*sj5*x1116*x1122))+((cj5*x1116*x1117))+(((-1.0)*x1112*x1117))+(((-1.0)*x1112*x1113))+((cj1*x1110))+((cj1*r12*x1111))+((cj4*x1121*x1122))+((cj4*x1121*x1124))+((cj5*x1113*x1116))+((cj4*x1112*x1117))+((cj4*x1112*x1113))+(((0.250000349687704)*x1118))))+IKsqr((((x1111*x1114))+((x1120*x1121))+((x1112*x1119))+(((-1.0)*x1121*x1123))+((cj5*x1115*x1116))+(((-1.0)*sj5*x1116*x1123))+(((-1.0)*sj1*x1110))+((sj5*x1116*x1120))+(((-1.0)*x1112*x1115))+(((-1.0)*cj5*x1116*x1119))+((cj4*x1121*x1123))+(((-1.0)*cj4*x1112*x1119))+((cj4*x1112*x1115))+(((-1.0)*r12*sj1*x1111))+(((0.250000349687704)*x1114))+(((-1.0)*cj4*x1120*x1121))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x1111*x1118))+(((-1.0)*x1121*x1124))+(((-1.0)*x1121*x1122))+(((-1.0)*sj5*x1116*x1124))+(((-1.0)*sj5*x1116*x1122))+((cj5*x1116*x1117))+(((-1.0)*x1112*x1117))+(((-1.0)*x1112*x1113))+((cj1*x1110))+((cj1*r12*x1111))+((cj4*x1121*x1122))+((cj4*x1121*x1124))+((cj5*x1113*x1116))+((cj4*x1112*x1117))+((cj4*x1112*x1113))+(((0.250000349687704)*x1118))), (((x1111*x1114))+((x1120*x1121))+((x1112*x1119))+(((-1.0)*x1121*x1123))+((cj5*x1115*x1116))+(((-1.0)*sj5*x1116*x1123))+(((-1.0)*sj1*x1110))+((sj5*x1116*x1120))+(((-1.0)*x1112*x1115))+(((-1.0)*cj5*x1116*x1119))+((cj4*x1121*x1123))+(((-1.0)*cj4*x1112*x1119))+((cj4*x1112*x1115))+(((-1.0)*r12*sj1*x1111))+(((0.250000349687704)*x1114))+(((-1.0)*cj4*x1120*x1121))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1127=IKsin(j2);
IkReal x1128=IKcos(j2);
IkReal x1129=(cj5*r11);
IkReal x1130=((0.433012903784321)*cj4);
IkReal x1131=(r21*sj5);
IkReal x1132=((0.500000349687582)*sj4);
IkReal x1133=((0.749999650312296)*sj3);
IkReal x1134=(cj3*cj4);
IkReal x1135=(cj5*r10);
IkReal x1136=((0.0185150129489311)*sj4);
IkReal x1137=(r20*sj5);
IkReal x1138=(cj4*r22);
IkReal x1139=(r10*sj5);
IkReal x1140=(r22*sj3);
IkReal x1141=(r11*sj5);
IkReal x1142=((0.00925751294893567)*cj4);
IkReal x1143=(cj5*r21);
IkReal x1144=(r12*sj3);
IkReal x1145=(cj4*r12);
IkReal x1146=(cj5*r20);
IkReal x1147=((0.866025201892125)*sj4);
IkReal x1148=(cj1*x1128);
IkReal x1149=(sj1*x1127);
IkReal x1150=(cj1*x1127);
IkReal x1151=((0.250000349687704)*cj4*sj3);
IkReal x1152=(sj1*x1128);
IkReal x1153=(cj3*x1147);
IkReal x1154=(x1148+x1149);
evalcond[0]=(x1154+(((-0.250000349687704)*r22))+(((0.433012903784321)*x1137))+(((-0.749999650312296)*x1138))+(((-1.0)*x1130*x1137))+(((0.433012903784321)*x1143))+(((-1.0)*x1146*x1147))+((x1131*x1147))+(((-1.0)*x1130*x1143)));
evalcond[1]=((((-1.0)*x1135*x1147))+x1150+(((0.433012903784321)*x1129))+(((-0.250000349687704)*r12))+(((0.433012903784321)*x1139))+((x1141*x1147))+(((-1.0)*x1130*x1139))+(((-0.749999650312296)*x1145))+(((-1.0)*x1152))+(((-1.0)*x1129*x1130)));
evalcond[2]=(((x1137*x1142))+(((0.0648043305514941)*x1143))+(((-1.0)*x1131*x1136))+((x1142*x1143))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((0.0160344678271334)*x1138))+(((-0.27144)*x1148))+(((-0.27144)*x1149))+(((0.0648043305514941)*x1137))+((x1136*x1146)));
evalcond[3]=((((-1.0)*x1136*x1141))+(((-0.27144)*x1150))+(((-0.0160344678271334)*r12))+((x1135*x1136))+(((-0.41)*sj1))+(((-1.0)*py))+((x1129*x1142))+(((0.0160344678271334)*x1145))+(((0.27144)*x1152))+((x1139*x1142))+(((0.0648043305514941)*x1129))+(((0.0648043305514941)*x1139)));
evalcond[4]=(x1154+(((-1.0)*sj3*x1132*x1141))+((r12*x1153))+((x1134*x1141))+(((-0.433012903784321)*x1144))+((x1129*x1133))+((x1130*x1144))+(((-1.0)*x1134*x1135))+((x1129*x1151))+((cj3*x1132*x1139))+((x1133*x1139))+((x1139*x1151))+((cj3*x1129*x1132))+((sj3*x1132*x1135)));
evalcond[5]=(x1152+(((-1.0)*x1134*x1146))+(((-1.0)*sj3*x1131*x1132))+((r22*x1153))+((x1137*x1151))+((x1131*x1134))+(((-0.433012903784321)*x1140))+((x1143*x1151))+((x1130*x1140))+(((-1.0)*x1150))+((sj3*x1132*x1146))+((x1133*x1143))+((cj3*x1132*x1137))+((x1133*x1137))+((cj3*x1132*x1143)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1155=(cj4*cj5);
IkReal x1156=((0.866025201892125)*sj4);
IkReal x1157=(r11*sj5);
IkReal x1158=((0.500000349687582)*sj4);
IkReal x1159=((0.433012903784321)*r12);
IkReal x1160=(r10*sj5);
IkReal x1161=((0.433012903784321)*sj5);
IkReal x1162=(cj5*r11);
CheckValue<IkReal> x1163=IKPowWithIntegerCheck(IKsign((((r20*((((cj4*x1161))+((cj5*x1156))+(((-1.0)*x1161))))))+((r22*(((0.250000349687704)+(((0.749999650312296)*cj4))))))+((r21*(((((-0.433012903784321)*cj5))+(((0.433012903784321)*x1155))+(((-1.0)*sj5*x1156)))))))),-1);
if(!x1163.valid){
continue;
}
CheckValue<IkReal> x1164 = IKatan2WithCheck(IkReal(((((-0.749999650312296)*x1160))+(((-0.749999650312296)*x1162))+x1159+(((-1.0)*cj4*x1159))+(((-0.250000349687704)*r11*x1155))+(((-1.0)*cj5*r10*x1158))+(((-0.250000349687704)*cj4*x1160))+((x1157*x1158)))),IkReal(((((-1.0)*cj4*x1157))+(((-1.0)*x1158*x1160))+(((-1.0)*x1158*x1162))+(((-1.0)*r12*x1156))+((r10*x1155)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1164.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1163.value)))+(x1164.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1165=IKsin(j3);
IkReal x1166=IKcos(j3);
IkReal x1167=((0.749999650312296)*r00);
IkReal x1168=(cj5*r20);
IkReal x1169=(cj4*cj5);
IkReal x1170=(cj5*r01);
IkReal x1171=(cj4*r00);
IkReal x1172=(cj4*sj5);
IkReal x1173=((0.500000349687582)*sj4);
IkReal x1174=((0.433012903784321)*r02);
IkReal x1175=((0.866025201892125)*sj4);
IkReal x1176=((0.433012903784321)*r22);
IkReal x1177=(sj5*x1165);
IkReal x1178=(r01*x1173);
IkReal x1179=((1.0)*x1165);
IkReal x1180=((0.250000349687704)*x1166);
IkReal x1181=(cj5*x1165);
IkReal x1182=(cj4*x1166);
IkReal x1183=(x1166*x1173);
IkReal x1184=((0.433012903784321)*r12*x1166);
IkReal x1185=((0.749999650312296)*sj5*x1166);
IkReal x1186=((0.749999650312296)*cj5*x1166);
evalcond[0]=((((-1.0)*r21*x1169*x1180))+(((-1.0)*x1176*x1182))+((r20*x1173*x1177))+((x1166*x1176))+((r21*x1165*x1172))+(((-1.0)*cj4*x1168*x1179))+((r22*x1165*x1175))+((r21*sj5*x1183))+((r21*x1173*x1181))+(((-1.0)*r20*x1185))+(((-1.0)*x1168*x1183))+(((-1.0)*r20*x1172*x1180))+(((-1.0)*r21*x1186)));
evalcond[1]=((((-0.433012903784321)*r12*x1182))+(((-1.0)*r11*x1186))+x1184+((r10*x1173*x1177))+((r12*x1165*x1175))+(((-1.0)*cj5*r10*x1183))+(((-1.0)*r11*x1169*x1180))+((r11*sj5*x1183))+((r11*x1173*x1181))+(((-1.0)*r10*x1185))+(((-1.0)*r10*x1169*x1179))+(((-1.0)*r10*x1172*x1180))+((r11*x1165*x1172)));
evalcond[2]=((((-1.0)*x1165*x1174))+((r00*sj5*x1183))+((r02*x1166*x1175))+(((-1.0)*r00*x1166*x1169))+(((0.749999650312296)*x1165*x1170))+(((0.250000349687704)*x1171*x1177))+((x1170*x1183))+((x1167*x1177))+(((-1.0)*x1177*x1178))+(((0.250000349687704)*r01*x1165*x1169))+((r00*x1173*x1181))+((r01*x1166*x1172))+((cj4*x1165*x1174)));
evalcond[3]=((-1.0)+((r00*x1173*x1177))+((sj5*x1166*x1178))+((x1166*x1174))+(((-1.0)*r01*x1169*x1180))+(((-0.749999650312296)*x1166*x1170))+(((-1.0)*sj5*x1166*x1167))+((r02*x1165*x1175))+(((-1.0)*sj5*x1171*x1180))+((x1165*x1170*x1173))+((r01*x1165*x1172))+(((-1.0)*cj5*r00*x1183))+(((-1.0)*x1174*x1182))+(((-1.0)*r00*x1169*x1179)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1187=((0.528192360616262)*sj4);
IkReal x1188=(r20*sj5);
IkReal x1189=((0.26409636501044)*cj4);
IkReal x1190=((0.444735007694415)*cj5);
IkReal x1191=((0.457427895740576)*cj4);
IkReal x1192=(r10*sj5);
if( IKabs(((((-2.4390243902439)*py))+(((-1.0)*x1189*x1192))+(((-0.204620884747229)*r12))+(((-1.0)*cj5*r10*x1187))+((r11*sj5*x1187))+((r11*x1190))+(((0.444735007694415)*x1192))+(((-1.0)*cj5*r11*x1189))+(((-1.0)*r12*x1191)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*sj5*x1187))+(((0.204620884747229)*r22))+((cj5*r20*x1187))+((x1188*x1189))+((cj5*r21*x1189))+((r22*x1191))+(((-0.444735007694415)*x1188))+(((-1.0)*r21*x1190))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*py))+(((-1.0)*x1189*x1192))+(((-0.204620884747229)*r12))+(((-1.0)*cj5*r10*x1187))+((r11*sj5*x1187))+((r11*x1190))+(((0.444735007694415)*x1192))+(((-1.0)*cj5*r11*x1189))+(((-1.0)*r12*x1191))))+IKsqr(((((-1.0)*r21*sj5*x1187))+(((0.204620884747229)*r22))+((cj5*r20*x1187))+((x1188*x1189))+((cj5*r21*x1189))+((r22*x1191))+(((-0.444735007694415)*x1188))+(((-1.0)*r21*x1190))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*py))+(((-1.0)*x1189*x1192))+(((-0.204620884747229)*r12))+(((-1.0)*cj5*r10*x1187))+((r11*sj5*x1187))+((r11*x1190))+(((0.444735007694415)*x1192))+(((-1.0)*cj5*r11*x1189))+(((-1.0)*r12*x1191))), ((((-1.0)*r21*sj5*x1187))+(((0.204620884747229)*r22))+((cj5*r20*x1187))+((x1188*x1189))+((cj5*r21*x1189))+((r22*x1191))+(((-0.444735007694415)*x1188))+(((-1.0)*r21*x1190))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1193=((1.0)*py);
IkReal x1194=(cj5*r11);
IkReal x1195=(cj5*sj3);
IkReal x1196=(r20*sj5);
IkReal x1197=((0.135720094919197)*sj4);
IkReal x1198=(r21*sj5);
IkReal x1199=((0.0185150129489311)*sj4);
IkReal x1200=((0.135720094919197)*sj3);
IkReal x1201=((0.00925751294893567)*cj4);
IkReal x1202=(cj4*cj5);
IkReal x1203=(cj3*r10);
IkReal x1204=((0.0678600949192303)*cj4);
IkReal x1205=(r10*sj5);
IkReal x1206=((0.10827950965428)*cj4);
IkReal x1207=(cj4*r22);
IkReal x1208=((0.0160344678271334)*r12);
IkReal x1209=((0.20357990508077)*sj3);
IkReal x1210=(cj5*r20);
IkReal x1211=((0.216558867852667)*sj4);
IkReal x1212=((0.117537022603216)*sj3);
IkReal x1213=((0.27144)*cj3);
IkReal x1214=(cj5*r21);
IkReal x1215=(cj4*r12);
IkReal x1216=((0.41)*(IKsin(j1)));
IkReal x1217=((0.41)*(IKcos(j1)));
IkReal x1218=(cj5*r10*sj4);
IkReal x1219=(r11*sj4*sj5);
IkReal x1220=((0.235073880801598)*cj3*sj4);
IkReal x1221=(x1193+x1216);
evalcond[0]=((((0.187545437253636)*x1207))+((x1210*x1211))+(((-0.18234135315471)*x1214))+(((-1.0)*x1198*x1211))+(((0.10827950965428)*r21*x1202))+pz+(((-1.0)*x1217))+(((0.0838945627463637)*r22))+((x1196*x1206))+(((-0.18234135315471)*x1196)));
evalcond[1]=((((0.18234135315471)*x1194))+(((-1.0)*x1221))+(((-1.0)*cj5*r10*x1211))+(((-0.0838945627463637)*r12))+(((-0.187545437253636)*x1215))+(((-1.0)*x1205*x1206))+(((-1.0)*x1194*x1206))+((r11*sj5*x1211))+(((0.18234135315471)*x1205)));
evalcond[2]=((((-1.0)*r21*x1195*x1204))+(((0.0648043305514941)*x1205))+(((-1.0)*x1207*x1212))+((r22*x1212))+(((-1.0)*x1221))+(((-1.0)*x1196*x1209))+(((-1.0)*cj3*x1197*x1214))+(((-1.0)*cj3*x1196*x1197))+((r20*x1202*x1213))+((x1194*x1201))+(((-1.0)*r20*x1195*x1197))+((x1201*x1205))+(((-1.0)*x1208))+(((0.0648043305514941)*x1194))+(((-0.20357990508077)*r21*x1195))+(((-1.0)*sj3*x1196*x1204))+(((-1.0)*r22*x1220))+(((-1.0)*r11*sj5*x1199))+((sj3*x1197*x1198))+((cj4*x1208))+((cj5*r10*x1199))+(((-1.0)*cj4*x1198*x1213)));
evalcond[3]=(((cj4*r11*sj5*x1213))+((x1212*x1215))+(((-1.0)*x1198*x1199))+((cj3*x1194*x1197))+x1217+((x1199*x1210))+(((0.0648043305514941)*x1214))+(((-0.0160344678271334)*r22))+((sj5*x1197*x1203))+(((-1.0)*pz))+((x1201*x1214))+((x1194*x1209))+((x1205*x1209))+(((-0.27144)*x1202*x1203))+(((0.0160344678271334)*x1207))+((r10*x1195*x1197))+(((-1.0)*r12*x1212))+(((0.0648043305514941)*x1196))+((sj3*x1194*x1204))+(((-1.0)*r11*sj3*sj5*x1197))+((r12*x1220))+((x1196*x1201))+((sj3*x1204*x1205)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1222=((0.250000349687704)*r12);
IkReal x1223=((0.749999650312296)*cj4);
IkReal x1224=((0.433012903784321)*sj5);
IkReal x1225=(cj1*r10);
IkReal x1226=(cj1*r22);
IkReal x1227=(cj1*r20);
IkReal x1228=((0.866025201892125)*sj4);
IkReal x1229=(r20*sj1);
IkReal x1230=(r22*sj1);
IkReal x1231=(r10*sj1);
IkReal x1232=(r11*sj1);
IkReal x1233=((0.433012903784321)*cj5);
IkReal x1234=(r21*sj1);
IkReal x1235=(cj1*r21);
IkReal x1236=(cj1*r11);
IkReal x1237=(cj5*sj1*x1228);
IkReal x1238=(cj4*r21*x1233);
if( IKabs(((((-1.0)*x1224*x1225))+(((-1.0)*x1224*x1229))+(((-1.0)*sj5*x1228*x1236))+(((-1.0)*sj5*x1228*x1234))+((cj5*x1225*x1228))+((cj4*x1233*x1234))+((cj4*x1233*x1236))+((x1223*x1230))+((cj1*r12*x1223))+((cj4*x1224*x1225))+((cj4*x1224*x1229))+(((0.250000349687704)*x1230))+(((-1.0)*x1233*x1234))+(((-1.0)*x1233*x1236))+((cj5*x1228*x1229))+((cj1*x1222)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x1224*x1227))+(((-1.0)*sj5*x1228*x1235))+((x1223*x1226))+(((-1.0)*cj5*x1228*x1231))+((cj4*x1233*x1235))+((cj5*x1227*x1228))+((x1224*x1231))+(((0.250000349687704)*x1226))+((cj4*x1224*x1227))+(((-1.0)*cj4*x1224*x1231))+(((-1.0)*sj1*x1222))+(((-1.0)*cj4*x1232*x1233))+(((-1.0)*x1233*x1235))+((x1232*x1233))+((sj5*x1228*x1232))+(((-1.0)*r12*sj1*x1223)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x1224*x1225))+(((-1.0)*x1224*x1229))+(((-1.0)*sj5*x1228*x1236))+(((-1.0)*sj5*x1228*x1234))+((cj5*x1225*x1228))+((cj4*x1233*x1234))+((cj4*x1233*x1236))+((x1223*x1230))+((cj1*r12*x1223))+((cj4*x1224*x1225))+((cj4*x1224*x1229))+(((0.250000349687704)*x1230))+(((-1.0)*x1233*x1234))+(((-1.0)*x1233*x1236))+((cj5*x1228*x1229))+((cj1*x1222))))+IKsqr(((((-1.0)*x1224*x1227))+(((-1.0)*sj5*x1228*x1235))+((x1223*x1226))+(((-1.0)*cj5*x1228*x1231))+((cj4*x1233*x1235))+((cj5*x1227*x1228))+((x1224*x1231))+(((0.250000349687704)*x1226))+((cj4*x1224*x1227))+(((-1.0)*cj4*x1224*x1231))+(((-1.0)*sj1*x1222))+(((-1.0)*cj4*x1232*x1233))+(((-1.0)*x1233*x1235))+((x1232*x1233))+((sj5*x1228*x1232))+(((-1.0)*r12*sj1*x1223))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x1224*x1225))+(((-1.0)*x1224*x1229))+(((-1.0)*sj5*x1228*x1236))+(((-1.0)*sj5*x1228*x1234))+((cj5*x1225*x1228))+((cj4*x1233*x1234))+((cj4*x1233*x1236))+((x1223*x1230))+((cj1*r12*x1223))+((cj4*x1224*x1225))+((cj4*x1224*x1229))+(((0.250000349687704)*x1230))+(((-1.0)*x1233*x1234))+(((-1.0)*x1233*x1236))+((cj5*x1228*x1229))+((cj1*x1222))), ((((-1.0)*x1224*x1227))+(((-1.0)*sj5*x1228*x1235))+((x1223*x1226))+(((-1.0)*cj5*x1228*x1231))+((cj4*x1233*x1235))+((cj5*x1227*x1228))+((x1224*x1231))+(((0.250000349687704)*x1226))+((cj4*x1224*x1227))+(((-1.0)*cj4*x1224*x1231))+(((-1.0)*sj1*x1222))+(((-1.0)*cj4*x1232*x1233))+(((-1.0)*x1233*x1235))+((x1232*x1233))+((sj5*x1228*x1232))+(((-1.0)*r12*sj1*x1223))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1239=IKsin(j2);
IkReal x1240=IKcos(j2);
IkReal x1241=(cj5*r11);
IkReal x1242=((0.433012903784321)*cj4);
IkReal x1243=(r21*sj5);
IkReal x1244=((0.500000349687582)*sj4);
IkReal x1245=((0.749999650312296)*sj3);
IkReal x1246=(cj3*cj4);
IkReal x1247=(cj5*r10);
IkReal x1248=((0.0185150129489311)*sj4);
IkReal x1249=(r20*sj5);
IkReal x1250=(cj4*r22);
IkReal x1251=(r10*sj5);
IkReal x1252=(r22*sj3);
IkReal x1253=(r11*sj5);
IkReal x1254=((0.00925751294893567)*cj4);
IkReal x1255=(cj5*r21);
IkReal x1256=(r12*sj3);
IkReal x1257=(cj4*r12);
IkReal x1258=(cj5*r20);
IkReal x1259=((0.866025201892125)*sj4);
IkReal x1260=(cj1*x1240);
IkReal x1261=(sj1*x1239);
IkReal x1262=(cj1*x1239);
IkReal x1263=((0.250000349687704)*cj4*sj3);
IkReal x1264=(sj1*x1240);
IkReal x1265=(cj3*x1259);
IkReal x1266=(x1261+x1260);
evalcond[0]=((((-1.0)*x1258*x1259))+(((-1.0)*x1242*x1255))+x1266+(((-0.250000349687704)*r22))+((x1243*x1259))+(((0.433012903784321)*x1255))+(((-1.0)*x1242*x1249))+(((-0.749999650312296)*x1250))+(((0.433012903784321)*x1249)));
evalcond[1]=((((-1.0)*x1242*x1251))+x1262+(((-0.250000349687704)*r12))+(((0.433012903784321)*x1251))+(((-1.0)*x1247*x1259))+((x1253*x1259))+(((-1.0)*x1241*x1242))+(((-1.0)*x1264))+(((-0.749999650312296)*x1257))+(((0.433012903784321)*x1241)));
evalcond[2]=((((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x1249))+(((-1.0)*x1243*x1248))+(((-1.0)*pz))+((x1254*x1255))+(((-0.27144)*x1261))+(((-0.27144)*x1260))+(((0.0648043305514941)*x1255))+((x1249*x1254))+(((0.0160344678271334)*x1250))+((x1248*x1258)));
evalcond[3]=(((x1241*x1254))+(((0.27144)*x1264))+(((-0.0160344678271334)*r12))+(((-1.0)*x1248*x1253))+(((0.0648043305514941)*x1241))+(((-0.41)*sj1))+(((-1.0)*py))+((x1247*x1248))+((x1251*x1254))+(((-0.27144)*x1262))+(((0.0648043305514941)*x1251))+(((0.0160344678271334)*x1257)));
evalcond[4]=(((x1246*x1253))+x1266+((x1241*x1263))+((x1245*x1251))+((cj3*x1241*x1244))+((sj3*x1244*x1247))+(((-1.0)*x1246*x1247))+((r12*x1265))+((cj3*x1244*x1251))+((x1241*x1245))+(((-1.0)*sj3*x1244*x1253))+((x1251*x1263))+((x1242*x1256))+(((-0.433012903784321)*x1256)));
evalcond[5]=((((-1.0)*sj3*x1243*x1244))+x1264+((cj3*x1244*x1249))+((x1245*x1255))+((r22*x1265))+((x1255*x1263))+(((-1.0)*x1246*x1258))+((cj3*x1244*x1255))+((sj3*x1244*x1258))+((x1245*x1249))+((x1243*x1246))+(((-1.0)*x1262))+((x1249*x1263))+((x1242*x1252))+(((-0.433012903784321)*x1252)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1267=((0.433012903784321)*cj5);
IkReal x1268=((0.866025201892125)*sj4);
IkReal x1269=((0.433012903784321)*r22);
IkReal x1270=(cj4*sj5);
IkReal x1271=(cj5*r21);
IkReal x1272=(r20*sj5);
IkReal x1273=((0.500000349687582)*sj4);
IkReal x1274=(cj5*x1273);
CheckValue<IkReal> x1275 = IKatan2WithCheck(IkReal((x1269+(((-0.749999650312296)*x1272))+(((-0.749999650312296)*x1271))+((r21*sj5*x1273))+(((-0.250000349687704)*cj4*x1271))+(((-0.250000349687704)*r20*x1270))+(((-1.0)*cj4*x1269))+(((-1.0)*r20*x1274)))),IkReal(((((-1.0)*r22*x1268))+(((-1.0)*x1271*x1273))+(((-1.0)*x1272*x1273))+(((-1.0)*r21*x1270))+((cj4*cj5*r20)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1275.valid){
continue;
}
CheckValue<IkReal> x1276=IKPowWithIntegerCheck(IKsign((((r11*((x1267+((sj5*x1268))+(((-1.0)*cj4*x1267))))))+((r10*(((((-0.433012903784321)*x1270))+(((-1.0)*cj5*x1268))+(((0.433012903784321)*sj5))))))+((r12*(((-0.250000349687704)+(((-0.749999650312296)*cj4)))))))),-1);
if(!x1276.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x1275.value)+(((1.5707963267949)*(x1276.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1277=IKsin(j3);
IkReal x1278=IKcos(j3);
IkReal x1279=((0.749999650312296)*r00);
IkReal x1280=(cj5*r20);
IkReal x1281=(cj4*cj5);
IkReal x1282=(cj5*r01);
IkReal x1283=(cj4*r00);
IkReal x1284=(cj4*sj5);
IkReal x1285=((0.500000349687582)*sj4);
IkReal x1286=((0.433012903784321)*r02);
IkReal x1287=((0.866025201892125)*sj4);
IkReal x1288=((0.433012903784321)*r22);
IkReal x1289=(sj5*x1277);
IkReal x1290=(r01*x1285);
IkReal x1291=((1.0)*x1277);
IkReal x1292=((0.250000349687704)*x1278);
IkReal x1293=(cj5*x1277);
IkReal x1294=(cj4*x1278);
IkReal x1295=(x1278*x1285);
IkReal x1296=((0.433012903784321)*r12*x1278);
IkReal x1297=((0.749999650312296)*sj5*x1278);
IkReal x1298=((0.749999650312296)*cj5*x1278);
evalcond[0]=((((-1.0)*r20*x1284*x1292))+(((-1.0)*cj4*x1280*x1291))+((r21*x1277*x1284))+((x1278*x1288))+(((-1.0)*r21*x1281*x1292))+((r20*x1285*x1289))+(((-1.0)*x1288*x1294))+((r21*x1285*x1293))+(((-1.0)*r21*x1298))+(((-1.0)*x1280*x1295))+(((-1.0)*r20*x1297))+((r21*sj5*x1295))+((r22*x1277*x1287)));
evalcond[1]=((((-1.0)*cj5*r10*x1295))+x1296+(((-1.0)*r10*x1281*x1291))+((r12*x1277*x1287))+((r11*sj5*x1295))+(((-1.0)*r11*x1298))+((r10*x1285*x1289))+((r11*x1277*x1284))+((r11*x1285*x1293))+(((-1.0)*r11*x1281*x1292))+(((-0.433012903784321)*r12*x1294))+(((-1.0)*r10*x1284*x1292))+(((-1.0)*r10*x1297)));
evalcond[2]=(((cj4*x1277*x1286))+((x1279*x1289))+(((-1.0)*x1289*x1290))+((x1282*x1295))+(((-1.0)*x1277*x1286))+((r00*x1285*x1293))+((r00*sj5*x1295))+(((0.749999650312296)*x1277*x1282))+(((0.250000349687704)*x1283*x1289))+(((-1.0)*r00*x1278*x1281))+((r01*x1278*x1284))+((r02*x1278*x1287))+(((0.250000349687704)*r01*x1277*x1281)));
evalcond[3]=((-1.0)+(((-1.0)*r00*x1281*x1291))+(((-1.0)*sj5*x1283*x1292))+(((-1.0)*x1286*x1294))+((x1278*x1286))+((sj5*x1278*x1290))+((r02*x1277*x1287))+(((-1.0)*r01*x1281*x1292))+(((-1.0)*cj5*r00*x1295))+(((-1.0)*sj5*x1278*x1279))+((x1277*x1282*x1285))+(((-0.749999650312296)*x1278*x1282))+((r00*x1285*x1289))+((r01*x1277*x1284)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1299=((0.528192360616262)*sj4);
IkReal x1300=(r20*sj5);
IkReal x1301=((0.26409636501044)*cj4);
IkReal x1302=((0.444735007694415)*cj5);
IkReal x1303=((0.457427895740576)*cj4);
IkReal x1304=(r10*sj5);
if( IKabs(((((-1.0)*cj5*r10*x1299))+(((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*cj5*r11*x1301))+((r11*sj5*x1299))+(((0.444735007694415)*x1304))+((r11*x1302))+(((-1.0)*r12*x1303))+(((-1.0)*x1301*x1304)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+((cj5*r20*x1299))+((x1300*x1301))+(((-1.0)*r21*x1302))+((cj5*r21*x1301))+(((-0.444735007694415)*x1300))+(((-1.0)*r21*sj5*x1299))+((r22*x1303))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj5*r10*x1299))+(((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*cj5*r11*x1301))+((r11*sj5*x1299))+(((0.444735007694415)*x1304))+((r11*x1302))+(((-1.0)*r12*x1303))+(((-1.0)*x1301*x1304))))+IKsqr(((((0.204620884747229)*r22))+((cj5*r20*x1299))+((x1300*x1301))+(((-1.0)*r21*x1302))+((cj5*r21*x1301))+(((-0.444735007694415)*x1300))+(((-1.0)*r21*sj5*x1299))+((r22*x1303))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*cj5*r10*x1299))+(((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*cj5*r11*x1301))+((r11*sj5*x1299))+(((0.444735007694415)*x1304))+((r11*x1302))+(((-1.0)*r12*x1303))+(((-1.0)*x1301*x1304))), ((((0.204620884747229)*r22))+((cj5*r20*x1299))+((x1300*x1301))+(((-1.0)*r21*x1302))+((cj5*r21*x1301))+(((-0.444735007694415)*x1300))+(((-1.0)*r21*sj5*x1299))+((r22*x1303))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1305=((1.0)*py);
IkReal x1306=(cj5*r11);
IkReal x1307=(cj5*sj3);
IkReal x1308=(r20*sj5);
IkReal x1309=((0.135720094919197)*sj4);
IkReal x1310=(r21*sj5);
IkReal x1311=((0.0185150129489311)*sj4);
IkReal x1312=((0.135720094919197)*sj3);
IkReal x1313=((0.00925751294893567)*cj4);
IkReal x1314=(cj4*cj5);
IkReal x1315=(cj3*r10);
IkReal x1316=((0.0678600949192303)*cj4);
IkReal x1317=(r10*sj5);
IkReal x1318=((0.10827950965428)*cj4);
IkReal x1319=(cj4*r22);
IkReal x1320=((0.0160344678271334)*r12);
IkReal x1321=((0.20357990508077)*sj3);
IkReal x1322=(cj5*r20);
IkReal x1323=((0.216558867852667)*sj4);
IkReal x1324=((0.117537022603216)*sj3);
IkReal x1325=((0.27144)*cj3);
IkReal x1326=(cj5*r21);
IkReal x1327=(cj4*r12);
IkReal x1328=((0.41)*(IKsin(j1)));
IkReal x1329=((0.41)*(IKcos(j1)));
IkReal x1330=(cj5*r10*sj4);
IkReal x1331=(r11*sj4*sj5);
IkReal x1332=((0.235073880801598)*cj3*sj4);
IkReal x1333=(x1305+x1328);
evalcond[0]=((((-0.18234135315471)*x1326))+(((-0.18234135315471)*x1308))+(((-1.0)*x1329))+((x1308*x1318))+(((0.10827950965428)*r21*x1314))+(((0.187545437253636)*x1319))+((x1322*x1323))+pz+(((-1.0)*x1310*x1323))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-1.0)*x1317*x1318))+(((-1.0)*cj5*r10*x1323))+(((0.18234135315471)*x1306))+((r11*sj5*x1323))+(((-1.0)*x1306*x1318))+(((-0.0838945627463637)*r12))+(((-0.187545437253636)*x1327))+(((-1.0)*x1333))+(((0.18234135315471)*x1317)));
evalcond[2]=((((-1.0)*x1319*x1324))+(((-1.0)*r21*x1307*x1316))+(((-1.0)*x1308*x1321))+((sj3*x1309*x1310))+((x1313*x1317))+(((-1.0)*cj3*x1309*x1326))+(((0.0648043305514941)*x1306))+((cj4*x1320))+(((-1.0)*cj3*x1308*x1309))+(((-1.0)*x1320))+(((-1.0)*r22*x1332))+(((-1.0)*sj3*x1308*x1316))+((x1306*x1313))+(((-1.0)*r11*sj5*x1311))+(((-1.0)*r20*x1307*x1309))+((r22*x1324))+(((-0.20357990508077)*r21*x1307))+((cj5*r10*x1311))+(((-1.0)*x1333))+(((-1.0)*cj4*x1310*x1325))+((r20*x1314*x1325))+(((0.0648043305514941)*x1317)));
evalcond[3]=(x1329+(((0.0648043305514941)*x1326))+((x1313*x1326))+((r12*x1332))+(((0.0648043305514941)*x1308))+((sj5*x1309*x1315))+((sj3*x1316*x1317))+((x1308*x1313))+((x1306*x1321))+(((-1.0)*r11*sj3*sj5*x1309))+((cj4*r11*sj5*x1325))+(((-0.0160344678271334)*r22))+((sj3*x1306*x1316))+((x1324*x1327))+((cj3*x1306*x1309))+(((-1.0)*r12*x1324))+(((-1.0)*pz))+(((0.0160344678271334)*x1319))+((r10*x1307*x1309))+(((-1.0)*x1310*x1311))+(((-0.27144)*x1314*x1315))+((x1317*x1321))+((x1311*x1322)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1334=((0.250000349687704)*r12);
IkReal x1335=((0.749999650312296)*cj4);
IkReal x1336=((0.433012903784321)*sj5);
IkReal x1337=(cj1*r10);
IkReal x1338=(cj1*r22);
IkReal x1339=(cj1*r20);
IkReal x1340=((0.866025201892125)*sj4);
IkReal x1341=(r20*sj1);
IkReal x1342=(r22*sj1);
IkReal x1343=(r10*sj1);
IkReal x1344=(r11*sj1);
IkReal x1345=((0.433012903784321)*cj5);
IkReal x1346=(r21*sj1);
IkReal x1347=(cj1*r21);
IkReal x1348=(cj1*r11);
IkReal x1349=(cj5*sj1*x1340);
IkReal x1350=(cj4*r21*x1345);
if( IKabs(((((-1.0)*x1336*x1341))+((cj1*x1334))+((cj4*x1336*x1341))+(((-1.0)*x1336*x1337))+((cj5*x1337*x1340))+((cj4*x1336*x1337))+((x1335*x1342))+(((0.250000349687704)*x1342))+((cj4*x1345*x1346))+((cj4*x1345*x1348))+((cj1*r12*x1335))+((cj5*x1340*x1341))+(((-1.0)*sj5*x1340*x1346))+(((-1.0)*sj5*x1340*x1348))+(((-1.0)*x1345*x1348))+(((-1.0)*x1345*x1346)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*x1339*x1340))+(((-1.0)*cj4*x1344*x1345))+(((0.250000349687704)*x1338))+((x1344*x1345))+((x1335*x1338))+(((-1.0)*cj5*x1340*x1343))+((sj5*x1340*x1344))+(((-1.0)*x1336*x1339))+((x1336*x1343))+(((-1.0)*cj4*x1336*x1343))+((cj4*x1336*x1339))+(((-1.0)*r12*sj1*x1335))+((cj4*x1345*x1347))+(((-1.0)*sj1*x1334))+(((-1.0)*sj5*x1340*x1347))+(((-1.0)*x1345*x1347)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x1336*x1341))+((cj1*x1334))+((cj4*x1336*x1341))+(((-1.0)*x1336*x1337))+((cj5*x1337*x1340))+((cj4*x1336*x1337))+((x1335*x1342))+(((0.250000349687704)*x1342))+((cj4*x1345*x1346))+((cj4*x1345*x1348))+((cj1*r12*x1335))+((cj5*x1340*x1341))+(((-1.0)*sj5*x1340*x1346))+(((-1.0)*sj5*x1340*x1348))+(((-1.0)*x1345*x1348))+(((-1.0)*x1345*x1346))))+IKsqr((((cj5*x1339*x1340))+(((-1.0)*cj4*x1344*x1345))+(((0.250000349687704)*x1338))+((x1344*x1345))+((x1335*x1338))+(((-1.0)*cj5*x1340*x1343))+((sj5*x1340*x1344))+(((-1.0)*x1336*x1339))+((x1336*x1343))+(((-1.0)*cj4*x1336*x1343))+((cj4*x1336*x1339))+(((-1.0)*r12*sj1*x1335))+((cj4*x1345*x1347))+(((-1.0)*sj1*x1334))+(((-1.0)*sj5*x1340*x1347))+(((-1.0)*x1345*x1347))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x1336*x1341))+((cj1*x1334))+((cj4*x1336*x1341))+(((-1.0)*x1336*x1337))+((cj5*x1337*x1340))+((cj4*x1336*x1337))+((x1335*x1342))+(((0.250000349687704)*x1342))+((cj4*x1345*x1346))+((cj4*x1345*x1348))+((cj1*r12*x1335))+((cj5*x1340*x1341))+(((-1.0)*sj5*x1340*x1346))+(((-1.0)*sj5*x1340*x1348))+(((-1.0)*x1345*x1348))+(((-1.0)*x1345*x1346))), (((cj5*x1339*x1340))+(((-1.0)*cj4*x1344*x1345))+(((0.250000349687704)*x1338))+((x1344*x1345))+((x1335*x1338))+(((-1.0)*cj5*x1340*x1343))+((sj5*x1340*x1344))+(((-1.0)*x1336*x1339))+((x1336*x1343))+(((-1.0)*cj4*x1336*x1343))+((cj4*x1336*x1339))+(((-1.0)*r12*sj1*x1335))+((cj4*x1345*x1347))+(((-1.0)*sj1*x1334))+(((-1.0)*sj5*x1340*x1347))+(((-1.0)*x1345*x1347))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1351=IKsin(j2);
IkReal x1352=IKcos(j2);
IkReal x1353=(cj5*r11);
IkReal x1354=((0.433012903784321)*cj4);
IkReal x1355=(r21*sj5);
IkReal x1356=((0.500000349687582)*sj4);
IkReal x1357=((0.749999650312296)*sj3);
IkReal x1358=(cj3*cj4);
IkReal x1359=(cj5*r10);
IkReal x1360=((0.0185150129489311)*sj4);
IkReal x1361=(r20*sj5);
IkReal x1362=(cj4*r22);
IkReal x1363=(r10*sj5);
IkReal x1364=(r22*sj3);
IkReal x1365=(r11*sj5);
IkReal x1366=((0.00925751294893567)*cj4);
IkReal x1367=(cj5*r21);
IkReal x1368=(r12*sj3);
IkReal x1369=(cj4*r12);
IkReal x1370=(cj5*r20);
IkReal x1371=((0.866025201892125)*sj4);
IkReal x1372=(cj1*x1352);
IkReal x1373=(sj1*x1351);
IkReal x1374=(cj1*x1351);
IkReal x1375=((0.250000349687704)*cj4*sj3);
IkReal x1376=(sj1*x1352);
IkReal x1377=(cj3*x1371);
IkReal x1378=(x1373+x1372);
evalcond[0]=(x1378+(((0.433012903784321)*x1367))+(((0.433012903784321)*x1361))+(((-0.250000349687704)*r22))+(((-1.0)*x1370*x1371))+(((-1.0)*x1354*x1361))+(((-1.0)*x1354*x1367))+(((-0.749999650312296)*x1362))+((x1355*x1371)));
evalcond[1]=(((x1365*x1371))+x1374+(((0.433012903784321)*x1353))+(((0.433012903784321)*x1363))+(((-0.250000349687704)*r12))+(((-1.0)*x1376))+(((-1.0)*x1354*x1363))+(((-0.749999650312296)*x1369))+(((-1.0)*x1359*x1371))+(((-1.0)*x1353*x1354)));
evalcond[2]=(((x1366*x1367))+(((-0.27144)*x1373))+(((-0.27144)*x1372))+((x1361*x1366))+(((0.0648043305514941)*x1361))+(((0.0648043305514941)*x1367))+(((0.0160344678271334)*x1362))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*x1355*x1360))+(((-1.0)*pz))+((x1360*x1370)));
evalcond[3]=((((0.27144)*x1376))+(((-0.27144)*x1374))+((x1363*x1366))+(((0.0648043305514941)*x1353))+(((-0.0160344678271334)*r12))+(((0.0648043305514941)*x1363))+(((0.0160344678271334)*x1369))+((x1359*x1360))+(((-0.41)*sj1))+(((-1.0)*py))+(((-1.0)*x1360*x1365))+((x1353*x1366)));
evalcond[4]=(((x1357*x1363))+((x1353*x1375))+x1378+(((-1.0)*sj3*x1356*x1365))+((x1354*x1368))+((r12*x1377))+((x1358*x1365))+(((-1.0)*x1358*x1359))+(((-0.433012903784321)*x1368))+((sj3*x1356*x1359))+((cj3*x1353*x1356))+((x1353*x1357))+((x1363*x1375))+((cj3*x1356*x1363)));
evalcond[5]=(((x1357*x1367))+((x1357*x1361))+x1376+((x1355*x1358))+((sj3*x1356*x1370))+(((-1.0)*x1374))+((x1354*x1364))+((x1367*x1375))+(((-1.0)*x1358*x1370))+((r22*x1377))+(((-0.433012903784321)*x1364))+((cj3*x1356*x1361))+((cj3*x1356*x1367))+((x1361*x1375))+(((-1.0)*sj3*x1355*x1356)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j3eval[2];
sj0=-1.0;
cj0=0;
j0=-1.5707963267949;
IkReal x1379=(cj4*r12);
IkReal x1380=(r10*sj5);
IkReal x1381=((0.433012903784321)*cj4);
IkReal x1382=(cj5*r11);
IkReal x1383=((1.73204919243206)*cj4);
IkReal x1384=(cj5*r10*sj4);
IkReal x1385=(r11*sj4*sj5);
j3eval[0]=(((x1380*x1383))+(((2.99999440500457)*x1379))+(((3.46409596216145)*x1384))+(((-3.46409596216145)*x1385))+r12+(((-1.73204919243206)*x1380))+(((-1.73204919243206)*x1382))+((x1382*x1383)));
j3eval[1]=IKsign((((x1380*x1381))+((x1381*x1382))+(((0.749999650312296)*x1379))+(((0.250000349687704)*r12))+(((0.866025201892125)*x1384))+(((-0.433012903784321)*x1382))+(((-0.433012903784321)*x1380))+(((-0.866025201892125)*x1385))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=-1.0;
cj0=0;
j0=-1.5707963267949;
IkReal x1386=(cj4*r22);
IkReal x1387=(cj5*r21);
IkReal x1388=((0.866025201892125)*sj4);
IkReal x1389=(cj5*r20);
IkReal x1390=(r21*sj5);
IkReal x1391=((3.46409596216145)*sj4);
IkReal x1392=(r20*sj5);
IkReal x1393=(cj4*x1392);
j3eval[0]=((((-1.73204919243206)*cj4*x1387))+(((-1.0)*x1389*x1391))+((x1390*x1391))+(((-2.99999440500457)*x1386))+(((-1.0)*r22))+(((-1.73204919243206)*x1393))+(((1.73204919243206)*x1392))+(((1.73204919243206)*x1387)));
j3eval[1]=IKsign((((x1388*x1390))+(((-0.250000349687704)*r22))+(((0.433012903784321)*x1387))+(((0.433012903784321)*x1392))+(((-0.433012903784321)*cj4*x1387))+(((-0.749999650312296)*x1386))+(((-1.0)*x1388*x1389))+(((-0.433012903784321)*x1393))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
{
IkReal j3eval[2];
sj0=-1.0;
cj0=0;
j0=-1.5707963267949;
IkReal x1394=cj5*cj5;
IkReal x1395=cj4*cj4;
IkReal x1396=r00*r00;
IkReal x1397=r01*r01;
IkReal x1398=r02*r02;
IkReal x1399=((3.9999972025013)*sj4);
IkReal x1400=(r00*r01);
IkReal x1401=(cj5*sj5);
IkReal x1402=(r00*r02);
IkReal x1403=(cj5*sj4);
IkReal x1404=((1.29903719716146)*cj4);
IkReal x1405=(r01*r02);
IkReal x1406=((0.375000349687459)*cj4);
IkReal x1407=(sj4*sj5);
IkReal x1408=(cj4*sj4);
IkReal x1409=((2.309396769726)*cj4);
IkReal x1410=((2.0)*cj4);
IkReal x1411=((0.433012298107169)*cj4);
IkReal x1412=((6.9281919243229)*cj4);
IkReal x1413=((0.750000174843424)*sj4);
IkReal x1414=(cj4*x1401);
IkReal x1415=((0.649519052837905)*x1395);
IkReal x1416=((3.46409838486413)*x1395);
IkReal x1417=((1.50000034968685)*x1394);
IkReal x1418=((4.99999440500457)*x1395);
IkReal x1419=((7.99999440500261)*x1394);
IkReal x1420=((0.937499825156026)*x1395);
IkReal x1421=(x1397*x1413);
IkReal x1422=(x1395*x1398);
IkReal x1423=(x1394*x1396);
IkReal x1424=(x1394*x1397);
IkReal x1425=(x1395*x1396);
IkReal x1426=(x1395*x1397);
j3eval[0]=((((-1.15470161513813)*sj5*x1402))+(((-1.15470161513813)*cj5*x1405))+((x1410*x1423))+(((-4.99999440500457)*x1398))+(((2.99999440500457)*x1422))+(((2.99999440500457)*x1423))+((x1396*x1399*x1414))+(((-1.0)*x1396*x1399*x1401))+(((-4.33332836000522)*x1396))+(((-3.99999440500457)*x1426))+((x1400*x1408*x1419))+((x1398*x1410))+((x1402*x1403*x1412))+(((-1.33333395500065)*x1397))+(((9.99998881000913)*x1395*x1400*x1401))+(((2.30940161513813)*x1402*x1403))+((cj5*x1405*x1416))+(((-1.0)*x1418*x1423))+(((-2.30940161513813)*x1405*x1407))+((x1397*x1399*x1401))+((x1399*x1400))+x1425+(((-4.0)*x1400*x1414))+((x1418*x1424))+(((-1.0)*x1405*x1407*x1412))+((sj5*x1402*x1416))+(((-2.99999440500457)*x1424))+(((-1.0)*cj4*x1399*x1400))+(((-1.0)*sj5*x1402*x1409))+(((-1.0)*cj5*x1405*x1409))+(((-1.0)*x1410*x1424))+(((-1.0)*x1397*x1399*x1414))+(((-1.0)*x1396*x1410))+(((-5.99998881000913)*x1400*x1401))+(((-1.0)*sj4*x1400*x1419)));
j3eval[1]=IKsign(((((1.87499965031205)*x1395*x1400*x1401))+((x1406*x1423))+(((-0.750000699374918)*x1400*x1414))+(((-1.0)*x1396*x1401*x1413))+(((-0.216506754730737)*cj5*x1405))+(((-0.433013206622791)*x1405*x1407))+((x1420*x1424))+(((-1.0)*x1404*x1405*x1407))+(((0.433013206622791)*x1402*x1403))+(((-0.81249982515627)*x1396))+((x1402*x1403*x1404))+((x1400*x1413))+(((-0.937499825156026)*x1398))+((x1400*x1408*x1417))+((x1401*x1421))+(((-0.562499475468567)*x1424))+(((-1.0)*x1420*x1423))+(((-0.750000174843424)*x1397*x1401*x1408))+((cj5*x1405*x1415))+(((-0.250000349687704)*x1397))+(((0.562499475468567)*x1423))+(((0.562499475468567)*x1422))+(((-1.12499895093713)*x1400*x1401))+(((-1.0)*sj5*x1402*x1411))+((sj5*x1402*x1415))+((x1398*x1406))+(((-1.0)*x1396*x1406))+(((-0.216506754730737)*sj5*x1402))+(((-0.749999650312296)*x1426))+(((0.18750017484373)*x1425))+(((-1.0)*x1406*x1424))+(((0.750000174843424)*x1396*x1401*x1408))+(((-0.750000174843424)*x1400*x1408))+(((-1.0)*sj4*x1400*x1417))+(((-1.0)*cj5*x1405*x1411))));
if( IKabs(j3eval[0]) < 0.0000010000000000  || IKabs(j3eval[1]) < 0.0000010000000000  )
{
continue; // no branches [j1, j2, j3]

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1427=cj4*cj4;
IkReal x1428=r02*r02;
IkReal x1429=r00*r00;
IkReal x1430=cj5*cj5;
IkReal x1431=r01*r01;
IkReal x1432=(cj5*sj4);
IkReal x1433=(r00*r02);
IkReal x1434=(cj4*r02);
IkReal x1435=(cj5*r01);
IkReal x1436=(r02*sj4);
IkReal x1437=(cj4*r00);
IkReal x1438=(r00*sj5);
IkReal x1439=(r01*sj4);
IkReal x1440=(r01*sj5);
IkReal x1441=((0.375000349687459)*cj4);
IkReal x1442=(cj4*sj5);
IkReal x1443=((0.562499475468567)*x1430);
IkReal x1444=((0.937499825156026)*x1427);
IkReal x1445=((0.649519052837905)*x1427);
IkReal x1446=((1.50000034968685)*x1430);
IkReal x1447=((0.750000174843424)*x1429);
IkReal x1448=((0.750000174843424)*sj5*x1431);
IkReal x1449=(x1430*x1431);
IkReal x1450=(x1429*x1430);
CheckValue<IkReal> x1451=IKPowWithIntegerCheck(IKsign((((x1444*x1449))+(((-0.937499825156026)*x1428))+((r02*x1435*x1445))+(((-1.12499895093713)*x1435*x1438))+(((0.562499475468567)*x1427*x1428))+(((-0.749999650312296)*x1427*x1431))+(((-0.750000174843424)*x1437*x1439))+((sj5*x1433*x1445))+(((-0.750000174843424)*x1431*x1432*x1442))+(((1.87499965031205)*x1427*x1435*x1438))+((x1428*x1441))+(((-1.0)*x1441*x1449))+(((1.29903719716146)*cj4*x1432*x1433))+(((0.18750017484373)*x1427*x1429))+(((-0.433012298107169)*x1433*x1442))+(((-0.250000349687704)*x1431))+(((-1.0)*r00*x1439*x1446))+(((-0.81249982515627)*x1429))+(((-1.0)*x1429*x1441))+(((-0.433012298107169)*x1434*x1435))+(((-1.29903719716146)*sj5*x1434*x1439))+(((-0.433013206622791)*x1436*x1440))+(((0.433013206622791)*x1432*x1433))+(((0.750000174843424)*r00*x1439))+(((-0.216506754730737)*sj5*x1433))+((x1429*x1443))+(((-1.0)*x1431*x1443))+(((-1.0)*sj5*x1432*x1447))+((x1432*x1448))+((x1437*x1439*x1446))+((x1441*x1450))+(((-0.750000699374918)*sj5*x1435*x1437))+((x1432*x1442*x1447))+(((-0.216506754730737)*r02*x1435))+(((-1.0)*x1444*x1450)))),-1);
if(!x1451.valid){
continue;
}
CheckValue<IkReal> x1452 = IKatan2WithCheck(IkReal(((((-1.0)*cj5*x1437))+((cj4*x1440))+(((0.500000349687582)*r01*x1432))+(((0.500000349687582)*sj4*x1438))+(((0.866025201892125)*x1436)))),IkReal(((((-0.433012903784321)*x1434))+(((-0.250000349687704)*sj5*x1437))+(((-0.500000349687582)*r00*x1432))+(((-0.749999650312296)*x1435))+(((-0.749999650312296)*x1438))+(((-0.250000349687704)*cj4*x1435))+(((0.433012903784321)*r02))+(((0.500000349687582)*sj5*x1439)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1452.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1451.value)))+(x1452.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1453=IKsin(j3);
IkReal x1454=IKcos(j3);
IkReal x1455=((0.749999650312296)*r00);
IkReal x1456=(cj5*r20);
IkReal x1457=(cj4*cj5);
IkReal x1458=(cj5*r01);
IkReal x1459=(cj4*r00);
IkReal x1460=(cj4*sj5);
IkReal x1461=((0.500000349687582)*sj4);
IkReal x1462=((0.433012903784321)*r02);
IkReal x1463=((0.866025201892125)*sj4);
IkReal x1464=((0.433012903784321)*r22);
IkReal x1465=(sj5*x1453);
IkReal x1466=(r01*x1461);
IkReal x1467=((1.0)*x1453);
IkReal x1468=((0.250000349687704)*x1454);
IkReal x1469=(cj5*x1453);
IkReal x1470=(cj4*x1454);
IkReal x1471=(x1454*x1461);
IkReal x1472=((0.433012903784321)*r12*x1454);
IkReal x1473=((0.749999650312296)*sj5*x1454);
IkReal x1474=((0.749999650312296)*cj5*x1454);
evalcond[0]=((((-1.0)*r21*x1474))+(((-1.0)*r20*x1473))+((r21*sj5*x1471))+((x1454*x1464))+((r22*x1453*x1463))+(((-1.0)*cj4*x1456*x1467))+((r20*x1461*x1465))+((r21*x1461*x1469))+(((-1.0)*x1456*x1471))+(((-1.0)*r21*x1457*x1468))+((r21*x1453*x1460))+(((-1.0)*r20*x1460*x1468))+(((-1.0)*x1464*x1470)));
evalcond[1]=(((r11*x1461*x1469))+((r12*x1453*x1463))+(((-0.433012903784321)*r12*x1470))+(((-1.0)*cj5*r10*x1471))+((r11*sj5*x1471))+(((-1.0)*r10*x1473))+(((-1.0)*r11*x1474))+(((-1.0)*r10*x1460*x1468))+(((-1.0)*r11*x1457*x1468))+((r10*x1461*x1465))+x1472+((r11*x1453*x1460))+(((-1.0)*r10*x1457*x1467)));
evalcond[2]=((((0.749999650312296)*x1453*x1458))+((r00*x1461*x1469))+(((0.250000349687704)*x1459*x1465))+(((-1.0)*x1453*x1462))+((cj4*x1453*x1462))+((r02*x1454*x1463))+(((0.250000349687704)*r01*x1453*x1457))+((r01*x1454*x1460))+((x1455*x1465))+(((-1.0)*r00*x1454*x1457))+(((-1.0)*x1465*x1466))+((x1458*x1471))+((r00*sj5*x1471)));
evalcond[3]=((1.0)+((r00*x1461*x1465))+((x1453*x1458*x1461))+((r01*x1453*x1460))+((sj5*x1454*x1466))+(((-1.0)*sj5*x1454*x1455))+(((-1.0)*cj5*r00*x1471))+((x1454*x1462))+(((-0.749999650312296)*x1454*x1458))+((r02*x1453*x1463))+(((-1.0)*sj5*x1459*x1468))+(((-1.0)*r00*x1457*x1467))+(((-1.0)*x1462*x1470))+(((-1.0)*r01*x1457*x1468)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1475=((0.528192360616262)*sj4);
IkReal x1476=((0.26409636501044)*cj4);
IkReal x1477=(r20*sj5);
IkReal x1478=((0.444735007694415)*cj5);
IkReal x1479=((0.457427895740576)*cj4);
IkReal x1480=(r10*sj5);
if( IKabs((((r12*x1479))+(((-1.0)*r11*sj5*x1475))+((x1476*x1480))+(((-1.0)*r11*x1478))+((cj5*r10*x1475))+((cj5*r11*x1476))+(((0.204620884747229)*r12))+(((2.4390243902439)*py))+(((-0.444735007694415)*x1480)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*x1478))+(((-1.0)*r21*sj5*x1475))+(((0.204620884747229)*r22))+((r22*x1479))+((cj5*r20*x1475))+((cj5*r21*x1476))+((x1476*x1477))+(((-0.444735007694415)*x1477))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r12*x1479))+(((-1.0)*r11*sj5*x1475))+((x1476*x1480))+(((-1.0)*r11*x1478))+((cj5*r10*x1475))+((cj5*r11*x1476))+(((0.204620884747229)*r12))+(((2.4390243902439)*py))+(((-0.444735007694415)*x1480))))+IKsqr(((((-1.0)*r21*x1478))+(((-1.0)*r21*sj5*x1475))+(((0.204620884747229)*r22))+((r22*x1479))+((cj5*r20*x1475))+((cj5*r21*x1476))+((x1476*x1477))+(((-0.444735007694415)*x1477))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r12*x1479))+(((-1.0)*r11*sj5*x1475))+((x1476*x1480))+(((-1.0)*r11*x1478))+((cj5*r10*x1475))+((cj5*r11*x1476))+(((0.204620884747229)*r12))+(((2.4390243902439)*py))+(((-0.444735007694415)*x1480))), ((((-1.0)*r21*x1478))+(((-1.0)*r21*sj5*x1475))+(((0.204620884747229)*r22))+((r22*x1479))+((cj5*r20*x1475))+((cj5*r21*x1476))+((x1476*x1477))+(((-0.444735007694415)*x1477))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1481=(cj5*sj4);
IkReal x1482=((0.135720094919197)*sj3);
IkReal x1483=(cj5*r11);
IkReal x1484=(cj5*r21);
IkReal x1485=((0.20357990508077)*sj3);
IkReal x1486=(r20*sj5);
IkReal x1487=((0.00925751294893567)*cj4);
IkReal x1488=(cj4*r10);
IkReal x1489=((0.27144)*cj3);
IkReal x1490=((0.10827950965428)*cj4);
IkReal x1491=((0.117537022603216)*sj3);
IkReal x1492=(cj4*r22);
IkReal x1493=(cj3*sj4);
IkReal x1494=(cj4*r12);
IkReal x1495=(r10*sj5);
IkReal x1496=(cj4*sj5);
IkReal x1497=((0.135720094919197)*cj3);
IkReal x1498=((0.41)*(IKcos(j1)));
IkReal x1499=((0.41)*(IKsin(j1)));
IkReal x1500=(r11*sj4*sj5);
IkReal x1501=((0.0678600949192303)*cj4*sj3);
IkReal x1502=(r21*sj4*sj5);
evalcond[0]=((((-0.18234135315471)*x1495))+(((-1.0)*x1499))+(((-0.18234135315471)*x1483))+(((0.216558867852667)*r10*x1481))+((x1483*x1490))+py+(((0.187545437253636)*x1494))+(((-0.216558867852667)*x1500))+(((0.10827950965428)*sj5*x1488))+(((0.0838945627463637)*r12)));
evalcond[1]=((((-1.0)*x1498))+(((-0.18234135315471)*x1486))+(((-0.18234135315471)*x1484))+((x1486*x1490))+((x1484*x1490))+pz+(((0.187545437253636)*x1492))+(((-0.216558867852667)*x1502))+(((0.216558867852667)*r20*x1481))+(((0.0838945627463637)*r22)));
evalcond[2]=((((0.0678600949192303)*sj3*sj5*x1488))+(((-1.0)*r12*x1491))+(((-0.0185150129489311)*r20*x1481))+(((-1.0)*x1482*x1500))+(((-1.0)*x1498))+(((-1.0)*x1484*x1487))+((r10*x1481*x1482))+(((-0.0160344678271334)*x1492))+(((-1.0)*x1486*x1487))+(((0.135720094919197)*x1493*x1495))+((x1491*x1494))+((x1483*x1485))+((x1485*x1495))+(((0.0185150129489311)*x1502))+pz+(((0.0160344678271334)*r22))+(((0.235073880801598)*r12*x1493))+(((-0.0648043305514941)*x1486))+(((-0.0648043305514941)*x1484))+((r11*x1489*x1496))+(((-1.0)*cj5*x1488*x1489))+((r11*x1481*x1497))+((x1483*x1501)));
evalcond[3]=((((0.235073880801598)*r22*x1493))+(((0.0648043305514941)*x1495))+(((0.0648043305514941)*x1483))+(((-1.0)*x1482*x1502))+(((-0.0185150129489311)*x1500))+(((0.135720094919197)*x1486*x1493))+(((-0.0160344678271334)*r12))+((x1487*x1495))+((x1491*x1492))+(((0.0185150129489311)*r10*x1481))+(((-1.0)*py))+((r21*x1489*x1496))+((x1483*x1487))+((r21*x1481*x1497))+((x1484*x1485))+((x1485*x1486))+x1499+((x1484*x1501))+((r20*x1481*x1482))+(((-1.0)*r22*x1491))+((x1486*x1501))+(((0.0160344678271334)*x1494))+(((-1.0)*cj4*cj5*r20*x1489)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1503=((0.250000349687704)*r12);
IkReal x1504=((0.749999650312296)*cj4);
IkReal x1505=(cj1*r22);
IkReal x1506=((0.866025201892125)*sj4);
IkReal x1507=(cj1*r20);
IkReal x1508=(sj1*sj5);
IkReal x1509=((0.433012903784321)*r20);
IkReal x1510=((0.433012903784321)*sj5);
IkReal x1511=(cj1*r10);
IkReal x1512=(r22*sj1);
IkReal x1513=((0.433012903784321)*r10);
IkReal x1514=((0.433012903784321)*cj5);
IkReal x1515=(cj1*r21);
IkReal x1516=(cj1*r11);
IkReal x1517=(r11*sj1);
IkReal x1518=(cj1*cj4*x1510);
IkReal x1519=(cj5*sj1*x1506);
IkReal x1520=(cj4*r21*x1514);
if( IKabs(((((-1.0)*cj1*r12*x1504))+((x1514*x1516))+((x1510*x1511))+(((-1.0)*cj1*x1503))+((r20*x1519))+((x1504*x1512))+((sj1*x1520))+(((-1.0)*cj4*x1514*x1516))+((sj5*x1506*x1516))+(((-1.0)*cj5*x1506*x1511))+(((-1.0)*r21*x1506*x1508))+((cj4*x1508*x1509))+(((-1.0)*cj4*x1510*x1511))+(((-1.0)*x1508*x1509))+(((-1.0)*r21*sj1*x1514))+(((0.250000349687704)*x1512)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.250000349687704)*x1505))+(((-1.0)*sj5*x1506*x1515))+(((-1.0)*x1507*x1510))+((x1504*x1505))+((r10*x1519))+((sj1*x1503))+((r12*sj1*x1504))+(((-1.0)*x1514*x1515))+(((-1.0)*x1514*x1517))+((cj4*x1507*x1510))+((cj4*x1508*x1513))+((cj4*x1514*x1517))+((cj4*x1514*x1515))+((cj5*x1506*x1507))+(((-1.0)*x1508*x1513))+(((-1.0)*r11*x1506*x1508)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*r12*x1504))+((x1514*x1516))+((x1510*x1511))+(((-1.0)*cj1*x1503))+((r20*x1519))+((x1504*x1512))+((sj1*x1520))+(((-1.0)*cj4*x1514*x1516))+((sj5*x1506*x1516))+(((-1.0)*cj5*x1506*x1511))+(((-1.0)*r21*x1506*x1508))+((cj4*x1508*x1509))+(((-1.0)*cj4*x1510*x1511))+(((-1.0)*x1508*x1509))+(((-1.0)*r21*sj1*x1514))+(((0.250000349687704)*x1512))))+IKsqr(((((0.250000349687704)*x1505))+(((-1.0)*sj5*x1506*x1515))+(((-1.0)*x1507*x1510))+((x1504*x1505))+((r10*x1519))+((sj1*x1503))+((r12*sj1*x1504))+(((-1.0)*x1514*x1515))+(((-1.0)*x1514*x1517))+((cj4*x1507*x1510))+((cj4*x1508*x1513))+((cj4*x1514*x1517))+((cj4*x1514*x1515))+((cj5*x1506*x1507))+(((-1.0)*x1508*x1513))+(((-1.0)*r11*x1506*x1508))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj1*r12*x1504))+((x1514*x1516))+((x1510*x1511))+(((-1.0)*cj1*x1503))+((r20*x1519))+((x1504*x1512))+((sj1*x1520))+(((-1.0)*cj4*x1514*x1516))+((sj5*x1506*x1516))+(((-1.0)*cj5*x1506*x1511))+(((-1.0)*r21*x1506*x1508))+((cj4*x1508*x1509))+(((-1.0)*cj4*x1510*x1511))+(((-1.0)*x1508*x1509))+(((-1.0)*r21*sj1*x1514))+(((0.250000349687704)*x1512))), ((((0.250000349687704)*x1505))+(((-1.0)*sj5*x1506*x1515))+(((-1.0)*x1507*x1510))+((x1504*x1505))+((r10*x1519))+((sj1*x1503))+((r12*sj1*x1504))+(((-1.0)*x1514*x1515))+(((-1.0)*x1514*x1517))+((cj4*x1507*x1510))+((cj4*x1508*x1513))+((cj4*x1514*x1517))+((cj4*x1514*x1515))+((cj5*x1506*x1507))+(((-1.0)*x1508*x1513))+(((-1.0)*r11*x1506*x1508))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1521=IKcos(j2);
IkReal x1522=IKsin(j2);
IkReal x1523=(cj5*r11);
IkReal x1524=((0.433012903784321)*cj4);
IkReal x1525=(r21*sj5);
IkReal x1526=((0.500000349687582)*sj4);
IkReal x1527=((0.749999650312296)*sj3);
IkReal x1528=(cj3*cj4);
IkReal x1529=(cj5*r10);
IkReal x1530=((0.0185150129489311)*sj4);
IkReal x1531=(r20*sj5);
IkReal x1532=(cj4*r22);
IkReal x1533=(r10*sj5);
IkReal x1534=(r12*sj3);
IkReal x1535=(r11*sj5);
IkReal x1536=(r22*sj3);
IkReal x1537=((0.27144)*sj1);
IkReal x1538=((0.00925751294893567)*cj4);
IkReal x1539=(cj5*r20);
IkReal x1540=(cj5*r21);
IkReal x1541=(cj4*r12);
IkReal x1542=((0.866025201892125)*sj4);
IkReal x1543=(sj1*x1521);
IkReal x1544=(cj1*x1521);
IkReal x1545=(cj1*x1522);
IkReal x1546=((0.250000349687704)*cj4*sj3);
IkReal x1547=(cj3*x1542);
IkReal x1548=(sj1*x1522);
IkReal x1549=((1.0)*x1545);
evalcond[0]=((((-1.0)*x1524*x1531))+(((-1.0)*x1524*x1540))+(((-0.749999650312296)*x1532))+(((-0.250000349687704)*r22))+(((0.433012903784321)*x1531))+((x1525*x1542))+(((0.433012903784321)*x1540))+x1544+x1548+(((-1.0)*x1539*x1542)));
evalcond[1]=((((-1.0)*x1524*x1533))+(((0.433012903784321)*x1523))+(((-0.250000349687704)*r12))+(((-0.749999650312296)*x1541))+(((0.433012903784321)*x1533))+(((-1.0)*x1529*x1542))+x1543+(((-1.0)*x1523*x1524))+((x1535*x1542))+(((-1.0)*x1549)));
evalcond[2]=(((x1538*x1540))+(((-1.0)*x1525*x1530))+(((0.41)*cj1))+((x1531*x1538))+((x1530*x1539))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((-0.27144)*x1544))+(((0.0160344678271334)*x1532))+(((-1.0)*x1522*x1537))+(((0.0648043305514941)*x1531))+(((0.0648043305514941)*x1540)));
evalcond[3]=((((-1.0)*x1521*x1537))+(((-1.0)*x1530*x1535))+(((0.0160344678271334)*x1541))+((x1523*x1538))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((-1.0)*py))+((x1529*x1530))+(((0.27144)*x1545))+(((0.0648043305514941)*x1523))+(((0.0648043305514941)*x1533))+((x1533*x1538)));
evalcond[4]=(((x1531*x1546))+((x1525*x1528))+((x1524*x1536))+((cj3*x1526*x1540))+((x1527*x1531))+(((-1.0)*x1528*x1539))+x1543+(((-0.433012903784321)*x1536))+((x1527*x1540))+(((-1.0)*sj3*x1525*x1526))+((x1540*x1546))+((sj3*x1526*x1539))+((cj3*x1526*x1531))+((r22*x1547))+(((-1.0)*x1549)));
evalcond[5]=((((-1.0)*x1548))+(((-1.0)*x1544))+((x1524*x1534))+((x1528*x1535))+((x1523*x1527))+((r12*x1547))+((x1533*x1546))+((cj3*x1523*x1526))+((x1527*x1533))+((sj3*x1526*x1529))+(((-0.433012903784321)*x1534))+(((-1.0)*x1528*x1529))+((cj3*x1526*x1533))+((x1523*x1546))+(((-1.0)*sj3*x1526*x1535)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1550=(cj4*cj5);
IkReal x1551=((0.866025201892125)*sj4);
IkReal x1552=(r11*sj5);
IkReal x1553=((0.500000349687582)*sj4);
IkReal x1554=(r10*sj5);
IkReal x1555=((0.433012903784321)*r12);
IkReal x1556=((0.433012903784321)*sj5);
IkReal x1557=(cj5*r11);
CheckValue<IkReal> x1558 = IKatan2WithCheck(IkReal(((((-0.250000349687704)*cj4*x1554))+(((-0.749999650312296)*x1557))+(((-0.749999650312296)*x1554))+(((-1.0)*cj4*x1555))+((x1552*x1553))+(((-0.250000349687704)*r11*x1550))+x1555+(((-1.0)*cj5*r10*x1553)))),IkReal(((((-1.0)*x1553*x1554))+(((-1.0)*x1553*x1557))+(((-1.0)*r12*x1551))+(((-1.0)*cj4*x1552))+((r10*x1550)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1558.valid){
continue;
}
CheckValue<IkReal> x1559=IKPowWithIntegerCheck(IKsign((((r22*(((-0.250000349687704)+(((-0.749999650312296)*cj4))))))+((r21*(((((0.433012903784321)*cj5))+(((-0.433012903784321)*x1550))+((sj5*x1551))))))+((r20*(((((-1.0)*cj5*x1551))+(((-1.0)*cj4*x1556))+x1556)))))),-1);
if(!x1559.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x1558.value)+(((1.5707963267949)*(x1559.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1560=IKsin(j3);
IkReal x1561=IKcos(j3);
IkReal x1562=((0.749999650312296)*r00);
IkReal x1563=(cj5*r20);
IkReal x1564=(cj4*cj5);
IkReal x1565=(cj5*r01);
IkReal x1566=(cj4*r00);
IkReal x1567=(cj4*sj5);
IkReal x1568=((0.500000349687582)*sj4);
IkReal x1569=((0.433012903784321)*r02);
IkReal x1570=((0.866025201892125)*sj4);
IkReal x1571=((0.433012903784321)*r22);
IkReal x1572=(sj5*x1560);
IkReal x1573=(r01*x1568);
IkReal x1574=((1.0)*x1560);
IkReal x1575=((0.250000349687704)*x1561);
IkReal x1576=(cj5*x1560);
IkReal x1577=(cj4*x1561);
IkReal x1578=(x1561*x1568);
IkReal x1579=((0.433012903784321)*r12*x1561);
IkReal x1580=((0.749999650312296)*sj5*x1561);
IkReal x1581=((0.749999650312296)*cj5*x1561);
evalcond[0]=((((-1.0)*x1571*x1577))+((r20*x1568*x1572))+((r21*sj5*x1578))+((r22*x1560*x1570))+((r21*x1560*x1567))+(((-1.0)*cj4*x1563*x1574))+(((-1.0)*x1563*x1578))+((x1561*x1571))+(((-1.0)*r20*x1567*x1575))+(((-1.0)*r20*x1580))+(((-1.0)*r21*x1581))+(((-1.0)*r21*x1564*x1575))+((r21*x1568*x1576)));
evalcond[1]=((((-1.0)*r11*x1581))+(((-1.0)*r10*x1567*x1575))+(((-1.0)*cj5*r10*x1578))+(((-1.0)*r11*x1564*x1575))+x1579+((r10*x1568*x1572))+((r11*sj5*x1578))+((r12*x1560*x1570))+((r11*x1560*x1567))+(((-1.0)*r10*x1564*x1574))+(((-0.433012903784321)*r12*x1577))+((r11*x1568*x1576))+(((-1.0)*r10*x1580)));
evalcond[2]=(((cj4*x1560*x1569))+((r00*x1568*x1576))+(((-1.0)*x1572*x1573))+(((0.250000349687704)*x1566*x1572))+(((-1.0)*x1560*x1569))+(((-1.0)*r00*x1561*x1564))+((r02*x1561*x1570))+(((0.749999650312296)*x1560*x1565))+(((0.250000349687704)*r01*x1560*x1564))+((r01*x1561*x1567))+((x1562*x1572))+((r00*sj5*x1578))+((x1565*x1578)));
evalcond[3]=((1.0)+((r00*x1568*x1572))+(((-1.0)*r00*x1564*x1574))+(((-1.0)*r01*x1564*x1575))+((r02*x1560*x1570))+((x1561*x1569))+(((-1.0)*x1569*x1577))+(((-0.749999650312296)*x1561*x1565))+((x1560*x1565*x1568))+((sj5*x1561*x1573))+((r01*x1560*x1567))+(((-1.0)*cj5*r00*x1578))+(((-1.0)*sj5*x1566*x1575))+(((-1.0)*sj5*x1561*x1562)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1582=((0.528192360616262)*sj4);
IkReal x1583=((0.26409636501044)*cj4);
IkReal x1584=(r20*sj5);
IkReal x1585=((0.444735007694415)*cj5);
IkReal x1586=((0.457427895740576)*cj4);
IkReal x1587=(r10*sj5);
if( IKabs(((((-1.0)*r11*x1585))+((cj5*r10*x1582))+((cj5*r11*x1583))+((r12*x1586))+((x1583*x1587))+(((-1.0)*r11*sj5*x1582))+(((0.204620884747229)*r12))+(((2.4390243902439)*py))+(((-0.444735007694415)*x1587)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x1582))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1582))+((cj5*r21*x1583))+((x1583*x1584))+((r22*x1586))+(((-1.0)*r21*x1585))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x1584)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r11*x1585))+((cj5*r10*x1582))+((cj5*r11*x1583))+((r12*x1586))+((x1583*x1587))+(((-1.0)*r11*sj5*x1582))+(((0.204620884747229)*r12))+(((2.4390243902439)*py))+(((-0.444735007694415)*x1587))))+IKsqr((((cj5*r20*x1582))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1582))+((cj5*r21*x1583))+((x1583*x1584))+((r22*x1586))+(((-1.0)*r21*x1585))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x1584))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r11*x1585))+((cj5*r10*x1582))+((cj5*r11*x1583))+((r12*x1586))+((x1583*x1587))+(((-1.0)*r11*sj5*x1582))+(((0.204620884747229)*r12))+(((2.4390243902439)*py))+(((-0.444735007694415)*x1587))), (((cj5*r20*x1582))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1582))+((cj5*r21*x1583))+((x1583*x1584))+((r22*x1586))+(((-1.0)*r21*x1585))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x1584))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1588=(cj5*sj4);
IkReal x1589=((0.135720094919197)*sj3);
IkReal x1590=(cj5*r11);
IkReal x1591=(cj5*r21);
IkReal x1592=((0.20357990508077)*sj3);
IkReal x1593=(r20*sj5);
IkReal x1594=((0.00925751294893567)*cj4);
IkReal x1595=(cj4*r10);
IkReal x1596=((0.27144)*cj3);
IkReal x1597=((0.10827950965428)*cj4);
IkReal x1598=((0.117537022603216)*sj3);
IkReal x1599=(cj4*r22);
IkReal x1600=(cj3*sj4);
IkReal x1601=(cj4*r12);
IkReal x1602=(r10*sj5);
IkReal x1603=(cj4*sj5);
IkReal x1604=((0.135720094919197)*cj3);
IkReal x1605=((0.41)*(IKcos(j1)));
IkReal x1606=((0.41)*(IKsin(j1)));
IkReal x1607=(r11*sj4*sj5);
IkReal x1608=((0.0678600949192303)*cj4*sj3);
IkReal x1609=(r21*sj4*sj5);
evalcond[0]=((((-0.18234135315471)*x1590))+((x1590*x1597))+(((-1.0)*x1606))+py+(((0.216558867852667)*r10*x1588))+(((0.10827950965428)*sj5*x1595))+(((0.187545437253636)*x1601))+(((0.0838945627463637)*r12))+(((-0.18234135315471)*x1602))+(((-0.216558867852667)*x1607)));
evalcond[1]=((((-0.18234135315471)*x1591))+(((-0.18234135315471)*x1593))+((x1593*x1597))+(((-1.0)*x1605))+((x1591*x1597))+(((0.187545437253636)*x1599))+pz+(((-0.216558867852667)*x1609))+(((0.0838945627463637)*r22))+(((0.216558867852667)*r20*x1588)));
evalcond[2]=(((r11*x1596*x1603))+(((-1.0)*x1589*x1607))+((x1590*x1592))+(((0.235073880801598)*r12*x1600))+(((-0.0160344678271334)*x1599))+(((-1.0)*x1605))+((r10*x1588*x1589))+(((-1.0)*x1593*x1594))+(((-0.0185150129489311)*r20*x1588))+((r11*x1588*x1604))+(((0.0185150129489311)*x1609))+(((-1.0)*x1591*x1594))+((x1590*x1608))+(((0.135720094919197)*x1600*x1602))+pz+(((-0.0648043305514941)*x1591))+(((-0.0648043305514941)*x1593))+((x1592*x1602))+(((-1.0)*cj5*x1595*x1596))+((x1598*x1601))+(((0.0160344678271334)*r22))+(((0.0678600949192303)*sj3*sj5*x1595))+(((-1.0)*r12*x1598)));
evalcond[3]=((((-1.0)*x1589*x1609))+((r21*x1588*x1604))+((x1590*x1594))+(((-0.0185150129489311)*x1607))+((x1591*x1608))+(((0.0648043305514941)*x1602))+(((0.235073880801598)*r22*x1600))+((x1592*x1593))+x1606+(((-0.0160344678271334)*r12))+((x1598*x1599))+(((0.0185150129489311)*r10*x1588))+((r21*x1596*x1603))+((r20*x1588*x1589))+(((-1.0)*cj4*cj5*r20*x1596))+((x1594*x1602))+(((-1.0)*py))+((x1591*x1592))+(((-1.0)*r22*x1598))+((x1593*x1608))+(((0.0160344678271334)*x1601))+(((0.135720094919197)*x1593*x1600))+(((0.0648043305514941)*x1590)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1610=((0.250000349687704)*r12);
IkReal x1611=((0.749999650312296)*cj4);
IkReal x1612=(cj1*r22);
IkReal x1613=((0.866025201892125)*sj4);
IkReal x1614=(cj1*r20);
IkReal x1615=(sj1*sj5);
IkReal x1616=((0.433012903784321)*r20);
IkReal x1617=((0.433012903784321)*sj5);
IkReal x1618=(cj1*r10);
IkReal x1619=(r22*sj1);
IkReal x1620=((0.433012903784321)*r10);
IkReal x1621=((0.433012903784321)*cj5);
IkReal x1622=(cj1*r21);
IkReal x1623=(cj1*r11);
IkReal x1624=(r11*sj1);
IkReal x1625=(cj1*cj4*x1617);
IkReal x1626=(cj5*sj1*x1613);
IkReal x1627=(cj4*r21*x1621);
if( IKabs(((((-1.0)*cj1*r12*x1611))+((r20*x1626))+(((-1.0)*r21*x1613*x1615))+((x1617*x1618))+((sj1*x1627))+(((-1.0)*cj4*x1621*x1623))+((sj5*x1613*x1623))+(((-1.0)*r21*sj1*x1621))+((cj4*x1615*x1616))+(((0.250000349687704)*x1619))+(((-1.0)*cj4*x1617*x1618))+(((-1.0)*cj5*x1613*x1618))+((x1611*x1619))+(((-1.0)*x1615*x1616))+((x1621*x1623))+(((-1.0)*cj1*x1610)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r11*x1613*x1615))+(((-1.0)*sj5*x1613*x1622))+((cj5*x1613*x1614))+((sj1*x1610))+(((0.250000349687704)*x1612))+((cj4*x1621*x1624))+((cj4*x1621*x1622))+((cj4*x1615*x1620))+(((-1.0)*x1621*x1624))+(((-1.0)*x1621*x1622))+(((-1.0)*x1614*x1617))+((r10*x1626))+((cj4*x1614*x1617))+(((-1.0)*x1615*x1620))+((x1611*x1612))+((r12*sj1*x1611)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*r12*x1611))+((r20*x1626))+(((-1.0)*r21*x1613*x1615))+((x1617*x1618))+((sj1*x1627))+(((-1.0)*cj4*x1621*x1623))+((sj5*x1613*x1623))+(((-1.0)*r21*sj1*x1621))+((cj4*x1615*x1616))+(((0.250000349687704)*x1619))+(((-1.0)*cj4*x1617*x1618))+(((-1.0)*cj5*x1613*x1618))+((x1611*x1619))+(((-1.0)*x1615*x1616))+((x1621*x1623))+(((-1.0)*cj1*x1610))))+IKsqr(((((-1.0)*r11*x1613*x1615))+(((-1.0)*sj5*x1613*x1622))+((cj5*x1613*x1614))+((sj1*x1610))+(((0.250000349687704)*x1612))+((cj4*x1621*x1624))+((cj4*x1621*x1622))+((cj4*x1615*x1620))+(((-1.0)*x1621*x1624))+(((-1.0)*x1621*x1622))+(((-1.0)*x1614*x1617))+((r10*x1626))+((cj4*x1614*x1617))+(((-1.0)*x1615*x1620))+((x1611*x1612))+((r12*sj1*x1611))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj1*r12*x1611))+((r20*x1626))+(((-1.0)*r21*x1613*x1615))+((x1617*x1618))+((sj1*x1627))+(((-1.0)*cj4*x1621*x1623))+((sj5*x1613*x1623))+(((-1.0)*r21*sj1*x1621))+((cj4*x1615*x1616))+(((0.250000349687704)*x1619))+(((-1.0)*cj4*x1617*x1618))+(((-1.0)*cj5*x1613*x1618))+((x1611*x1619))+(((-1.0)*x1615*x1616))+((x1621*x1623))+(((-1.0)*cj1*x1610))), ((((-1.0)*r11*x1613*x1615))+(((-1.0)*sj5*x1613*x1622))+((cj5*x1613*x1614))+((sj1*x1610))+(((0.250000349687704)*x1612))+((cj4*x1621*x1624))+((cj4*x1621*x1622))+((cj4*x1615*x1620))+(((-1.0)*x1621*x1624))+(((-1.0)*x1621*x1622))+(((-1.0)*x1614*x1617))+((r10*x1626))+((cj4*x1614*x1617))+(((-1.0)*x1615*x1620))+((x1611*x1612))+((r12*sj1*x1611))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1628=IKcos(j2);
IkReal x1629=IKsin(j2);
IkReal x1630=(cj5*r11);
IkReal x1631=((0.433012903784321)*cj4);
IkReal x1632=(r21*sj5);
IkReal x1633=((0.500000349687582)*sj4);
IkReal x1634=((0.749999650312296)*sj3);
IkReal x1635=(cj3*cj4);
IkReal x1636=(cj5*r10);
IkReal x1637=((0.0185150129489311)*sj4);
IkReal x1638=(r20*sj5);
IkReal x1639=(cj4*r22);
IkReal x1640=(r10*sj5);
IkReal x1641=(r12*sj3);
IkReal x1642=(r11*sj5);
IkReal x1643=(r22*sj3);
IkReal x1644=((0.27144)*sj1);
IkReal x1645=((0.00925751294893567)*cj4);
IkReal x1646=(cj5*r20);
IkReal x1647=(cj5*r21);
IkReal x1648=(cj4*r12);
IkReal x1649=((0.866025201892125)*sj4);
IkReal x1650=(sj1*x1628);
IkReal x1651=(cj1*x1628);
IkReal x1652=(cj1*x1629);
IkReal x1653=((0.250000349687704)*cj4*sj3);
IkReal x1654=(cj3*x1649);
IkReal x1655=(sj1*x1629);
IkReal x1656=((1.0)*x1652);
evalcond[0]=((((-1.0)*x1646*x1649))+(((-0.250000349687704)*r22))+(((-0.749999650312296)*x1639))+x1651+x1655+(((0.433012903784321)*x1647))+(((0.433012903784321)*x1638))+(((-1.0)*x1631*x1647))+((x1632*x1649))+(((-1.0)*x1631*x1638)));
evalcond[1]=((((-0.250000349687704)*r12))+(((-0.749999650312296)*x1648))+x1650+(((0.433012903784321)*x1640))+(((0.433012903784321)*x1630))+(((-1.0)*x1656))+((x1642*x1649))+(((-1.0)*x1631*x1640))+(((-1.0)*x1630*x1631))+(((-1.0)*x1636*x1649)));
evalcond[2]=((((0.0160344678271334)*x1639))+((x1637*x1646))+(((0.41)*cj1))+((x1645*x1647))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((-1.0)*x1629*x1644))+(((-0.27144)*x1651))+(((-1.0)*x1632*x1637))+(((0.0648043305514941)*x1647))+((x1638*x1645))+(((0.0648043305514941)*x1638)));
evalcond[3]=(((x1640*x1645))+((x1636*x1637))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((-1.0)*py))+(((0.27144)*x1652))+(((-1.0)*x1637*x1642))+(((-1.0)*x1628*x1644))+(((0.0648043305514941)*x1640))+((x1630*x1645))+(((0.0160344678271334)*x1648))+(((0.0648043305514941)*x1630)));
evalcond[4]=(((sj3*x1633*x1646))+((r22*x1654))+((x1638*x1653))+(((-1.0)*sj3*x1632*x1633))+x1650+((cj3*x1633*x1638))+(((-1.0)*x1635*x1646))+((cj3*x1633*x1647))+((x1647*x1653))+(((-0.433012903784321)*x1643))+(((-1.0)*x1656))+((x1632*x1635))+((x1634*x1638))+((x1634*x1647))+((x1631*x1643)));
evalcond[5]=(((sj3*x1633*x1636))+((x1640*x1653))+((r12*x1654))+((cj3*x1633*x1640))+(((-1.0)*x1655))+(((-1.0)*x1651))+(((-1.0)*x1635*x1636))+(((-0.433012903784321)*x1641))+(((-1.0)*sj3*x1633*x1642))+((x1630*x1653))+((x1635*x1642))+((x1630*x1634))+((x1634*x1640))+((cj3*x1630*x1633))+((x1631*x1641)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1657=((0.433012903784321)*cj5);
IkReal x1658=((0.866025201892125)*sj4);
IkReal x1659=((0.433012903784321)*r22);
IkReal x1660=(cj4*sj5);
IkReal x1661=(cj5*r21);
IkReal x1662=(r20*sj5);
IkReal x1663=((0.500000349687582)*sj4);
IkReal x1664=(cj5*x1663);
CheckValue<IkReal> x1665=IKPowWithIntegerCheck(IKsign((((r12*(((0.250000349687704)+(((0.749999650312296)*cj4))))))+((r10*((((cj5*x1658))+(((-0.433012903784321)*sj5))+(((0.433012903784321)*x1660))))))+((r11*(((((-1.0)*sj5*x1658))+((cj4*x1657))+(((-1.0)*x1657)))))))),-1);
if(!x1665.valid){
continue;
}
CheckValue<IkReal> x1666 = IKatan2WithCheck(IkReal(((((-1.0)*cj4*x1659))+(((-0.250000349687704)*r20*x1660))+(((-0.250000349687704)*cj4*x1661))+x1659+(((-0.749999650312296)*x1662))+(((-0.749999650312296)*x1661))+(((-1.0)*r20*x1664))+((r21*sj5*x1663)))),IkReal(((((-1.0)*r21*x1660))+(((-1.0)*x1662*x1663))+(((-1.0)*x1661*x1663))+(((-1.0)*r22*x1658))+((cj4*cj5*r20)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1666.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x1665.value)))+(x1666.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1667=IKsin(j3);
IkReal x1668=IKcos(j3);
IkReal x1669=((0.749999650312296)*r00);
IkReal x1670=(cj5*r20);
IkReal x1671=(cj4*cj5);
IkReal x1672=(cj5*r01);
IkReal x1673=(cj4*r00);
IkReal x1674=(cj4*sj5);
IkReal x1675=((0.500000349687582)*sj4);
IkReal x1676=((0.433012903784321)*r02);
IkReal x1677=((0.866025201892125)*sj4);
IkReal x1678=((0.433012903784321)*r22);
IkReal x1679=(sj5*x1667);
IkReal x1680=(r01*x1675);
IkReal x1681=((1.0)*x1667);
IkReal x1682=((0.250000349687704)*x1668);
IkReal x1683=(cj5*x1667);
IkReal x1684=(cj4*x1668);
IkReal x1685=(x1668*x1675);
IkReal x1686=((0.433012903784321)*r12*x1668);
IkReal x1687=((0.749999650312296)*sj5*x1668);
IkReal x1688=((0.749999650312296)*cj5*x1668);
evalcond[0]=(((r22*x1667*x1677))+(((-1.0)*x1670*x1685))+(((-1.0)*r20*x1687))+(((-1.0)*r21*x1688))+(((-1.0)*x1678*x1684))+((x1668*x1678))+(((-1.0)*r20*x1674*x1682))+(((-1.0)*cj4*x1670*x1681))+((r20*x1675*x1679))+((r21*x1667*x1674))+(((-1.0)*r21*x1671*x1682))+((r21*sj5*x1685))+((r21*x1675*x1683)));
evalcond[1]=(((r11*x1675*x1683))+(((-1.0)*r11*x1688))+(((-1.0)*r10*x1674*x1682))+((r11*sj5*x1685))+(((-1.0)*r10*x1687))+((r10*x1675*x1679))+x1686+(((-1.0)*r11*x1671*x1682))+((r11*x1667*x1674))+(((-1.0)*r10*x1671*x1681))+(((-0.433012903784321)*r12*x1684))+(((-1.0)*cj5*r10*x1685))+((r12*x1667*x1677)));
evalcond[2]=(((r00*sj5*x1685))+((x1672*x1685))+(((-1.0)*x1667*x1676))+((cj4*x1667*x1676))+(((0.250000349687704)*r01*x1667*x1671))+((r01*x1668*x1674))+((x1669*x1679))+(((-1.0)*x1679*x1680))+(((0.250000349687704)*x1673*x1679))+(((-1.0)*r00*x1668*x1671))+(((0.749999650312296)*x1667*x1672))+((r02*x1668*x1677))+((r00*x1675*x1683)));
evalcond[3]=((1.0)+((x1667*x1672*x1675))+(((-1.0)*sj5*x1673*x1682))+(((-0.749999650312296)*x1668*x1672))+((r02*x1667*x1677))+(((-1.0)*cj5*r00*x1685))+(((-1.0)*x1676*x1684))+((x1668*x1676))+((r01*x1667*x1674))+(((-1.0)*r00*x1671*x1681))+(((-1.0)*sj5*x1668*x1669))+((r00*x1675*x1679))+((sj5*x1668*x1680))+(((-1.0)*r01*x1671*x1682)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1689=((0.528192360616262)*sj4);
IkReal x1690=((0.26409636501044)*cj4);
IkReal x1691=(r20*sj5);
IkReal x1692=((0.444735007694415)*cj5);
IkReal x1693=((0.457427895740576)*cj4);
IkReal x1694=(r10*sj5);
if( IKabs((((r12*x1693))+((x1690*x1694))+((cj5*r10*x1689))+(((-1.0)*r11*sj5*x1689))+(((-0.444735007694415)*x1694))+(((-1.0)*r11*x1692))+(((0.204620884747229)*r12))+((cj5*r11*x1690))+(((2.4390243902439)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x1690*x1691))+(((-1.0)*r21*x1692))+(((0.204620884747229)*r22))+(((-0.444735007694415)*x1691))+((r22*x1693))+((cj5*r21*x1690))+((cj5*r20*x1689))+(((-1.0)*r21*sj5*x1689))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r12*x1693))+((x1690*x1694))+((cj5*r10*x1689))+(((-1.0)*r11*sj5*x1689))+(((-0.444735007694415)*x1694))+(((-1.0)*r11*x1692))+(((0.204620884747229)*r12))+((cj5*r11*x1690))+(((2.4390243902439)*py))))+IKsqr((((x1690*x1691))+(((-1.0)*r21*x1692))+(((0.204620884747229)*r22))+(((-0.444735007694415)*x1691))+((r22*x1693))+((cj5*r21*x1690))+((cj5*r20*x1689))+(((-1.0)*r21*sj5*x1689))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r12*x1693))+((x1690*x1694))+((cj5*r10*x1689))+(((-1.0)*r11*sj5*x1689))+(((-0.444735007694415)*x1694))+(((-1.0)*r11*x1692))+(((0.204620884747229)*r12))+((cj5*r11*x1690))+(((2.4390243902439)*py))), (((x1690*x1691))+(((-1.0)*r21*x1692))+(((0.204620884747229)*r22))+(((-0.444735007694415)*x1691))+((r22*x1693))+((cj5*r21*x1690))+((cj5*r20*x1689))+(((-1.0)*r21*sj5*x1689))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1695=(cj5*sj4);
IkReal x1696=((0.135720094919197)*sj3);
IkReal x1697=(cj5*r11);
IkReal x1698=(cj5*r21);
IkReal x1699=((0.20357990508077)*sj3);
IkReal x1700=(r20*sj5);
IkReal x1701=((0.00925751294893567)*cj4);
IkReal x1702=(cj4*r10);
IkReal x1703=((0.27144)*cj3);
IkReal x1704=((0.10827950965428)*cj4);
IkReal x1705=((0.117537022603216)*sj3);
IkReal x1706=(cj4*r22);
IkReal x1707=(cj3*sj4);
IkReal x1708=(cj4*r12);
IkReal x1709=(r10*sj5);
IkReal x1710=(cj4*sj5);
IkReal x1711=((0.135720094919197)*cj3);
IkReal x1712=((0.41)*(IKcos(j1)));
IkReal x1713=((0.41)*(IKsin(j1)));
IkReal x1714=(r11*sj4*sj5);
IkReal x1715=((0.0678600949192303)*cj4*sj3);
IkReal x1716=(r21*sj4*sj5);
evalcond[0]=((((-0.216558867852667)*x1714))+((x1697*x1704))+(((-1.0)*x1713))+(((-0.18234135315471)*x1697))+(((0.216558867852667)*r10*x1695))+(((0.10827950965428)*sj5*x1702))+py+(((0.187545437253636)*x1708))+(((0.0838945627463637)*r12))+(((-0.18234135315471)*x1709)));
evalcond[1]=((((-0.216558867852667)*x1716))+(((-1.0)*x1712))+(((-0.18234135315471)*x1698))+((x1700*x1704))+(((0.216558867852667)*r20*x1695))+pz+(((0.187545437253636)*x1706))+(((0.0838945627463637)*r22))+(((-0.18234135315471)*x1700))+((x1698*x1704)));
evalcond[2]=((((-0.0648043305514941)*x1700))+(((-1.0)*x1698*x1701))+(((-0.0160344678271334)*x1706))+(((0.0185150129489311)*x1716))+(((-0.0185150129489311)*r20*x1695))+(((0.235073880801598)*r12*x1707))+(((-1.0)*cj5*x1702*x1703))+(((0.0678600949192303)*sj3*sj5*x1702))+((x1697*x1715))+(((-1.0)*x1712))+((r10*x1695*x1696))+((x1705*x1708))+(((0.135720094919197)*x1707*x1709))+pz+(((-0.0648043305514941)*x1698))+(((0.0160344678271334)*r22))+(((-1.0)*x1700*x1701))+((x1697*x1699))+(((-1.0)*x1696*x1714))+((r11*x1695*x1711))+((x1699*x1709))+((r11*x1703*x1710))+(((-1.0)*r12*x1705)));
evalcond[3]=(((x1697*x1701))+((x1698*x1715))+x1713+(((-0.0160344678271334)*r12))+((r21*x1695*x1711))+((x1700*x1715))+(((0.235073880801598)*r22*x1707))+((x1705*x1706))+(((-1.0)*py))+(((0.0648043305514941)*x1709))+((x1701*x1709))+(((-0.0185150129489311)*x1714))+(((-1.0)*cj4*cj5*r20*x1703))+(((0.0648043305514941)*x1697))+(((0.0185150129489311)*r10*x1695))+(((-1.0)*r22*x1705))+(((0.135720094919197)*x1700*x1707))+((r20*x1695*x1696))+(((0.0160344678271334)*x1708))+(((-1.0)*x1696*x1716))+((r21*x1703*x1710))+((x1698*x1699))+((x1699*x1700)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1717=((0.250000349687704)*r12);
IkReal x1718=((0.749999650312296)*cj4);
IkReal x1719=(cj1*r22);
IkReal x1720=((0.866025201892125)*sj4);
IkReal x1721=(cj1*r20);
IkReal x1722=(sj1*sj5);
IkReal x1723=((0.433012903784321)*r20);
IkReal x1724=((0.433012903784321)*sj5);
IkReal x1725=(cj1*r10);
IkReal x1726=(r22*sj1);
IkReal x1727=((0.433012903784321)*r10);
IkReal x1728=((0.433012903784321)*cj5);
IkReal x1729=(cj1*r21);
IkReal x1730=(cj1*r11);
IkReal x1731=(r11*sj1);
IkReal x1732=(cj1*cj4*x1724);
IkReal x1733=(cj5*sj1*x1720);
IkReal x1734=(cj4*r21*x1728);
if( IKabs((((x1728*x1730))+(((-1.0)*r21*x1720*x1722))+((x1724*x1725))+(((-1.0)*x1722*x1723))+(((-1.0)*cj1*x1717))+((x1718*x1726))+((sj1*x1734))+((cj4*x1722*x1723))+(((-1.0)*cj5*x1720*x1725))+(((-1.0)*cj4*x1724*x1725))+(((0.250000349687704)*x1726))+(((-1.0)*r21*sj1*x1728))+(((-1.0)*cj4*x1728*x1730))+(((-1.0)*cj1*r12*x1718))+((r20*x1733))+((sj5*x1720*x1730)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r11*x1720*x1722))+(((-1.0)*x1728*x1731))+(((-1.0)*x1728*x1729))+(((0.250000349687704)*x1719))+(((-1.0)*sj5*x1720*x1729))+(((-1.0)*x1722*x1727))+((r10*x1733))+((cj4*x1722*x1727))+((cj4*x1728*x1729))+((cj4*x1728*x1731))+((cj4*x1721*x1724))+((cj5*x1720*x1721))+((x1718*x1719))+(((-1.0)*x1721*x1724))+((sj1*x1717))+((r12*sj1*x1718)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x1728*x1730))+(((-1.0)*r21*x1720*x1722))+((x1724*x1725))+(((-1.0)*x1722*x1723))+(((-1.0)*cj1*x1717))+((x1718*x1726))+((sj1*x1734))+((cj4*x1722*x1723))+(((-1.0)*cj5*x1720*x1725))+(((-1.0)*cj4*x1724*x1725))+(((0.250000349687704)*x1726))+(((-1.0)*r21*sj1*x1728))+(((-1.0)*cj4*x1728*x1730))+(((-1.0)*cj1*r12*x1718))+((r20*x1733))+((sj5*x1720*x1730))))+IKsqr(((((-1.0)*r11*x1720*x1722))+(((-1.0)*x1728*x1731))+(((-1.0)*x1728*x1729))+(((0.250000349687704)*x1719))+(((-1.0)*sj5*x1720*x1729))+(((-1.0)*x1722*x1727))+((r10*x1733))+((cj4*x1722*x1727))+((cj4*x1728*x1729))+((cj4*x1728*x1731))+((cj4*x1721*x1724))+((cj5*x1720*x1721))+((x1718*x1719))+(((-1.0)*x1721*x1724))+((sj1*x1717))+((r12*sj1*x1718))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x1728*x1730))+(((-1.0)*r21*x1720*x1722))+((x1724*x1725))+(((-1.0)*x1722*x1723))+(((-1.0)*cj1*x1717))+((x1718*x1726))+((sj1*x1734))+((cj4*x1722*x1723))+(((-1.0)*cj5*x1720*x1725))+(((-1.0)*cj4*x1724*x1725))+(((0.250000349687704)*x1726))+(((-1.0)*r21*sj1*x1728))+(((-1.0)*cj4*x1728*x1730))+(((-1.0)*cj1*r12*x1718))+((r20*x1733))+((sj5*x1720*x1730))), ((((-1.0)*r11*x1720*x1722))+(((-1.0)*x1728*x1731))+(((-1.0)*x1728*x1729))+(((0.250000349687704)*x1719))+(((-1.0)*sj5*x1720*x1729))+(((-1.0)*x1722*x1727))+((r10*x1733))+((cj4*x1722*x1727))+((cj4*x1728*x1729))+((cj4*x1728*x1731))+((cj4*x1721*x1724))+((cj5*x1720*x1721))+((x1718*x1719))+(((-1.0)*x1721*x1724))+((sj1*x1717))+((r12*sj1*x1718))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1735=IKcos(j2);
IkReal x1736=IKsin(j2);
IkReal x1737=(cj5*r11);
IkReal x1738=((0.433012903784321)*cj4);
IkReal x1739=(r21*sj5);
IkReal x1740=((0.500000349687582)*sj4);
IkReal x1741=((0.749999650312296)*sj3);
IkReal x1742=(cj3*cj4);
IkReal x1743=(cj5*r10);
IkReal x1744=((0.0185150129489311)*sj4);
IkReal x1745=(r20*sj5);
IkReal x1746=(cj4*r22);
IkReal x1747=(r10*sj5);
IkReal x1748=(r12*sj3);
IkReal x1749=(r11*sj5);
IkReal x1750=(r22*sj3);
IkReal x1751=((0.27144)*sj1);
IkReal x1752=((0.00925751294893567)*cj4);
IkReal x1753=(cj5*r20);
IkReal x1754=(cj5*r21);
IkReal x1755=(cj4*r12);
IkReal x1756=((0.866025201892125)*sj4);
IkReal x1757=(sj1*x1735);
IkReal x1758=(cj1*x1735);
IkReal x1759=(cj1*x1736);
IkReal x1760=((0.250000349687704)*cj4*sj3);
IkReal x1761=(cj3*x1756);
IkReal x1762=(sj1*x1736);
IkReal x1763=((1.0)*x1759);
evalcond[0]=((((-0.250000349687704)*r22))+(((0.433012903784321)*x1745))+x1762+x1758+(((-1.0)*x1738*x1745))+(((0.433012903784321)*x1754))+(((-1.0)*x1738*x1754))+(((-0.749999650312296)*x1746))+(((-1.0)*x1753*x1756))+((x1739*x1756)));
evalcond[1]=((((0.433012903784321)*x1737))+(((-0.250000349687704)*r12))+(((0.433012903784321)*x1747))+((x1749*x1756))+(((-1.0)*x1763))+x1757+(((-1.0)*x1738*x1747))+(((-0.749999650312296)*x1755))+(((-1.0)*x1737*x1738))+(((-1.0)*x1743*x1756)));
evalcond[2]=(((x1752*x1754))+(((0.0648043305514941)*x1745))+(((0.0648043305514941)*x1754))+((x1744*x1753))+(((-0.27144)*x1758))+((x1745*x1752))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*x1736*x1751))+(((-1.0)*x1739*x1744))+(((-1.0)*pz))+(((0.0160344678271334)*x1746)));
evalcond[3]=((((-1.0)*x1735*x1751))+((x1737*x1752))+(((0.0648043305514941)*x1747))+(((0.27144)*x1759))+((x1747*x1752))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((-1.0)*py))+(((-1.0)*x1744*x1749))+((x1743*x1744))+(((0.0648043305514941)*x1737))+(((0.0160344678271334)*x1755)));
evalcond[4]=(((x1739*x1742))+(((-0.433012903784321)*x1750))+((sj3*x1740*x1753))+(((-1.0)*x1763))+x1757+((cj3*x1740*x1745))+((cj3*x1740*x1754))+(((-1.0)*sj3*x1739*x1740))+((x1754*x1760))+((r22*x1761))+((x1745*x1760))+(((-1.0)*x1742*x1753))+((x1741*x1754))+((x1741*x1745))+((x1738*x1750)));
evalcond[5]=((((-1.0)*x1762))+(((-0.433012903784321)*x1748))+((cj3*x1740*x1747))+((r12*x1761))+((x1737*x1760))+((x1742*x1749))+(((-1.0)*x1758))+(((-1.0)*x1742*x1743))+((x1747*x1760))+(((-1.0)*sj3*x1740*x1749))+((cj3*x1737*x1740))+((x1738*x1748))+((x1741*x1747))+((x1737*x1741))+((sj3*x1740*x1743)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}
}
}

}

}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j1, j2, j3]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1764=((0.433012903784321)*cj5);
IkReal x1765=(cj0*cj4);
IkReal x1766=((0.433012903784321)*r02);
IkReal x1767=(cj5*r00);
IkReal x1768=((0.500000349687582)*sj4);
IkReal x1769=((0.433012903784321)*cj4);
IkReal x1770=(r12*sj0);
IkReal x1771=((0.866025201892125)*sj4);
IkReal x1772=(r01*sj5);
IkReal x1773=(sj0*sj5);
IkReal x1774=(r00*sj5);
IkReal x1775=((0.250000349687704)*cj4);
IkReal x1776=(cj5*r11*sj0);
IkReal x1777=(cj0*cj5*r01);
IkReal x1778=(cj5*r10*sj0);
CheckValue<IkReal> x1779 = IKatan2WithCheck(IkReal(((((-0.749999650312296)*r10*x1773))+(((-0.250000349687704)*x1765*x1774))+(((-1.0)*cj0*x1767*x1768))+((cj0*x1768*x1772))+((cj0*x1766))+(((-1.0)*r10*x1773*x1775))+(((-0.250000349687704)*cj5*r01*x1765))+(((-1.0)*x1765*x1766))+(((0.433012903784321)*x1770))+(((-0.749999650312296)*cj0*x1774))+(((-1.0)*x1775*x1776))+(((-0.749999650312296)*x1776))+(((-0.749999650312296)*x1777))+(((-1.0)*x1768*x1778))+(((-1.0)*x1769*x1770))+((r11*x1768*x1773)))),IkReal(((((-1.0)*cj0*x1768*x1774))+(((-1.0)*x1765*x1772))+(((-1.0)*r10*x1768*x1773))+((x1765*x1767))+((cj4*x1778))+(((-1.0)*cj4*r11*x1773))+(((-1.0)*cj0*r02*x1771))+(((-1.0)*x1770*x1771))+(((-1.0)*x1768*x1777))+(((-1.0)*x1768*x1776)))),IKFAST_ATAN2_MAGTHRESH);
if(!x1779.valid){
continue;
}
CheckValue<IkReal> x1780=IKPowWithIntegerCheck(IKsign((((r21*(((((-1.0)*x1764))+(((-1.0)*sj5*x1771))+((cj4*x1764))))))+((r22*(((0.250000349687704)+(((0.749999650312296)*cj4))))))+((r20*((((sj5*x1769))+((cj5*x1771))+(((-0.433012903784321)*sj5)))))))),-1);
if(!x1780.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x1779.value)+(((1.5707963267949)*(x1780.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x1781=IKsin(j3);
IkReal x1782=IKcos(j3);
IkReal x1783=(r11*sj5);
IkReal x1784=(cj5*r20);
IkReal x1785=(cj4*cj5);
IkReal x1786=(r00*sj5);
IkReal x1787=(cj5*r01);
IkReal x1788=(r10*sj5);
IkReal x1789=(r21*sj5);
IkReal x1790=(r20*sj5);
IkReal x1791=(cj5*r21);
IkReal x1792=(cj5*r11);
IkReal x1793=(r01*sj5);
IkReal x1794=((1.0)*x1781);
IkReal x1795=((0.250000349687704)*x1782);
IkReal x1796=((0.749999650312296)*x1782);
IkReal x1797=(cj4*x1781);
IkReal x1798=((0.500000349687582)*sj4*x1782);
IkReal x1799=((0.433012903784321)*r12*x1782);
IkReal x1800=((0.500000349687582)*sj4*x1781);
IkReal x1801=((0.433012903784321)*r02*x1782);
IkReal x1802=((0.866025201892125)*sj4*x1781);
IkReal x1803=((0.433012903784321)*r22*x1782);
evalcond[0]=((((-1.0)*r21*x1785*x1795))+(((-1.0)*x1790*x1796))+((r22*x1802))+((x1789*x1797))+((x1789*x1798))+(((-1.0)*x1784*x1798))+x1803+(((-1.0)*cj4*x1803))+(((-1.0)*cj4*x1784*x1794))+(((-1.0)*cj4*x1790*x1795))+((x1791*x1800))+((x1790*x1800))+(((-1.0)*x1791*x1796)));
evalcond[1]=(((x1783*x1797))+((x1783*x1798))+(((-1.0)*x1792*x1796))+(((-1.0)*cj4*x1799))+cj0+x1799+(((-1.0)*cj4*x1788*x1795))+((x1788*x1800))+((x1792*x1800))+(((-1.0)*r10*x1785*x1794))+((r12*x1802))+(((-1.0)*cj5*r10*x1798))+(((-1.0)*x1788*x1796))+(((-1.0)*r11*x1785*x1795)));
evalcond[2]=((((-1.0)*x1787*x1796))+((x1793*x1798))+((x1793*x1797))+(((-1.0)*sj0))+((x1786*x1800))+(((-1.0)*r00*x1785*x1794))+(((-1.0)*r01*x1785*x1795))+(((-1.0)*cj5*r00*x1798))+((r02*x1802))+x1801+(((-1.0)*x1786*x1796))+(((-1.0)*cj4*x1801))+((x1787*x1800))+(((-1.0)*cj4*x1786*x1795)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1eval[1];
j1eval[0]=sj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal j1eval[1];
j1eval[0]=cj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1804=((0.528192360616262)*sj4);
IkReal x1805=(r20*sj5);
IkReal x1806=((0.26409636501044)*cj4);
IkReal x1807=((0.444735007694415)*cj5);
IkReal x1808=((0.457427895740576)*cj4);
IkReal x1809=(r10*sj5);
if( IKabs(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*cj5*r10*x1804))+((r11*sj5*x1804))+(((-1.0)*cj5*r11*x1806))+((r11*x1807))+(((-1.0)*x1806*x1809))+(((0.444735007694415)*x1809))+(((-1.0)*r12*x1808)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*x1807))+(((0.204620884747229)*r22))+((r22*x1808))+((cj5*r20*x1804))+((cj5*r21*x1806))+(((-1.0)*r21*sj5*x1804))+((x1805*x1806))+(((-0.444735007694415)*x1805))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*cj5*r10*x1804))+((r11*sj5*x1804))+(((-1.0)*cj5*r11*x1806))+((r11*x1807))+(((-1.0)*x1806*x1809))+(((0.444735007694415)*x1809))+(((-1.0)*r12*x1808))))+IKsqr(((((-1.0)*r21*x1807))+(((0.204620884747229)*r22))+((r22*x1808))+((cj5*r20*x1804))+((cj5*r21*x1806))+(((-1.0)*r21*sj5*x1804))+((x1805*x1806))+(((-0.444735007694415)*x1805))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*cj5*r10*x1804))+((r11*sj5*x1804))+(((-1.0)*cj5*r11*x1806))+((r11*x1807))+(((-1.0)*x1806*x1809))+(((0.444735007694415)*x1809))+(((-1.0)*r12*x1808))), ((((-1.0)*r21*x1807))+(((0.204620884747229)*r22))+((r22*x1808))+((cj5*r20*x1804))+((cj5*r21*x1806))+(((-1.0)*r21*sj5*x1804))+((x1805*x1806))+(((-0.444735007694415)*x1805))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1810=((1.0)*py);
IkReal x1811=(cj5*r11);
IkReal x1812=(cj5*sj3);
IkReal x1813=(r20*sj5);
IkReal x1814=((0.135720094919197)*sj4);
IkReal x1815=(r21*sj5);
IkReal x1816=((0.0185150129489311)*sj4);
IkReal x1817=((0.135720094919197)*sj3);
IkReal x1818=((0.00925751294893567)*cj4);
IkReal x1819=(cj4*cj5);
IkReal x1820=(cj3*r10);
IkReal x1821=((0.0678600949192303)*cj4);
IkReal x1822=(r10*sj5);
IkReal x1823=((0.10827950965428)*cj4);
IkReal x1824=(cj4*r22);
IkReal x1825=((0.0160344678271334)*r12);
IkReal x1826=((0.20357990508077)*sj3);
IkReal x1827=(cj5*r20);
IkReal x1828=((0.216558867852667)*sj4);
IkReal x1829=((0.117537022603216)*sj3);
IkReal x1830=((0.27144)*cj3);
IkReal x1831=(cj5*r21);
IkReal x1832=(cj4*r12);
IkReal x1833=((0.41)*(IKsin(j1)));
IkReal x1834=((0.41)*(IKcos(j1)));
IkReal x1835=(cj5*r10*sj4);
IkReal x1836=(r11*sj4*sj5);
IkReal x1837=((0.235073880801598)*cj3*sj4);
IkReal x1838=(x1810+x1833);
evalcond[0]=((((-0.18234135315471)*x1813))+(((-0.18234135315471)*x1831))+(((-1.0)*x1834))+((x1827*x1828))+pz+(((0.10827950965428)*r21*x1819))+(((0.187545437253636)*x1824))+(((-1.0)*x1815*x1828))+(((0.0838945627463637)*r22))+((x1813*x1823)));
evalcond[1]=((((-1.0)*x1811*x1823))+(((0.18234135315471)*x1811))+(((0.18234135315471)*x1822))+(((-1.0)*x1838))+((r11*sj5*x1828))+(((-0.0838945627463637)*r12))+(((-0.187545437253636)*x1832))+(((-1.0)*x1822*x1823))+(((-1.0)*cj5*r10*x1828)));
evalcond[2]=((((-1.0)*x1825))+((cj4*x1825))+(((-1.0)*cj3*x1813*x1814))+(((-1.0)*sj3*x1813*x1821))+(((-1.0)*r20*x1812*x1814))+(((-1.0)*x1813*x1826))+((x1818*x1822))+(((-1.0)*r21*x1812*x1821))+(((-1.0)*x1838))+(((0.0648043305514941)*x1822))+((r22*x1829))+(((-1.0)*cj3*x1814*x1831))+(((0.0648043305514941)*x1811))+((cj5*r10*x1816))+(((-1.0)*r11*sj5*x1816))+((r20*x1819*x1830))+((sj3*x1814*x1815))+(((-1.0)*cj4*x1815*x1830))+(((-1.0)*x1824*x1829))+(((-1.0)*r22*x1837))+((x1811*x1818))+(((-0.20357990508077)*r21*x1812)));
evalcond[3]=((((0.0648043305514941)*x1831))+((cj4*r11*sj5*x1830))+((x1829*x1832))+(((-1.0)*r11*sj3*sj5*x1814))+((x1813*x1818))+((sj3*x1821*x1822))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x1813))+((sj5*x1814*x1820))+((x1811*x1826))+(((0.0160344678271334)*x1824))+((x1822*x1826))+(((-1.0)*pz))+((cj3*x1811*x1814))+((r10*x1812*x1814))+(((-1.0)*r12*x1829))+x1834+(((-1.0)*x1815*x1816))+(((-0.27144)*x1819*x1820))+((r12*x1837))+((x1818*x1831))+((x1816*x1827))+((sj3*x1811*x1821)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1839=((0.250000349687704)*r12);
IkReal x1840=((0.749999650312296)*cj4);
IkReal x1841=((0.433012903784321)*sj5);
IkReal x1842=(cj1*r10);
IkReal x1843=(cj1*r22);
IkReal x1844=(cj1*r20);
IkReal x1845=((0.866025201892125)*sj4);
IkReal x1846=(r20*sj1);
IkReal x1847=(r22*sj1);
IkReal x1848=(r10*sj1);
IkReal x1849=(r11*sj1);
IkReal x1850=((0.433012903784321)*cj5);
IkReal x1851=(r21*sj1);
IkReal x1852=(cj1*r21);
IkReal x1853=(cj1*r11);
IkReal x1854=(cj5*sj1*x1845);
IkReal x1855=(cj4*r21*x1850);
if( IKabs(((((-1.0)*sj5*x1845*x1851))+(((-1.0)*sj5*x1845*x1853))+((cj1*r12*x1840))+(((-1.0)*x1841*x1842))+(((-1.0)*x1841*x1846))+((cj4*x1850*x1851))+((cj4*x1850*x1853))+((x1840*x1847))+(((-1.0)*x1850*x1851))+(((-1.0)*x1850*x1853))+((cj5*x1845*x1846))+((cj4*x1841*x1846))+((cj4*x1841*x1842))+(((0.250000349687704)*x1847))+((cj5*x1842*x1845))+((cj1*x1839)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj5*x1845*x1852))+(((-1.0)*cj4*x1841*x1848))+(((-1.0)*r12*sj1*x1840))+(((-1.0)*x1841*x1844))+((cj4*x1850*x1852))+(((-1.0)*cj4*x1849*x1850))+((x1849*x1850))+((x1840*x1843))+((sj5*x1845*x1849))+(((-1.0)*x1850*x1852))+(((-1.0)*cj5*x1845*x1848))+(((-1.0)*sj1*x1839))+((cj4*x1841*x1844))+((cj5*x1844*x1845))+((x1841*x1848))+(((0.250000349687704)*x1843)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj5*x1845*x1851))+(((-1.0)*sj5*x1845*x1853))+((cj1*r12*x1840))+(((-1.0)*x1841*x1842))+(((-1.0)*x1841*x1846))+((cj4*x1850*x1851))+((cj4*x1850*x1853))+((x1840*x1847))+(((-1.0)*x1850*x1851))+(((-1.0)*x1850*x1853))+((cj5*x1845*x1846))+((cj4*x1841*x1846))+((cj4*x1841*x1842))+(((0.250000349687704)*x1847))+((cj5*x1842*x1845))+((cj1*x1839))))+IKsqr(((((-1.0)*sj5*x1845*x1852))+(((-1.0)*cj4*x1841*x1848))+(((-1.0)*r12*sj1*x1840))+(((-1.0)*x1841*x1844))+((cj4*x1850*x1852))+(((-1.0)*cj4*x1849*x1850))+((x1849*x1850))+((x1840*x1843))+((sj5*x1845*x1849))+(((-1.0)*x1850*x1852))+(((-1.0)*cj5*x1845*x1848))+(((-1.0)*sj1*x1839))+((cj4*x1841*x1844))+((cj5*x1844*x1845))+((x1841*x1848))+(((0.250000349687704)*x1843))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*sj5*x1845*x1851))+(((-1.0)*sj5*x1845*x1853))+((cj1*r12*x1840))+(((-1.0)*x1841*x1842))+(((-1.0)*x1841*x1846))+((cj4*x1850*x1851))+((cj4*x1850*x1853))+((x1840*x1847))+(((-1.0)*x1850*x1851))+(((-1.0)*x1850*x1853))+((cj5*x1845*x1846))+((cj4*x1841*x1846))+((cj4*x1841*x1842))+(((0.250000349687704)*x1847))+((cj5*x1842*x1845))+((cj1*x1839))), ((((-1.0)*sj5*x1845*x1852))+(((-1.0)*cj4*x1841*x1848))+(((-1.0)*r12*sj1*x1840))+(((-1.0)*x1841*x1844))+((cj4*x1850*x1852))+(((-1.0)*cj4*x1849*x1850))+((x1849*x1850))+((x1840*x1843))+((sj5*x1845*x1849))+(((-1.0)*x1850*x1852))+(((-1.0)*cj5*x1845*x1848))+(((-1.0)*sj1*x1839))+((cj4*x1841*x1844))+((cj5*x1844*x1845))+((x1841*x1848))+(((0.250000349687704)*x1843))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1856=IKsin(j2);
IkReal x1857=IKcos(j2);
IkReal x1858=(cj5*r11);
IkReal x1859=((0.433012903784321)*cj4);
IkReal x1860=(r21*sj5);
IkReal x1861=((0.500000349687582)*sj4);
IkReal x1862=((0.749999650312296)*sj3);
IkReal x1863=(cj3*cj4);
IkReal x1864=(cj5*r10);
IkReal x1865=((0.0185150129489311)*sj4);
IkReal x1866=(r20*sj5);
IkReal x1867=(cj4*r22);
IkReal x1868=(r10*sj5);
IkReal x1869=(r22*sj3);
IkReal x1870=(r11*sj5);
IkReal x1871=((0.00925751294893567)*cj4);
IkReal x1872=(cj5*r21);
IkReal x1873=(r12*sj3);
IkReal x1874=(cj4*r12);
IkReal x1875=(cj5*r20);
IkReal x1876=((0.866025201892125)*sj4);
IkReal x1877=(cj1*x1857);
IkReal x1878=(sj1*x1856);
IkReal x1879=(cj1*x1856);
IkReal x1880=((0.250000349687704)*cj4*sj3);
IkReal x1881=(sj1*x1857);
IkReal x1882=(cj3*x1876);
IkReal x1883=(x1877+x1878);
evalcond[0]=(((x1860*x1876))+(((-1.0)*x1859*x1872))+(((-0.250000349687704)*r22))+(((-0.749999650312296)*x1867))+(((0.433012903784321)*x1866))+(((0.433012903784321)*x1872))+x1883+(((-1.0)*x1859*x1866))+(((-1.0)*x1875*x1876)));
evalcond[1]=((((0.433012903784321)*x1858))+(((-0.250000349687704)*r12))+(((-0.749999650312296)*x1874))+(((-1.0)*x1858*x1859))+(((-1.0)*x1864*x1876))+(((0.433012903784321)*x1868))+x1879+(((-1.0)*x1881))+(((-1.0)*x1859*x1868))+((x1870*x1876)));
evalcond[2]=(((x1866*x1871))+(((-1.0)*x1860*x1865))+((x1871*x1872))+(((0.41)*cj1))+((x1865*x1875))+(((-0.0160344678271334)*r22))+(((-0.27144)*x1877))+(((-0.27144)*x1878))+(((0.0160344678271334)*x1867))+(((-1.0)*pz))+(((0.0648043305514941)*x1872))+(((0.0648043305514941)*x1866)));
evalcond[3]=(((x1864*x1865))+((x1858*x1871))+(((0.27144)*x1881))+(((-0.0160344678271334)*r12))+(((0.0648043305514941)*x1858))+(((-0.27144)*x1879))+(((-0.41)*sj1))+(((-1.0)*py))+(((0.0160344678271334)*x1874))+(((-1.0)*x1865*x1870))+((x1868*x1871))+(((0.0648043305514941)*x1868)));
evalcond[4]=(((x1859*x1873))+((r12*x1882))+((x1868*x1880))+((x1863*x1870))+((x1862*x1868))+((sj3*x1861*x1864))+(((-1.0)*sj3*x1861*x1870))+((x1858*x1862))+((cj3*x1858*x1861))+x1883+((cj3*x1861*x1868))+(((-0.433012903784321)*x1873))+((x1858*x1880))+(((-1.0)*x1863*x1864)));
evalcond[5]=((((-1.0)*sj3*x1860*x1861))+(((-0.433012903784321)*x1869))+((x1862*x1872))+((x1860*x1863))+((x1862*x1866))+((sj3*x1861*x1875))+((x1859*x1869))+((x1872*x1880))+(((-1.0)*x1863*x1875))+((cj3*x1861*x1872))+((x1866*x1880))+x1881+((cj3*x1861*x1866))+(((-1.0)*x1879))+((r22*x1882)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1884=((0.528192360616262)*sj4);
IkReal x1885=((0.26409636501044)*cj4);
IkReal x1886=(r20*sj5);
IkReal x1887=((0.444735007694415)*cj5);
IkReal x1888=((0.457427895740576)*cj4);
IkReal x1889=(r10*sj5);
if( IKabs((((r12*x1888))+(((-1.0)*r11*x1887))+(((-1.0)*r11*sj5*x1884))+(((-0.444735007694415)*x1889))+((cj5*r10*x1884))+(((0.204620884747229)*r12))+((x1885*x1889))+(((2.4390243902439)*py))+((cj5*r11*x1885)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1884))+(((-0.444735007694415)*x1886))+((cj5*r20*x1884))+((r22*x1888))+((x1885*x1886))+(((-1.0)*r21*x1887))+((cj5*r21*x1885))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r12*x1888))+(((-1.0)*r11*x1887))+(((-1.0)*r11*sj5*x1884))+(((-0.444735007694415)*x1889))+((cj5*r10*x1884))+(((0.204620884747229)*r12))+((x1885*x1889))+(((2.4390243902439)*py))+((cj5*r11*x1885))))+IKsqr(((((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1884))+(((-0.444735007694415)*x1886))+((cj5*r20*x1884))+((r22*x1888))+((x1885*x1886))+(((-1.0)*r21*x1887))+((cj5*r21*x1885))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r12*x1888))+(((-1.0)*r11*x1887))+(((-1.0)*r11*sj5*x1884))+(((-0.444735007694415)*x1889))+((cj5*r10*x1884))+(((0.204620884747229)*r12))+((x1885*x1889))+(((2.4390243902439)*py))+((cj5*r11*x1885))), ((((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1884))+(((-0.444735007694415)*x1886))+((cj5*r20*x1884))+((r22*x1888))+((x1885*x1886))+(((-1.0)*r21*x1887))+((cj5*r21*x1885))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1890=(cj5*sj4);
IkReal x1891=((0.135720094919197)*sj3);
IkReal x1892=(cj5*r11);
IkReal x1893=(cj5*r21);
IkReal x1894=((0.20357990508077)*sj3);
IkReal x1895=(r20*sj5);
IkReal x1896=((0.00925751294893567)*cj4);
IkReal x1897=(cj4*r10);
IkReal x1898=((0.27144)*cj3);
IkReal x1899=((0.10827950965428)*cj4);
IkReal x1900=((0.117537022603216)*sj3);
IkReal x1901=(cj4*r22);
IkReal x1902=(cj3*sj4);
IkReal x1903=(cj4*r12);
IkReal x1904=(r10*sj5);
IkReal x1905=(cj4*sj5);
IkReal x1906=((0.135720094919197)*cj3);
IkReal x1907=((0.41)*(IKcos(j1)));
IkReal x1908=((0.41)*(IKsin(j1)));
IkReal x1909=(r11*sj4*sj5);
IkReal x1910=((0.0678600949192303)*cj4*sj3);
IkReal x1911=(r21*sj4*sj5);
evalcond[0]=((((0.187545437253636)*x1903))+((x1892*x1899))+(((-0.216558867852667)*x1909))+py+(((-0.18234135315471)*x1904))+(((0.0838945627463637)*r12))+(((0.10827950965428)*sj5*x1897))+(((-0.18234135315471)*x1892))+(((0.216558867852667)*r10*x1890))+(((-1.0)*x1908)));
evalcond[1]=((((0.187545437253636)*x1901))+((x1893*x1899))+pz+((x1895*x1899))+(((0.216558867852667)*r20*x1890))+(((-0.216558867852667)*x1911))+(((-0.18234135315471)*x1893))+(((-0.18234135315471)*x1895))+(((0.0838945627463637)*r22))+(((-1.0)*x1907)));
evalcond[2]=((((-1.0)*x1893*x1896))+((r11*x1898*x1905))+(((-0.0648043305514941)*x1895))+(((-0.0648043305514941)*x1893))+(((0.135720094919197)*x1902*x1904))+((x1892*x1910))+((x1892*x1894))+((r10*x1890*x1891))+((r11*x1890*x1906))+(((0.235073880801598)*r12*x1902))+((x1900*x1903))+(((-0.0160344678271334)*x1901))+(((0.0185150129489311)*x1911))+(((-1.0)*x1895*x1896))+(((-1.0)*r12*x1900))+(((-0.0185150129489311)*r20*x1890))+pz+((x1894*x1904))+(((0.0160344678271334)*r22))+(((-1.0)*cj5*x1897*x1898))+(((0.0678600949192303)*sj3*sj5*x1897))+(((-1.0)*x1891*x1909))+(((-1.0)*x1907)));
evalcond[3]=(((r20*x1890*x1891))+(((0.0185150129489311)*r10*x1890))+(((0.135720094919197)*x1895*x1902))+(((-1.0)*cj4*cj5*r20*x1898))+((x1893*x1894))+((x1893*x1910))+((x1892*x1896))+(((0.0160344678271334)*x1903))+(((-0.0160344678271334)*r12))+(((-1.0)*r22*x1900))+((x1900*x1901))+((r21*x1890*x1906))+(((-1.0)*py))+x1908+((r21*x1898*x1905))+(((0.0648043305514941)*x1904))+((x1895*x1910))+(((-1.0)*x1891*x1911))+(((-0.0185150129489311)*x1909))+((x1894*x1895))+(((0.235073880801598)*r22*x1902))+(((0.0648043305514941)*x1892))+((x1896*x1904)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1912=((0.250000349687704)*r12);
IkReal x1913=((0.749999650312296)*cj4);
IkReal x1914=(cj1*r22);
IkReal x1915=((0.866025201892125)*sj4);
IkReal x1916=(cj1*r20);
IkReal x1917=(sj1*sj5);
IkReal x1918=((0.433012903784321)*r20);
IkReal x1919=((0.433012903784321)*sj5);
IkReal x1920=(cj1*r10);
IkReal x1921=(r22*sj1);
IkReal x1922=((0.433012903784321)*r10);
IkReal x1923=((0.433012903784321)*cj5);
IkReal x1924=(cj1*r21);
IkReal x1925=(cj1*r11);
IkReal x1926=(r11*sj1);
IkReal x1927=(cj1*cj4*x1919);
IkReal x1928=(cj5*sj1*x1915);
IkReal x1929=(cj4*r21*x1923);
if( IKabs(((((-1.0)*x1917*x1918))+(((-1.0)*cj1*r12*x1913))+(((-1.0)*cj5*x1915*x1920))+(((-1.0)*cj4*x1919*x1920))+(((-1.0)*r21*x1915*x1917))+(((-1.0)*cj4*x1923*x1925))+(((-1.0)*cj1*x1912))+((r20*x1928))+((sj5*x1915*x1925))+((x1923*x1925))+(((0.250000349687704)*x1921))+((x1919*x1920))+((x1913*x1921))+((cj4*x1917*x1918))+(((-1.0)*r21*sj1*x1923))+((sj1*x1929)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x1913*x1914))+((cj4*x1916*x1919))+((cj4*x1917*x1922))+((r12*sj1*x1913))+((cj4*x1923*x1924))+((cj4*x1923*x1926))+(((-1.0)*r11*x1915*x1917))+(((-1.0)*x1917*x1922))+(((0.250000349687704)*x1914))+((sj1*x1912))+((r10*x1928))+(((-1.0)*sj5*x1915*x1924))+(((-1.0)*x1916*x1919))+(((-1.0)*x1923*x1926))+(((-1.0)*x1923*x1924))+((cj5*x1915*x1916)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x1917*x1918))+(((-1.0)*cj1*r12*x1913))+(((-1.0)*cj5*x1915*x1920))+(((-1.0)*cj4*x1919*x1920))+(((-1.0)*r21*x1915*x1917))+(((-1.0)*cj4*x1923*x1925))+(((-1.0)*cj1*x1912))+((r20*x1928))+((sj5*x1915*x1925))+((x1923*x1925))+(((0.250000349687704)*x1921))+((x1919*x1920))+((x1913*x1921))+((cj4*x1917*x1918))+(((-1.0)*r21*sj1*x1923))+((sj1*x1929))))+IKsqr((((x1913*x1914))+((cj4*x1916*x1919))+((cj4*x1917*x1922))+((r12*sj1*x1913))+((cj4*x1923*x1924))+((cj4*x1923*x1926))+(((-1.0)*r11*x1915*x1917))+(((-1.0)*x1917*x1922))+(((0.250000349687704)*x1914))+((sj1*x1912))+((r10*x1928))+(((-1.0)*sj5*x1915*x1924))+(((-1.0)*x1916*x1919))+(((-1.0)*x1923*x1926))+(((-1.0)*x1923*x1924))+((cj5*x1915*x1916))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x1917*x1918))+(((-1.0)*cj1*r12*x1913))+(((-1.0)*cj5*x1915*x1920))+(((-1.0)*cj4*x1919*x1920))+(((-1.0)*r21*x1915*x1917))+(((-1.0)*cj4*x1923*x1925))+(((-1.0)*cj1*x1912))+((r20*x1928))+((sj5*x1915*x1925))+((x1923*x1925))+(((0.250000349687704)*x1921))+((x1919*x1920))+((x1913*x1921))+((cj4*x1917*x1918))+(((-1.0)*r21*sj1*x1923))+((sj1*x1929))), (((x1913*x1914))+((cj4*x1916*x1919))+((cj4*x1917*x1922))+((r12*sj1*x1913))+((cj4*x1923*x1924))+((cj4*x1923*x1926))+(((-1.0)*r11*x1915*x1917))+(((-1.0)*x1917*x1922))+(((0.250000349687704)*x1914))+((sj1*x1912))+((r10*x1928))+(((-1.0)*sj5*x1915*x1924))+(((-1.0)*x1916*x1919))+(((-1.0)*x1923*x1926))+(((-1.0)*x1923*x1924))+((cj5*x1915*x1916))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x1930=IKcos(j2);
IkReal x1931=IKsin(j2);
IkReal x1932=(cj5*r11);
IkReal x1933=((0.433012903784321)*cj4);
IkReal x1934=(r21*sj5);
IkReal x1935=((0.500000349687582)*sj4);
IkReal x1936=((0.749999650312296)*sj3);
IkReal x1937=(cj3*cj4);
IkReal x1938=(cj5*r10);
IkReal x1939=((0.0185150129489311)*sj4);
IkReal x1940=(r20*sj5);
IkReal x1941=(cj4*r22);
IkReal x1942=(r10*sj5);
IkReal x1943=(r12*sj3);
IkReal x1944=(r11*sj5);
IkReal x1945=(r22*sj3);
IkReal x1946=((0.27144)*sj1);
IkReal x1947=((0.00925751294893567)*cj4);
IkReal x1948=(cj5*r20);
IkReal x1949=(cj5*r21);
IkReal x1950=(cj4*r12);
IkReal x1951=((0.866025201892125)*sj4);
IkReal x1952=(sj1*x1930);
IkReal x1953=(cj1*x1930);
IkReal x1954=(cj1*x1931);
IkReal x1955=((0.250000349687704)*cj4*sj3);
IkReal x1956=(cj3*x1951);
IkReal x1957=(sj1*x1931);
IkReal x1958=((1.0)*x1954);
evalcond[0]=((((-1.0)*x1948*x1951))+(((-0.250000349687704)*r22))+x1957+x1953+(((-0.749999650312296)*x1941))+(((0.433012903784321)*x1949))+(((0.433012903784321)*x1940))+((x1934*x1951))+(((-1.0)*x1933*x1949))+(((-1.0)*x1933*x1940)));
evalcond[1]=((((-0.250000349687704)*r12))+(((-1.0)*x1958))+((x1944*x1951))+(((-1.0)*x1932*x1933))+x1952+(((-1.0)*x1938*x1951))+(((-0.749999650312296)*x1950))+(((0.433012903784321)*x1942))+(((-1.0)*x1933*x1942))+(((0.433012903784321)*x1932)));
evalcond[2]=(((x1939*x1948))+(((-0.27144)*x1953))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0160344678271334)*x1941))+(((-1.0)*x1934*x1939))+(((0.0648043305514941)*x1940))+(((0.0648043305514941)*x1949))+((x1940*x1947))+(((-1.0)*pz))+(((-1.0)*x1931*x1946))+((x1947*x1949)));
evalcond[3]=((((-1.0)*x1930*x1946))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((0.0648043305514941)*x1942))+(((0.0160344678271334)*x1950))+(((-1.0)*py))+(((0.0648043305514941)*x1932))+((x1942*x1947))+((x1932*x1947))+(((-1.0)*x1939*x1944))+(((0.27144)*x1954))+((x1938*x1939)));
evalcond[4]=(((cj3*x1935*x1949))+((cj3*x1935*x1940))+(((-1.0)*x1958))+((x1934*x1937))+(((-1.0)*x1937*x1948))+((x1936*x1940))+((x1936*x1949))+((x1940*x1955))+((r22*x1956))+x1952+((sj3*x1935*x1948))+(((-1.0)*sj3*x1934*x1935))+((x1933*x1945))+(((-0.433012903784321)*x1945))+((x1949*x1955)));
evalcond[5]=(((cj3*x1935*x1942))+(((-1.0)*sj3*x1935*x1944))+((x1937*x1944))+((cj3*x1932*x1935))+((x1932*x1936))+((r12*x1956))+((x1936*x1942))+(((-1.0)*x1937*x1938))+(((-1.0)*x1953))+(((-1.0)*x1957))+((x1942*x1955))+((sj3*x1935*x1938))+((x1932*x1955))+((x1933*x1943))+(((-0.433012903784321)*x1943)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1959=((0.26409636501044)*cj4);
IkReal x1960=(r20*sj5);
IkReal x1961=(cj5*r21);
IkReal x1962=((0.457427895740576)*cj4);
IkReal x1963=(r00*sj5);
IkReal x1964=((0.528192360616262)*sj4);
IkReal x1965=(cj5*r01);
if( IKabs(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*x1959*x1965))+(((-1.0)*x1959*x1963))+(((0.444735007694415)*x1963))+(((0.444735007694415)*x1965))+(((-1.0)*cj5*r00*x1964))+(((-1.0)*r02*x1962))+((r01*sj5*x1964)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x1959*x1961))+((x1959*x1960))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1964))+(((-0.444735007694415)*x1960))+(((-0.444735007694415)*x1961))+((cj5*r20*x1964))+((r22*x1962))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*x1959*x1965))+(((-1.0)*x1959*x1963))+(((0.444735007694415)*x1963))+(((0.444735007694415)*x1965))+(((-1.0)*cj5*r00*x1964))+(((-1.0)*r02*x1962))+((r01*sj5*x1964))))+IKsqr((((x1959*x1961))+((x1959*x1960))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1964))+(((-0.444735007694415)*x1960))+(((-0.444735007694415)*x1961))+((cj5*r20*x1964))+((r22*x1962))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*x1959*x1965))+(((-1.0)*x1959*x1963))+(((0.444735007694415)*x1963))+(((0.444735007694415)*x1965))+(((-1.0)*cj5*r00*x1964))+(((-1.0)*r02*x1962))+((r01*sj5*x1964))), (((x1959*x1961))+((x1959*x1960))+(((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x1964))+(((-0.444735007694415)*x1960))+(((-0.444735007694415)*x1961))+((cj5*r20*x1964))+((r22*x1962))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x1966=((1.0)*px);
IkReal x1967=((0.187545437253636)*cj4);
IkReal x1968=(r20*sj5);
IkReal x1969=(r01*sj3);
IkReal x1970=(cj5*r21);
IkReal x1971=(cj3*r00);
IkReal x1972=((0.0185150129489311)*sj4);
IkReal x1973=(r21*sj5);
IkReal x1974=((0.20357990508077)*sj3);
IkReal x1975=(cj5*sj4);
IkReal x1976=((0.135720094919197)*sj3);
IkReal x1977=(cj4*cj5);
IkReal x1978=(r00*sj5);
IkReal x1979=((0.00925751294893567)*cj4);
IkReal x1980=((0.10827950965428)*cj4);
IkReal x1981=(cj4*r22);
IkReal x1982=((0.117537022603216)*sj3);
IkReal x1983=(cj5*r01);
IkReal x1984=((0.135720094919197)*cj3);
IkReal x1985=(r01*sj5);
IkReal x1986=((0.216558867852667)*sj4);
IkReal x1987=(cj4*r02);
IkReal x1988=((0.27144)*cj3);
IkReal x1989=((0.41)*(IKsin(j1)));
IkReal x1990=((0.41)*(IKcos(j1)));
IkReal x1991=((0.135720094919197)*sj4*sj5);
IkReal x1992=((0.0678600949192303)*cj4*sj3);
IkReal x1993=((0.235073880801598)*cj3*sj4);
IkReal x1994=(x1989+x1966);
evalcond[0]=(((x1968*x1980))+(((-1.0)*x1973*x1986))+((x1970*x1980))+((r22*x1967))+(((-1.0)*x1990))+pz+(((0.216558867852667)*r20*x1975))+(((-0.18234135315471)*x1968))+(((-0.18234135315471)*x1970))+(((0.0838945627463637)*r22)));
evalcond[1]=((((0.18234135315471)*x1978))+(((-0.10827950965428)*r01*x1977))+(((-1.0)*r02*x1967))+(((-0.0838945627463637)*r02))+(((-0.216558867852667)*r00*x1975))+(((-1.0)*x1994))+(((-1.0)*x1978*x1980))+((x1985*x1986))+(((0.18234135315471)*x1983)));
evalcond[2]=((((-1.0)*x1981*x1982))+(((-0.0160344678271334)*r02))+(((0.0648043305514941)*x1983))+(((-1.0)*x1972*x1985))+(((0.0160344678271334)*x1987))+(((-1.0)*sj4*x1968*x1984))+(((-1.0)*x1968*x1974))+(((-1.0)*sj4*x1970*x1984))+(((-1.0)*x1970*x1974))+(((0.0648043305514941)*x1978))+(((0.00925751294893567)*r01*x1977))+(((-1.0)*x1994))+((r22*x1982))+(((-1.0)*x1970*x1992))+((x1978*x1979))+(((-1.0)*cj4*x1973*x1988))+(((-1.0)*r20*x1975*x1976))+((cj5*r00*x1972))+(((-1.0)*r22*x1993))+(((-1.0)*x1968*x1992))+((sj4*x1973*x1976))+((r20*x1977*x1988)));
evalcond[3]=((((0.0678600949192303)*x1969*x1977))+(((-1.0)*r02*x1982))+((r01*x1975*x1984))+(((-0.0160344678271334)*r22))+(((0.0160344678271334)*x1981))+((x1970*x1979))+((r02*x1993))+((cj4*x1985*x1988))+(((-1.0)*x1972*x1973))+((x1971*x1991))+(((-1.0)*pz))+(((0.0648043305514941)*x1970))+(((0.0648043305514941)*x1968))+x1990+((x1974*x1978))+((x1982*x1987))+((cj5*r20*x1972))+((r00*x1975*x1976))+(((-0.27144)*x1971*x1977))+(((0.20357990508077)*cj5*x1969))+((x1978*x1992))+((x1968*x1979))+(((-1.0)*x1969*x1991)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x1995=((0.250000349687704)*sj1);
IkReal x1996=(cj1*cj4);
IkReal x1997=((0.749999650312296)*r22);
IkReal x1998=(cj4*sj1);
IkReal x1999=((0.749999650312296)*r02);
IkReal x2000=((0.250000349687704)*cj1);
IkReal x2001=((0.433012903784321)*r00*sj5);
IkReal x2002=((0.433012903784321)*r20*sj5);
IkReal x2003=((0.433012903784321)*cj5*r01);
IkReal x2004=((0.433012903784321)*cj5*r21);
IkReal x2005=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2006=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2007=((0.866025201892125)*r01*sj4*sj5);
IkReal x2008=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x1996*x1999))+((r00*x2006))+(((-1.0)*sj1*x2008))+(((-1.0)*sj1*x2004))+(((-1.0)*sj1*x2002))+((r02*x2000))+(((-1.0)*cj1*x2001))+(((-1.0)*cj1*x2003))+(((-1.0)*cj1*x2007))+((r20*x2005))+((x1996*x2001))+((x1996*x2003))+((x1997*x1998))+((r22*x1995))+((x1998*x2002))+((x1998*x2004)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x1998*x1999))+((r22*x2000))+((x1996*x1997))+(((-1.0)*x1998*x2003))+(((-1.0)*x1998*x2001))+(((-1.0)*r02*x1995))+(((-1.0)*r00*x2005))+(((-1.0)*cj1*x2002))+(((-1.0)*cj1*x2008))+(((-1.0)*cj1*x2004))+((sj1*x2007))+((sj1*x2001))+((sj1*x2003))+((r20*x2006))+((x1996*x2004))+((x1996*x2002)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x1996*x1999))+((r00*x2006))+(((-1.0)*sj1*x2008))+(((-1.0)*sj1*x2004))+(((-1.0)*sj1*x2002))+((r02*x2000))+(((-1.0)*cj1*x2001))+(((-1.0)*cj1*x2003))+(((-1.0)*cj1*x2007))+((r20*x2005))+((x1996*x2001))+((x1996*x2003))+((x1997*x1998))+((r22*x1995))+((x1998*x2002))+((x1998*x2004))))+IKsqr(((((-1.0)*x1998*x1999))+((r22*x2000))+((x1996*x1997))+(((-1.0)*x1998*x2003))+(((-1.0)*x1998*x2001))+(((-1.0)*r02*x1995))+(((-1.0)*r00*x2005))+(((-1.0)*cj1*x2002))+(((-1.0)*cj1*x2008))+(((-1.0)*cj1*x2004))+((sj1*x2007))+((sj1*x2001))+((sj1*x2003))+((r20*x2006))+((x1996*x2004))+((x1996*x2002))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x1996*x1999))+((r00*x2006))+(((-1.0)*sj1*x2008))+(((-1.0)*sj1*x2004))+(((-1.0)*sj1*x2002))+((r02*x2000))+(((-1.0)*cj1*x2001))+(((-1.0)*cj1*x2003))+(((-1.0)*cj1*x2007))+((r20*x2005))+((x1996*x2001))+((x1996*x2003))+((x1997*x1998))+((r22*x1995))+((x1998*x2002))+((x1998*x2004))), ((((-1.0)*x1998*x1999))+((r22*x2000))+((x1996*x1997))+(((-1.0)*x1998*x2003))+(((-1.0)*x1998*x2001))+(((-1.0)*r02*x1995))+(((-1.0)*r00*x2005))+(((-1.0)*cj1*x2002))+(((-1.0)*cj1*x2008))+(((-1.0)*cj1*x2004))+((sj1*x2007))+((sj1*x2001))+((sj1*x2003))+((r20*x2006))+((x1996*x2004))+((x1996*x2002))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2009=IKsin(j2);
IkReal x2010=IKcos(j2);
IkReal x2011=((0.749999650312296)*sj3);
IkReal x2012=(cj5*r01);
IkReal x2013=(r00*sj5);
IkReal x2014=(cj4*cj5);
IkReal x2015=((1.0)*cj3);
IkReal x2016=(r21*sj3);
IkReal x2017=(cj4*sj5);
IkReal x2018=(cj3*r21);
IkReal x2019=((0.500000349687582)*sj4);
IkReal x2020=((0.433012903784321)*r20);
IkReal x2021=(cj4*r22);
IkReal x2022=((0.433012903784321)*sj3);
IkReal x2023=((0.433012903784321)*cj4);
IkReal x2024=(r01*sj5);
IkReal x2025=(r20*sj5);
IkReal x2026=((0.0160344678271334)*r02);
IkReal x2027=(cj4*r02);
IkReal x2028=((0.00925751294893567)*cj4);
IkReal x2029=((0.0185150129489311)*sj4);
IkReal x2030=(r21*sj5);
IkReal x2031=(cj5*r21);
IkReal x2032=((0.866025201892125)*sj4);
IkReal x2033=(cj5*r20);
IkReal x2034=(cj5*r00);
IkReal x2035=((0.250000349687704)*sj3);
IkReal x2036=(cj1*x2010);
IkReal x2037=(sj1*x2009);
IkReal x2038=(cj1*x2009);
IkReal x2039=(sj1*x2010);
IkReal x2040=(x2037+x2036);
evalcond[0]=((((-0.250000349687704)*r22))+((sj5*x2020))+(((-0.749999650312296)*x2021))+((x2030*x2032))+(((-0.433012903784321)*r21*x2014))+x2040+(((-1.0)*x2017*x2020))+(((-1.0)*x2032*x2033))+(((0.433012903784321)*x2031)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-0.749999650312296)*x2027))+x2038+((x2024*x2032))+(((-1.0)*x2013*x2023))+(((-1.0)*x2039))+(((-1.0)*x2032*x2034))+(((0.433012903784321)*x2012))+(((0.433012903784321)*x2013))+(((-1.0)*x2012*x2023)));
evalcond[2]=((((0.0648043305514941)*x2031))+(((0.0648043305514941)*x2025))+(((-0.27144)*x2037))+(((-0.27144)*x2036))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.00925751294893567)*r21*x2014))+(((-1.0)*x2029*x2030))+(((-1.0)*pz))+(((0.00925751294893567)*r20*x2017))+((x2029*x2033))+(((0.0160344678271334)*x2021)));
evalcond[3]=((((0.27144)*x2039))+((cj4*x2026))+(((-0.27144)*x2038))+(((-0.41)*sj1))+(((-1.0)*px))+((x2012*x2028))+(((-1.0)*x2024*x2029))+((x2013*x2028))+(((-1.0)*x2026))+((x2029*x2034))+(((0.0648043305514941)*x2012))+(((0.0648043305514941)*x2013)));
evalcond[4]=(((cj3*r02*x2032))+((cj3*x2013*x2019))+((cj3*x2012*x2019))+((cj4*x2012*x2035))+x2040+((cj4*x2013*x2035))+(((-1.0)*r02*x2022))+((x2022*x2027))+((x2011*x2012))+((x2011*x2013))+((cj3*r01*x2017))+(((-1.0)*r00*x2014*x2015))+(((-1.0)*sj3*x2019*x2024))+((sj3*x2019*x2034)));
evalcond[5]=((((-1.0)*sj5*x2016*x2019))+((r20*x2017*x2035))+((cj5*x2018*x2019))+(((-1.0)*r20*x2014*x2015))+(((-1.0)*r22*x2022))+x2039+((cj3*x2019*x2025))+(((0.250000349687704)*x2014*x2016))+((x2011*x2031))+(((-1.0)*x2038))+((cj3*r22*x2032))+((x2011*x2025))+((x2017*x2018))+((sj3*x2019*x2033))+((x2021*x2022)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2041=(cj5*r21);
IkReal x2042=((0.26409636501044)*cj4);
IkReal x2043=((0.457427895740576)*cj4);
IkReal x2044=((0.528192360616262)*sj4);
IkReal x2045=(cj5*r01);
IkReal x2046=((0.444735007694415)*sj5);
if( IKabs((((x2042*x2045))+((r02*x2043))+((r00*sj5*x2042))+(((0.204620884747229)*r02))+(((-1.0)*r00*x2046))+(((-1.0)*r01*sj5*x2044))+((cj5*r00*x2044))+(((2.4390243902439)*px))+(((-0.444735007694415)*x2045)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x2043))+((x2041*x2042))+(((0.204620884747229)*r22))+((cj5*r20*x2044))+(((-1.0)*r21*sj5*x2044))+((r20*sj5*x2042))+(((-1.0)*r20*x2046))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x2041)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x2042*x2045))+((r02*x2043))+((r00*sj5*x2042))+(((0.204620884747229)*r02))+(((-1.0)*r00*x2046))+(((-1.0)*r01*sj5*x2044))+((cj5*r00*x2044))+(((2.4390243902439)*px))+(((-0.444735007694415)*x2045))))+IKsqr((((r22*x2043))+((x2041*x2042))+(((0.204620884747229)*r22))+((cj5*r20*x2044))+(((-1.0)*r21*sj5*x2044))+((r20*sj5*x2042))+(((-1.0)*r20*x2046))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x2041))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((x2042*x2045))+((r02*x2043))+((r00*sj5*x2042))+(((0.204620884747229)*r02))+(((-1.0)*r00*x2046))+(((-1.0)*r01*sj5*x2044))+((cj5*r00*x2044))+(((2.4390243902439)*px))+(((-0.444735007694415)*x2045))), (((r22*x2043))+((x2041*x2042))+(((0.204620884747229)*r22))+((cj5*r20*x2044))+(((-1.0)*r21*sj5*x2044))+((r20*sj5*x2042))+(((-1.0)*r20*x2046))+(((2.4390243902439)*pz))+(((-0.444735007694415)*x2041))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2047=((0.187545437253636)*cj4);
IkReal x2048=(cj5*r20);
IkReal x2049=(r01*sj5);
IkReal x2050=(cj5*r21);
IkReal x2051=(cj3*r00);
IkReal x2052=(sj4*sj5);
IkReal x2053=((0.20357990508077)*sj3);
IkReal x2054=(r20*sj5);
IkReal x2055=(cj4*cj5);
IkReal x2056=((0.00925751294893567)*cj4);
IkReal x2057=((0.117537022603216)*sj3);
IkReal x2058=((0.10827950965428)*cj4);
IkReal x2059=(r00*sj5);
IkReal x2060=(cj4*r22);
IkReal x2061=(r21*sj5);
IkReal x2062=((0.216558867852667)*sj4);
IkReal x2063=((0.0185150129489311)*sj4);
IkReal x2064=(cj3*sj4);
IkReal x2065=(cj4*r02);
IkReal x2066=(cj5*r01);
IkReal x2067=((0.41)*(IKcos(j1)));
IkReal x2068=((0.41)*(IKsin(j1)));
IkReal x2069=((0.135720094919197)*sj3*sj4);
IkReal x2070=((0.0678600949192303)*cj4*sj3);
IkReal x2071=(cj5*r00*sj4);
IkReal x2072=((0.27144)*cj3*cj4);
evalcond[0]=(((r02*x2047))+(((-1.0)*x2068))+(((0.10827950965428)*r01*x2055))+px+(((-1.0)*x2049*x2062))+(((-0.18234135315471)*x2066))+(((-0.18234135315471)*x2059))+((x2058*x2059))+((cj5*r00*x2062))+(((0.0838945627463637)*r02)));
evalcond[1]=(((r22*x2047))+((x2054*x2058))+(((-1.0)*x2067))+pz+((x2048*x2062))+((x2050*x2058))+(((-0.216558867852667)*r21*x2052))+(((-0.18234135315471)*x2050))+(((-0.18234135315471)*x2054))+(((0.0838945627463637)*r22)));
evalcond[2]=((((-1.0)*x2054*x2056))+((x2053*x2059))+(((0.0678600949192303)*r01*sj3*x2055))+(((0.135720094919197)*x2064*x2066))+((x2049*x2072))+(((0.135720094919197)*x2051*x2052))+(((-1.0)*x2067))+((x2059*x2070))+(((-0.0160344678271334)*x2060))+(((-1.0)*r02*x2057))+pz+(((0.235073880801598)*r02*x2064))+(((-1.0)*x2049*x2069))+(((0.0160344678271334)*r22))+(((-1.0)*x2050*x2056))+((x2057*x2065))+(((-0.0648043305514941)*x2050))+(((-0.0648043305514941)*x2054))+(((-1.0)*x2048*x2063))+(((-0.27144)*x2051*x2055))+(((0.0185150129489311)*r21*x2052))+((cj5*r00*x2069))+((x2053*x2066)));
evalcond[3]=(((x2053*x2054))+(((-0.135720094919197)*r21*sj3*x2052))+((x2054*x2070))+(((0.0648043305514941)*x2059))+(((0.00925751294893567)*r01*x2055))+(((-0.0160344678271334)*r02))+x2068+(((-1.0)*r22*x2057))+(((0.0648043305514941)*x2066))+(((0.135720094919197)*x2050*x2064))+(((0.235073880801598)*r22*x2064))+(((0.0160344678271334)*x2065))+(((-1.0)*px))+(((-1.0)*x2049*x2063))+((x2057*x2060))+(((-1.0)*x2048*x2072))+((x2048*x2069))+((x2050*x2053))+((x2050*x2070))+((x2056*x2059))+(((0.135720094919197)*cj3*r20*x2052))+((x2061*x2072))+((cj5*r00*x2063)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2073=(r02*sj1);
IkReal x2074=(cj1*cj4);
IkReal x2075=((0.749999650312296)*r22);
IkReal x2076=(cj4*sj1);
IkReal x2077=((0.250000349687704)*r22);
IkReal x2078=((0.433012903784321)*r00*sj5);
IkReal x2079=((0.433012903784321)*r20*sj5);
IkReal x2080=((0.433012903784321)*cj5*r01);
IkReal x2081=((0.433012903784321)*cj5*r21);
IkReal x2082=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2083=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2084=((0.866025201892125)*r01*sj4*sj5);
IkReal x2085=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x2075*x2076))+(((-1.0)*sj1*x2085))+(((-1.0)*sj1*x2081))+(((-1.0)*x2074*x2080))+((r20*x2082))+((cj1*x2080))+((cj1*x2084))+(((-1.0)*sj1*x2079))+((x2076*x2081))+(((-1.0)*x2074*x2078))+((x2076*x2079))+((sj1*x2077))+((cj1*x2078))+(((-0.250000349687704)*cj1*r02))+(((-0.749999650312296)*r02*x2074))+(((-1.0)*r00*x2083)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj1*x2081))+(((-1.0)*cj1*x2085))+(((-1.0)*sj1*x2084))+(((-1.0)*sj1*x2080))+((r20*x2083))+((x2074*x2081))+(((-1.0)*sj1*x2078))+((x2076*x2080))+((x2076*x2078))+((cj1*x2077))+((x2074*x2075))+((x2074*x2079))+(((-1.0)*cj1*x2079))+((r00*x2082))+(((0.749999650312296)*cj4*x2073))+(((0.250000349687704)*x2073)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x2075*x2076))+(((-1.0)*sj1*x2085))+(((-1.0)*sj1*x2081))+(((-1.0)*x2074*x2080))+((r20*x2082))+((cj1*x2080))+((cj1*x2084))+(((-1.0)*sj1*x2079))+((x2076*x2081))+(((-1.0)*x2074*x2078))+((x2076*x2079))+((sj1*x2077))+((cj1*x2078))+(((-0.250000349687704)*cj1*r02))+(((-0.749999650312296)*r02*x2074))+(((-1.0)*r00*x2083))))+IKsqr(((((-1.0)*cj1*x2081))+(((-1.0)*cj1*x2085))+(((-1.0)*sj1*x2084))+(((-1.0)*sj1*x2080))+((r20*x2083))+((x2074*x2081))+(((-1.0)*sj1*x2078))+((x2076*x2080))+((x2076*x2078))+((cj1*x2077))+((x2074*x2075))+((x2074*x2079))+(((-1.0)*cj1*x2079))+((r00*x2082))+(((0.749999650312296)*cj4*x2073))+(((0.250000349687704)*x2073))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x2075*x2076))+(((-1.0)*sj1*x2085))+(((-1.0)*sj1*x2081))+(((-1.0)*x2074*x2080))+((r20*x2082))+((cj1*x2080))+((cj1*x2084))+(((-1.0)*sj1*x2079))+((x2076*x2081))+(((-1.0)*x2074*x2078))+((x2076*x2079))+((sj1*x2077))+((cj1*x2078))+(((-0.250000349687704)*cj1*r02))+(((-0.749999650312296)*r02*x2074))+(((-1.0)*r00*x2083))), ((((-1.0)*cj1*x2081))+(((-1.0)*cj1*x2085))+(((-1.0)*sj1*x2084))+(((-1.0)*sj1*x2080))+((r20*x2083))+((x2074*x2081))+(((-1.0)*sj1*x2078))+((x2076*x2080))+((x2076*x2078))+((cj1*x2077))+((x2074*x2075))+((x2074*x2079))+(((-1.0)*cj1*x2079))+((r00*x2082))+(((0.749999650312296)*cj4*x2073))+(((0.250000349687704)*x2073))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2086=IKcos(j2);
IkReal x2087=IKsin(j2);
IkReal x2088=((0.433012903784321)*sj3);
IkReal x2089=((0.749999650312296)*sj3);
IkReal x2090=(r00*sj5);
IkReal x2091=(cj4*cj5);
IkReal x2092=((1.0)*cj3);
IkReal x2093=(cj5*r01);
IkReal x2094=(r21*sj3);
IkReal x2095=(cj4*sj5);
IkReal x2096=(cj3*r21);
IkReal x2097=((0.500000349687582)*sj4);
IkReal x2098=((0.433012903784321)*r20);
IkReal x2099=(cj4*r22);
IkReal x2100=(r20*sj5);
IkReal x2101=((0.0160344678271334)*r02);
IkReal x2102=(cj4*r02);
IkReal x2103=(r01*sj5);
IkReal x2104=(cj5*r00);
IkReal x2105=((0.0185150129489311)*sj4);
IkReal x2106=(r21*sj5);
IkReal x2107=(cj5*r21);
IkReal x2108=((0.866025201892125)*sj4);
IkReal x2109=(cj5*r20);
IkReal x2110=((0.250000349687704)*sj3);
IkReal x2111=(sj1*x2086);
IkReal x2112=(cj1*x2086);
IkReal x2113=(sj1*x2087);
IkReal x2114=(cj1*x2087);
IkReal x2115=((1.0)*x2114);
evalcond[0]=((((0.433012903784321)*x2107))+(((-0.250000349687704)*r22))+(((-0.433012903784321)*r21*x2091))+x2112+x2113+(((-1.0)*x2095*x2098))+((sj5*x2098))+((x2106*x2108))+(((-1.0)*x2108*x2109))+(((-0.749999650312296)*x2099)));
evalcond[1]=((((-0.250000349687704)*r02))+((x2103*x2108))+x2111+(((-0.433012903784321)*r01*x2091))+(((-0.433012903784321)*cj4*x2090))+(((-0.749999650312296)*x2102))+(((-1.0)*x2115))+(((-1.0)*x2104*x2108))+(((0.433012903784321)*x2093))+(((0.433012903784321)*x2090)));
evalcond[2]=((((0.0160344678271334)*x2099))+(((-0.27144)*x2112))+(((-0.27144)*x2113))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*x2105*x2106))+(((0.00925751294893567)*r20*x2095))+(((-1.0)*pz))+(((0.00925751294893567)*r21*x2091))+(((0.0648043305514941)*x2100))+(((0.0648043305514941)*x2107))+((x2105*x2109)));
evalcond[3]=((((-1.0)*x2103*x2105))+((cj4*x2101))+((x2104*x2105))+(((-1.0)*x2101))+(((-0.27144)*x2111))+(((0.41)*sj1))+(((-1.0)*px))+(((0.00925751294893567)*cj4*x2090))+(((0.27144)*x2114))+(((0.00925751294893567)*r01*x2091))+(((0.0648043305514941)*x2093))+(((0.0648043305514941)*x2090)));
evalcond[4]=(((cj5*x2096*x2097))+(((-1.0)*r20*x2091*x2092))+(((-1.0)*r22*x2088))+((r20*x2095*x2110))+((sj3*x2097*x2109))+((x2088*x2099))+x2111+(((0.250000349687704)*x2091*x2094))+((cj3*x2097*x2100))+(((-1.0)*x2115))+((x2089*x2107))+((x2089*x2100))+(((-1.0)*sj5*x2094*x2097))+((cj3*r22*x2108))+((x2095*x2096)));
evalcond[5]=((((-1.0)*r02*x2088))+((cj3*x2090*x2097))+(((-1.0)*sj3*x2097*x2103))+((sj3*x2097*x2104))+((cj4*x2090*x2110))+((r01*x2091*x2110))+((x2089*x2093))+((x2089*x2090))+((cj3*x2093*x2097))+((cj3*r01*x2095))+((x2088*x2102))+(((-1.0)*r00*x2091*x2092))+((cj3*r02*x2108))+(((-1.0)*x2112))+(((-1.0)*x2113)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j1, j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2116=(cj4*sj5);
IkReal x2117=(cj0*r00);
IkReal x2118=(cj0*r02);
IkReal x2119=(cj5*r21);
IkReal x2120=((0.216558867852667)*sj4);
IkReal x2121=((0.528192360616262)*sj4);
IkReal x2122=(cj0*cj5*r01);
CheckValue<IkReal> x2123=IKPowWithIntegerCheck(cj0,-2);
if(!x2123.valid){
continue;
}
if( IKabs(((2.4390243902439)*(x2123.value)*(((((-0.0838945627463637)*x2118))+(((-0.10827950965428)*x2116*x2117))+(((0.0098)*cj0*sj0))+((cj0*r01*sj5*x2120))+(((0.18234135315471)*sj5*x2117))+(((-0.10827950965428)*cj4*x2122))+(((-1.0)*cj5*x2117*x2120))+(((0.18234135315471)*x2122))+(((-0.187545437253636)*cj4*x2118))+(((-1.0)*cj0*px)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*cj4*x2119))+(((-0.444735007694415)*x2119))+(((0.26409636501044)*r20*x2116))+(((-1.0)*r21*sj5*x2121))+(((2.4390243902439)*pz))+((cj5*r20*x2121)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((2.4390243902439)*(x2123.value)*(((((-0.0838945627463637)*x2118))+(((-0.10827950965428)*x2116*x2117))+(((0.0098)*cj0*sj0))+((cj0*r01*sj5*x2120))+(((0.18234135315471)*sj5*x2117))+(((-0.10827950965428)*cj4*x2122))+(((-1.0)*cj5*x2117*x2120))+(((0.18234135315471)*x2122))+(((-0.187545437253636)*cj4*x2118))+(((-1.0)*cj0*px))))))+IKsqr(((((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*cj4*x2119))+(((-0.444735007694415)*x2119))+(((0.26409636501044)*r20*x2116))+(((-1.0)*r21*sj5*x2121))+(((2.4390243902439)*pz))+((cj5*r20*x2121))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((2.4390243902439)*(x2123.value)*(((((-0.0838945627463637)*x2118))+(((-0.10827950965428)*x2116*x2117))+(((0.0098)*cj0*sj0))+((cj0*r01*sj5*x2120))+(((0.18234135315471)*sj5*x2117))+(((-0.10827950965428)*cj4*x2122))+(((-1.0)*cj5*x2117*x2120))+(((0.18234135315471)*x2122))+(((-0.187545437253636)*cj4*x2118))+(((-1.0)*cj0*px))))), ((((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*cj4*x2119))+(((-0.444735007694415)*x2119))+(((0.26409636501044)*r20*x2116))+(((-1.0)*r21*sj5*x2121))+(((2.4390243902439)*pz))+((cj5*r20*x2121))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x2124=IKsin(j1);
IkReal x2125=IKcos(j1);
IkReal x2126=sj0*sj0;
IkReal x2127=cj0*cj0;
IkReal x2128=((0.0098)*cj0);
IkReal x2129=(cj0*cj5);
IkReal x2130=(cj5*sj0);
IkReal x2131=((0.0648043305514941)*r21);
IkReal x2132=(r00*sj5);
IkReal x2133=((0.20357990508077)*sj3);
IkReal x2134=((0.135720094919197)*r21);
IkReal x2135=((1.0)*px);
IkReal x2136=((0.117537022603216)*sj3);
IkReal x2137=((0.00925751294893567)*cj4);
IkReal x2138=(r10*sj4);
IkReal x2139=(sj0*sj5);
IkReal x2140=(cj4*sj0);
IkReal x2141=(r20*sj5);
IkReal x2142=((0.10827950965428)*cj4);
IkReal x2143=(cj3*sj4);
IkReal x2144=((0.135720094919197)*sj5);
IkReal x2145=((0.117537022603216)*r11);
IkReal x2146=(cj5*r01);
IkReal x2147=(cj4*r02);
IkReal x2148=((0.117537022603216)*cj4);
IkReal x2149=((0.0160344678271334)*r02);
IkReal x2150=((0.0648043305514941)*r11);
IkReal x2151=((0.0160344678271334)*r12);
IkReal x2152=(cj0*cj4);
IkReal x2153=(cj5*sj3);
IkReal x2154=((0.0678600949192303)*cj4);
IkReal x2155=(r10*sj5);
IkReal x2156=((1.0)*py);
IkReal x2157=(cj5*r00);
IkReal x2158=(cj0*r21);
IkReal x2159=(r11*sj5);
IkReal x2160=((0.0160344678271334)*r22);
IkReal x2161=(r00*sj4);
IkReal x2162=((1.0)*pz);
IkReal x2163=(r22*sj0);
IkReal x2164=(sj3*sj4);
IkReal x2165=(cj5*r21);
IkReal x2166=(r21*sj3);
IkReal x2167=(cj0*r22);
IkReal x2168=((0.0185150129489311)*sj4);
IkReal x2169=(cj5*r11);
IkReal x2170=(r01*sj5);
IkReal x2171=((0.216558867852667)*sj4);
IkReal x2172=((0.135720094919197)*r20);
IkReal x2173=(sj0*x2128);
IkReal x2174=(sj4*x2139);
IkReal x2175=((0.27144)*cj3*cj4);
IkReal x2176=(r11*x2137);
IkReal x2177=((0.41)*x2124);
IkReal x2178=(cj0*x2155);
IkReal x2179=(sj5*x2168);
IkReal x2180=((0.41)*x2125);
IkReal x2181=(cj0*sj0*x2177);
evalcond[0]=((((-1.0)*r21*sj5*x2171))+((cj5*r20*x2171))+(((-0.18234135315471)*x2165))+(((0.187545437253636)*cj4*r22))+((x2141*x2142))+((x2142*x2165))+pz+(((-1.0)*x2180))+(((0.0838945627463637)*r22))+(((-0.18234135315471)*x2141)));
evalcond[1]=((((-1.0)*x2126*x2177))+(((0.18234135315471)*r10*x2139))+((r11*x2139*x2171))+(((-0.216558867852667)*x2130*x2138))+(((-0.187545437253636)*r12*x2140))+(((-0.0838945627463637)*r12*sj0))+(((0.18234135315471)*r11*x2130))+(((-1.0)*r10*x2139*x2142))+(((-1.0)*x2173))+(((-1.0)*r11*x2130*x2142))+(((-1.0)*sj0*x2156)));
evalcond[2]=((((-1.0)*x2127*x2177))+(((0.18234135315471)*cj0*x2132))+(((-1.0)*r01*x2129*x2142))+(((-0.216558867852667)*x2129*x2161))+(((-0.0838945627463637)*cj0*r02))+((cj0*x2170*x2171))+x2173+(((-0.187545437253636)*cj0*x2147))+(((-1.0)*cj0*x2135))+(((0.18234135315471)*r01*x2129))+(((-1.0)*cj0*x2132*x2142)));
evalcond[3]=(((x2133*x2169))+((r21*x2130*x2137))+((r20*x2130*x2168))+((r20*x2137*x2139))+(((0.0648043305514941)*r20*x2139))+(((-1.0)*r12*x2136))+(((-1.0)*cj5*r10*x2175))+((cj3*x2138*x2144))+((sj0*x2180))+(((0.135720094919197)*x2143*x2169))+(((-1.0)*r11*x2144*x2164))+(((0.235073880801598)*r12*x2143))+((cj4*r12*x2136))+((sj3*x2154*x2155))+((x2159*x2175))+((r11*x2153*x2154))+(((0.135720094919197)*x2138*x2153))+(((-1.0)*r21*x2139*x2168))+((x2140*x2160))+((x2130*x2131))+(((-1.0)*sj0*x2162))+(((-1.0)*sj0*x2160))+((x2133*x2155)));
evalcond[4]=(((cj0*x2137*x2141))+((x2133*x2146))+(((0.135720094919197)*x2153*x2161))+((x2170*x2175))+((sj3*x2146*x2154))+(((0.135720094919197)*x2143*x2146))+(((0.235073880801598)*r02*x2143))+(((-1.0)*r01*x2144*x2164))+((sj3*x2132*x2154))+(((-1.0)*cj0*x2162))+(((-1.0)*cj0*x2160))+(((-1.0)*x2157*x2175))+((cj0*x2180))+(((0.135720094919197)*x2132*x2143))+(((0.0648043305514941)*cj0*x2141))+((r21*x2129*x2137))+(((-1.0)*x2158*x2179))+((x2152*x2160))+((x2136*x2147))+((x2132*x2133))+((x2129*x2131))+((r20*x2129*x2168))+(((-1.0)*r02*x2136)));
evalcond[5]=((((-1.0)*x2139*x2143*x2172))+((r20*x2130*x2175))+(((-1.0)*r20*sj3*x2139*x2154))+(((-1.0)*r21*x2130*x2133))+(((0.0185150129489311)*cj5*x2138))+(((0.0648043305514941)*x2155))+(((-1.0)*r22*x2136*x2140))+(((-1.0)*x2128))+(((-1.0)*r20*x2133*x2139))+(((-1.0)*x2151))+(((-1.0)*x2156))+((x2134*x2139*x2164))+(((-1.0)*x2159*x2168))+(((-1.0)*x2130*x2154*x2166))+(((-1.0)*x2130*x2134*x2143))+((x2137*x2155))+(((-0.235073880801598)*x2143*x2163))+(((-1.0)*sj0*x2177))+((x2136*x2163))+((cj5*x2150))+(((-1.0)*r21*x2139*x2175))+((x2137*x2169))+((cj4*x2151))+(((-1.0)*x2130*x2164*x2172)));
evalcond[6]=((((-1.0)*x2168*x2170))+((x2157*x2168))+(((-1.0)*cj0*x2133*x2141))+(((-0.0678600949192303)*sj3*x2141*x2152))+((r20*x2129*x2175))+(((-1.0)*x2135))+(((-1.0)*cj0*x2177))+(((-1.0)*x2129*x2134*x2143))+(((-1.0)*r21*x2129*x2133))+(((-0.135720094919197)*cj0*x2141*x2143))+(((0.0648043305514941)*x2146))+((cj0*sj5*x2134*x2164))+(((-1.0)*x2129*x2154*x2166))+(((0.0160344678271334)*x2147))+(((-1.0)*x2149))+(((-1.0)*r22*x2136*x2152))+(((-0.27144)*cj3*r21*sj5*x2152))+((x2137*x2146))+(((0.0648043305514941)*x2132))+(((-0.235073880801598)*x2143*x2167))+((x2136*x2167))+((x2132*x2137))+(((-1.0)*x2129*x2164*x2172))+(((0.0098)*sj0)));
evalcond[7]=((((-0.235073880801598)*x2129*x2138))+(((-0.0678600949192303)*cj0*r12))+(((-1.0)*x2148*x2178))+(((0.117537022603216)*x2178))+(((-1.0)*r01*x2139*x2168))+(((-1.0)*sj0*x2135))+((sj0*x2132*x2137))+(((0.235073880801598)*cj0*sj4*x2159))+(((-0.20357990508077)*r12*x2152))+(((0.0648043305514941)*r01*x2130))+((x2129*x2145))+((x2140*x2149))+(((-1.0)*x2181))+(((0.0098)*x2126))+(((0.0648043305514941)*sj0*x2132))+(((-1.0)*cj4*x2129*x2145))+(((0.0185150129489311)*x2130*x2161))+((r01*x2130*x2137))+(((-1.0)*sj0*x2149)));
evalcond[8]=((((-1.0)*cj0*x2159*x2168))+(((-0.0098)*x2127))+(((0.117537022603216)*r01*x2130))+(((-1.0)*cj0*x2156))+(((-1.0)*cj0*x2151))+(((0.117537022603216)*sj0*x2132))+(((-1.0)*r01*x2130*x2148))+(((0.0648043305514941)*x2178))+(((-0.20357990508077)*r02*x2140))+(((-0.117537022603216)*x2132*x2140))+((x2129*x2150))+(((0.0185150129489311)*x2129*x2138))+(((-0.235073880801598)*x2130*x2161))+((x2151*x2152))+(((-1.0)*x2181))+((x2129*x2176))+((x2137*x2178))+(((-0.0678600949192303)*r02*sj0))+(((0.235073880801598)*r01*x2174)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2182=((0.250000349687704)*sj1);
IkReal x2183=(cj1*cj4);
IkReal x2184=((0.749999650312296)*r22);
IkReal x2185=(cj4*sj1);
IkReal x2186=((0.749999650312296)*r02);
IkReal x2187=((0.250000349687704)*cj1);
IkReal x2188=((0.433012903784321)*r00*sj5);
IkReal x2189=((0.433012903784321)*r20*sj5);
IkReal x2190=((0.433012903784321)*cj5*r01);
IkReal x2191=((0.433012903784321)*cj5*r21);
IkReal x2192=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2193=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2194=((0.866025201892125)*r01*sj4*sj5);
IkReal x2195=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((r22*x2182))+((x2183*x2186))+((x2183*x2188))+((r20*x2192))+(((-1.0)*sj1*x2189))+((x2183*x2190))+(((-1.0)*sj1*x2191))+(((-1.0)*sj1*x2195))+((r02*x2187))+(((-1.0)*cj1*x2194))+(((-1.0)*cj1*x2190))+(((-1.0)*cj1*x2188))+((x2184*x2185))+((x2185*x2191))+((r00*x2193))+((x2185*x2189)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r22*x2187))+((sj1*x2194))+((sj1*x2190))+((x2183*x2184))+((x2183*x2189))+((sj1*x2188))+((r20*x2193))+((x2183*x2191))+(((-1.0)*x2185*x2188))+(((-1.0)*x2185*x2186))+(((-1.0)*x2185*x2190))+(((-1.0)*r02*x2182))+(((-1.0)*cj1*x2191))+(((-1.0)*cj1*x2195))+(((-1.0)*cj1*x2189))+(((-1.0)*r00*x2192)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r22*x2182))+((x2183*x2186))+((x2183*x2188))+((r20*x2192))+(((-1.0)*sj1*x2189))+((x2183*x2190))+(((-1.0)*sj1*x2191))+(((-1.0)*sj1*x2195))+((r02*x2187))+(((-1.0)*cj1*x2194))+(((-1.0)*cj1*x2190))+(((-1.0)*cj1*x2188))+((x2184*x2185))+((x2185*x2191))+((r00*x2193))+((x2185*x2189))))+IKsqr((((r22*x2187))+((sj1*x2194))+((sj1*x2190))+((x2183*x2184))+((x2183*x2189))+((sj1*x2188))+((r20*x2193))+((x2183*x2191))+(((-1.0)*x2185*x2188))+(((-1.0)*x2185*x2186))+(((-1.0)*x2185*x2190))+(((-1.0)*r02*x2182))+(((-1.0)*cj1*x2191))+(((-1.0)*cj1*x2195))+(((-1.0)*cj1*x2189))+(((-1.0)*r00*x2192))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r22*x2182))+((x2183*x2186))+((x2183*x2188))+((r20*x2192))+(((-1.0)*sj1*x2189))+((x2183*x2190))+(((-1.0)*sj1*x2191))+(((-1.0)*sj1*x2195))+((r02*x2187))+(((-1.0)*cj1*x2194))+(((-1.0)*cj1*x2190))+(((-1.0)*cj1*x2188))+((x2184*x2185))+((x2185*x2191))+((r00*x2193))+((x2185*x2189))), (((r22*x2187))+((sj1*x2194))+((sj1*x2190))+((x2183*x2184))+((x2183*x2189))+((sj1*x2188))+((r20*x2193))+((x2183*x2191))+(((-1.0)*x2185*x2188))+(((-1.0)*x2185*x2186))+(((-1.0)*x2185*x2190))+(((-1.0)*r02*x2182))+(((-1.0)*cj1*x2191))+(((-1.0)*cj1*x2195))+(((-1.0)*cj1*x2189))+(((-1.0)*r00*x2192))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2196=IKsin(j2);
IkReal x2197=IKcos(j2);
IkReal x2198=((0.749999650312296)*sj3);
IkReal x2199=(cj5*r01);
IkReal x2200=(r00*sj5);
IkReal x2201=(cj4*cj5);
IkReal x2202=((1.0)*cj3);
IkReal x2203=(r21*sj3);
IkReal x2204=(cj4*sj5);
IkReal x2205=(cj3*r21);
IkReal x2206=((0.500000349687582)*sj4);
IkReal x2207=((0.433012903784321)*r20);
IkReal x2208=(cj4*r22);
IkReal x2209=((0.433012903784321)*sj3);
IkReal x2210=((0.433012903784321)*cj4);
IkReal x2211=(r01*sj5);
IkReal x2212=(r20*sj5);
IkReal x2213=((0.0160344678271334)*r02);
IkReal x2214=(cj4*r02);
IkReal x2215=((0.00925751294893567)*cj4);
IkReal x2216=((0.0185150129489311)*sj4);
IkReal x2217=(r21*sj5);
IkReal x2218=(cj5*r21);
IkReal x2219=((0.866025201892125)*sj4);
IkReal x2220=(cj5*r20);
IkReal x2221=(cj5*r00);
IkReal x2222=((0.250000349687704)*sj3);
IkReal x2223=(cj1*x2197);
IkReal x2224=(sj1*x2196);
IkReal x2225=(cj1*x2196);
IkReal x2226=(sj1*x2197);
IkReal x2227=(x2224+x2223);
evalcond[0]=((((-1.0)*x2219*x2220))+(((-1.0)*x2204*x2207))+(((-0.250000349687704)*r22))+x2227+((x2217*x2219))+(((-0.749999650312296)*x2208))+(((-0.433012903784321)*r21*x2201))+(((0.433012903784321)*x2218))+((sj5*x2207)));
evalcond[1]=((((-1.0)*x2219*x2221))+(((-0.250000349687704)*r02))+x2225+(((-0.749999650312296)*x2214))+(((0.433012903784321)*x2199))+((x2211*x2219))+(((-1.0)*x2199*x2210))+(((-1.0)*x2226))+(((-1.0)*x2200*x2210))+(((0.433012903784321)*x2200)));
evalcond[2]=((((0.00925751294893567)*r21*x2201))+(((0.00925751294893567)*r20*x2204))+(((-0.27144)*x2223))+(((-0.27144)*x2224))+(((0.0648043305514941)*x2212))+(((0.0648043305514941)*x2218))+(((0.41)*cj1))+((x2216*x2220))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((-1.0)*x2216*x2217))+(((0.0160344678271334)*x2208)));
evalcond[3]=(((cj4*x2213))+(((-1.0)*x2213))+(((0.0648043305514941)*x2199))+(((0.0648043305514941)*x2200))+((x2200*x2215))+(((0.27144)*x2226))+(((-0.27144)*x2225))+((x2216*x2221))+(((-0.41)*sj1))+(((-1.0)*px))+((x2199*x2215))+(((-1.0)*x2211*x2216)));
evalcond[4]=(((x2198*x2200))+x2227+((cj3*r02*x2219))+((cj4*x2200*x2222))+((cj3*x2200*x2206))+((cj3*x2199*x2206))+(((-1.0)*r00*x2201*x2202))+((sj3*x2206*x2221))+((cj4*x2199*x2222))+(((-1.0)*sj3*x2206*x2211))+((x2198*x2199))+((x2209*x2214))+(((-1.0)*r02*x2209))+((cj3*r01*x2204)));
evalcond[5]=(((cj3*r22*x2219))+((x2198*x2212))+((x2198*x2218))+((cj3*x2206*x2212))+x2226+(((-1.0)*r22*x2209))+((x2204*x2205))+((sj3*x2206*x2220))+((r20*x2204*x2222))+(((-1.0)*x2225))+(((-1.0)*sj5*x2203*x2206))+(((-1.0)*r20*x2201*x2202))+((x2208*x2209))+(((0.250000349687704)*x2201*x2203))+((cj5*x2205*x2206)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2228=(r02*sj1);
IkReal x2229=(cj1*cj4);
IkReal x2230=((0.749999650312296)*r22);
IkReal x2231=(cj4*sj1);
IkReal x2232=((0.250000349687704)*r22);
IkReal x2233=((0.433012903784321)*r00*sj5);
IkReal x2234=((0.433012903784321)*r20*sj5);
IkReal x2235=((0.433012903784321)*cj5*r01);
IkReal x2236=((0.433012903784321)*cj5*r21);
IkReal x2237=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2238=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2239=((0.866025201892125)*r01*sj4*sj5);
IkReal x2240=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*sj1*x2240))+(((-0.749999650312296)*r02*x2229))+((sj1*x2232))+(((-1.0)*x2229*x2233))+(((-1.0)*x2229*x2235))+(((-1.0)*r00*x2238))+(((-1.0)*sj1*x2236))+(((-1.0)*sj1*x2234))+((r20*x2237))+((x2230*x2231))+((x2231*x2234))+((x2231*x2236))+(((-0.250000349687704)*cj1*r02))+((cj1*x2239))+((cj1*x2233))+((cj1*x2235)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.250000349687704)*x2228))+(((-1.0)*cj1*x2236))+(((-1.0)*cj1*x2234))+(((0.749999650312296)*cj4*x2228))+((x2229*x2234))+((x2229*x2236))+((x2229*x2230))+(((-1.0)*sj1*x2233))+(((-1.0)*sj1*x2239))+(((-1.0)*sj1*x2235))+((r20*x2238))+((x2231*x2235))+((x2231*x2233))+(((-1.0)*cj1*x2240))+((r00*x2237))+((cj1*x2232)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj1*x2240))+(((-0.749999650312296)*r02*x2229))+((sj1*x2232))+(((-1.0)*x2229*x2233))+(((-1.0)*x2229*x2235))+(((-1.0)*r00*x2238))+(((-1.0)*sj1*x2236))+(((-1.0)*sj1*x2234))+((r20*x2237))+((x2230*x2231))+((x2231*x2234))+((x2231*x2236))+(((-0.250000349687704)*cj1*r02))+((cj1*x2239))+((cj1*x2233))+((cj1*x2235))))+IKsqr(((((0.250000349687704)*x2228))+(((-1.0)*cj1*x2236))+(((-1.0)*cj1*x2234))+(((0.749999650312296)*cj4*x2228))+((x2229*x2234))+((x2229*x2236))+((x2229*x2230))+(((-1.0)*sj1*x2233))+(((-1.0)*sj1*x2239))+(((-1.0)*sj1*x2235))+((r20*x2238))+((x2231*x2235))+((x2231*x2233))+(((-1.0)*cj1*x2240))+((r00*x2237))+((cj1*x2232))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*sj1*x2240))+(((-0.749999650312296)*r02*x2229))+((sj1*x2232))+(((-1.0)*x2229*x2233))+(((-1.0)*x2229*x2235))+(((-1.0)*r00*x2238))+(((-1.0)*sj1*x2236))+(((-1.0)*sj1*x2234))+((r20*x2237))+((x2230*x2231))+((x2231*x2234))+((x2231*x2236))+(((-0.250000349687704)*cj1*r02))+((cj1*x2239))+((cj1*x2233))+((cj1*x2235))), ((((0.250000349687704)*x2228))+(((-1.0)*cj1*x2236))+(((-1.0)*cj1*x2234))+(((0.749999650312296)*cj4*x2228))+((x2229*x2234))+((x2229*x2236))+((x2229*x2230))+(((-1.0)*sj1*x2233))+(((-1.0)*sj1*x2239))+(((-1.0)*sj1*x2235))+((r20*x2238))+((x2231*x2235))+((x2231*x2233))+(((-1.0)*cj1*x2240))+((r00*x2237))+((cj1*x2232))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2241=IKcos(j2);
IkReal x2242=IKsin(j2);
IkReal x2243=((0.433012903784321)*sj3);
IkReal x2244=((0.749999650312296)*sj3);
IkReal x2245=(r00*sj5);
IkReal x2246=(cj4*cj5);
IkReal x2247=((1.0)*cj3);
IkReal x2248=(cj5*r01);
IkReal x2249=(r21*sj3);
IkReal x2250=(cj4*sj5);
IkReal x2251=(cj3*r21);
IkReal x2252=((0.500000349687582)*sj4);
IkReal x2253=((0.433012903784321)*r20);
IkReal x2254=(cj4*r22);
IkReal x2255=(r20*sj5);
IkReal x2256=((0.0160344678271334)*r02);
IkReal x2257=(cj4*r02);
IkReal x2258=(r01*sj5);
IkReal x2259=(cj5*r00);
IkReal x2260=((0.0185150129489311)*sj4);
IkReal x2261=(r21*sj5);
IkReal x2262=(cj5*r21);
IkReal x2263=((0.866025201892125)*sj4);
IkReal x2264=(cj5*r20);
IkReal x2265=((0.250000349687704)*sj3);
IkReal x2266=(sj1*x2241);
IkReal x2267=(cj1*x2241);
IkReal x2268=(sj1*x2242);
IkReal x2269=(cj1*x2242);
IkReal x2270=((1.0)*x2269);
evalcond[0]=((((-0.250000349687704)*r22))+x2268+x2267+(((-0.749999650312296)*x2254))+((x2261*x2263))+((sj5*x2253))+(((-1.0)*x2263*x2264))+(((-1.0)*x2250*x2253))+(((0.433012903784321)*x2262))+(((-0.433012903784321)*r21*x2246)));
evalcond[1]=((((-0.250000349687704)*r02))+((x2258*x2263))+(((-0.433012903784321)*cj4*x2245))+x2266+(((-0.433012903784321)*r01*x2246))+(((-0.749999650312296)*x2257))+(((-1.0)*x2259*x2263))+(((-1.0)*x2270))+(((0.433012903784321)*x2248))+(((0.433012903784321)*x2245)));
evalcond[2]=(((x2260*x2264))+(((-0.27144)*x2268))+(((-0.27144)*x2267))+(((0.0160344678271334)*x2254))+(((0.41)*cj1))+(((0.0648043305514941)*x2262))+(((-0.0160344678271334)*r22))+(((0.00925751294893567)*r20*x2250))+(((-1.0)*x2260*x2261))+(((-1.0)*pz))+(((0.00925751294893567)*r21*x2246))+(((0.0648043305514941)*x2255)));
evalcond[3]=((((-0.27144)*x2266))+((x2259*x2260))+(((0.0648043305514941)*x2245))+(((0.0648043305514941)*x2248))+(((0.00925751294893567)*r01*x2246))+(((0.41)*sj1))+(((0.27144)*x2269))+(((-1.0)*x2258*x2260))+(((-1.0)*x2256))+(((-1.0)*px))+(((0.00925751294893567)*cj4*x2245))+((cj4*x2256)));
evalcond[4]=((((0.250000349687704)*x2246*x2249))+((cj3*r22*x2263))+((sj3*x2252*x2264))+x2266+((cj5*x2251*x2252))+(((-1.0)*r20*x2246*x2247))+(((-1.0)*r22*x2243))+((r20*x2250*x2265))+((x2244*x2262))+((x2243*x2254))+(((-1.0)*sj5*x2249*x2252))+((cj3*x2252*x2255))+((x2244*x2255))+(((-1.0)*x2270))+((x2250*x2251)));
evalcond[5]=((((-1.0)*sj3*x2252*x2258))+(((-1.0)*r02*x2243))+((cj4*x2245*x2265))+((r01*x2246*x2265))+((x2243*x2257))+(((-1.0)*r00*x2246*x2247))+((cj3*r02*x2263))+((cj3*x2248*x2252))+((x2244*x2245))+((x2244*x2248))+((sj3*x2252*x2259))+((cj3*x2245*x2252))+(((-1.0)*x2267))+(((-1.0)*x2268))+((cj3*r01*x2250)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2271=((0.250000349687704)*r12);
IkReal x2272=((0.749999650312296)*cj4);
IkReal x2273=((0.433012903784321)*sj5);
IkReal x2274=(cj1*r10);
IkReal x2275=(cj1*r22);
IkReal x2276=(cj1*r20);
IkReal x2277=((0.866025201892125)*sj4);
IkReal x2278=(r20*sj1);
IkReal x2279=(r22*sj1);
IkReal x2280=(r10*sj1);
IkReal x2281=(r11*sj1);
IkReal x2282=((0.433012903784321)*cj5);
IkReal x2283=(r21*sj1);
IkReal x2284=(cj1*r21);
IkReal x2285=(cj1*r11);
IkReal x2286=(cj5*sj1*x2277);
IkReal x2287=(cj4*r21*x2282);
if( IKabs(((((-1.0)*x2282*x2283))+(((-1.0)*x2282*x2285))+((cj5*x2277*x2278))+(((-1.0)*sj5*x2277*x2283))+(((-1.0)*sj5*x2277*x2285))+((cj1*x2271))+(((-1.0)*x2273*x2274))+(((-1.0)*x2273*x2278))+((cj5*x2274*x2277))+((x2272*x2279))+((cj4*x2273*x2278))+((cj4*x2273*x2274))+((cj1*r12*x2272))+(((0.250000349687704)*x2279))+((cj4*x2282*x2283))+((cj4*x2282*x2285)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x2282*x2284))+((cj5*x2276*x2277))+(((-1.0)*sj5*x2277*x2284))+(((-1.0)*cj4*x2273*x2280))+((x2281*x2282))+(((-1.0)*cj4*x2281*x2282))+(((-1.0)*x2273*x2276))+(((-1.0)*r12*sj1*x2272))+((x2272*x2275))+((cj4*x2273*x2276))+(((-1.0)*sj1*x2271))+((x2273*x2280))+(((0.250000349687704)*x2275))+((cj4*x2282*x2284))+((sj5*x2277*x2281))+(((-1.0)*cj5*x2277*x2280)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x2282*x2283))+(((-1.0)*x2282*x2285))+((cj5*x2277*x2278))+(((-1.0)*sj5*x2277*x2283))+(((-1.0)*sj5*x2277*x2285))+((cj1*x2271))+(((-1.0)*x2273*x2274))+(((-1.0)*x2273*x2278))+((cj5*x2274*x2277))+((x2272*x2279))+((cj4*x2273*x2278))+((cj4*x2273*x2274))+((cj1*r12*x2272))+(((0.250000349687704)*x2279))+((cj4*x2282*x2283))+((cj4*x2282*x2285))))+IKsqr(((((-1.0)*x2282*x2284))+((cj5*x2276*x2277))+(((-1.0)*sj5*x2277*x2284))+(((-1.0)*cj4*x2273*x2280))+((x2281*x2282))+(((-1.0)*cj4*x2281*x2282))+(((-1.0)*x2273*x2276))+(((-1.0)*r12*sj1*x2272))+((x2272*x2275))+((cj4*x2273*x2276))+(((-1.0)*sj1*x2271))+((x2273*x2280))+(((0.250000349687704)*x2275))+((cj4*x2282*x2284))+((sj5*x2277*x2281))+(((-1.0)*cj5*x2277*x2280))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x2282*x2283))+(((-1.0)*x2282*x2285))+((cj5*x2277*x2278))+(((-1.0)*sj5*x2277*x2283))+(((-1.0)*sj5*x2277*x2285))+((cj1*x2271))+(((-1.0)*x2273*x2274))+(((-1.0)*x2273*x2278))+((cj5*x2274*x2277))+((x2272*x2279))+((cj4*x2273*x2278))+((cj4*x2273*x2274))+((cj1*r12*x2272))+(((0.250000349687704)*x2279))+((cj4*x2282*x2283))+((cj4*x2282*x2285))), ((((-1.0)*x2282*x2284))+((cj5*x2276*x2277))+(((-1.0)*sj5*x2277*x2284))+(((-1.0)*cj4*x2273*x2280))+((x2281*x2282))+(((-1.0)*cj4*x2281*x2282))+(((-1.0)*x2273*x2276))+(((-1.0)*r12*sj1*x2272))+((x2272*x2275))+((cj4*x2273*x2276))+(((-1.0)*sj1*x2271))+((x2273*x2280))+(((0.250000349687704)*x2275))+((cj4*x2282*x2284))+((sj5*x2277*x2281))+(((-1.0)*cj5*x2277*x2280))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2288=IKsin(j2);
IkReal x2289=IKcos(j2);
IkReal x2290=(cj5*r11);
IkReal x2291=((0.433012903784321)*cj4);
IkReal x2292=(r21*sj5);
IkReal x2293=((0.500000349687582)*sj4);
IkReal x2294=((0.749999650312296)*sj3);
IkReal x2295=(cj3*cj4);
IkReal x2296=(cj5*r10);
IkReal x2297=((0.0185150129489311)*sj4);
IkReal x2298=(r20*sj5);
IkReal x2299=(cj4*r22);
IkReal x2300=(r10*sj5);
IkReal x2301=(r22*sj3);
IkReal x2302=(r11*sj5);
IkReal x2303=((0.00925751294893567)*cj4);
IkReal x2304=(cj5*r21);
IkReal x2305=(r12*sj3);
IkReal x2306=(cj4*r12);
IkReal x2307=(cj5*r20);
IkReal x2308=((0.866025201892125)*sj4);
IkReal x2309=(cj1*x2289);
IkReal x2310=(sj1*x2288);
IkReal x2311=(cj1*x2288);
IkReal x2312=((0.250000349687704)*cj4*sj3);
IkReal x2313=(sj1*x2289);
IkReal x2314=(cj3*x2308);
IkReal x2315=(x2310+x2309);
evalcond[0]=((((-0.749999650312296)*x2299))+(((-0.250000349687704)*r22))+((x2292*x2308))+x2315+(((0.433012903784321)*x2298))+(((-1.0)*x2291*x2304))+(((-1.0)*x2291*x2298))+(((0.433012903784321)*x2304))+(((-1.0)*x2307*x2308)));
evalcond[1]=((((-1.0)*x2313))+(((-0.250000349687704)*r12))+x2311+(((0.433012903784321)*x2290))+(((-1.0)*x2296*x2308))+(((-1.0)*x2291*x2300))+(((-0.749999650312296)*x2306))+(((-1.0)*x2290*x2291))+(((0.433012903784321)*x2300))+((x2302*x2308)));
evalcond[2]=(((x2303*x2304))+(((-1.0)*x2292*x2297))+(((0.41)*cj1))+(((-0.27144)*x2309))+((x2298*x2303))+(((-0.0160344678271334)*r22))+((x2297*x2307))+(((0.0160344678271334)*x2299))+(((0.0648043305514941)*x2304))+(((-1.0)*pz))+(((0.0648043305514941)*x2298))+(((-0.27144)*x2310)));
evalcond[3]=(((x2296*x2297))+((x2300*x2303))+(((0.27144)*x2313))+(((-0.0160344678271334)*r12))+(((-1.0)*x2297*x2302))+((x2290*x2303))+(((-0.41)*sj1))+(((0.0648043305514941)*x2300))+(((-1.0)*py))+(((0.0648043305514941)*x2290))+(((-0.27144)*x2311))+(((0.0160344678271334)*x2306)));
evalcond[4]=(((x2300*x2312))+((sj3*x2293*x2296))+((cj3*x2293*x2300))+(((-0.433012903784321)*x2305))+x2315+((x2295*x2302))+((r12*x2314))+(((-1.0)*x2295*x2296))+(((-1.0)*sj3*x2293*x2302))+((cj3*x2290*x2293))+((x2291*x2305))+((x2290*x2312))+((x2294*x2300))+((x2290*x2294)));
evalcond[5]=((((-1.0)*x2311))+(((-1.0)*x2295*x2307))+((cj3*x2293*x2304))+(((-0.433012903784321)*x2301))+x2313+((x2304*x2312))+((r22*x2314))+((cj3*x2293*x2298))+(((-1.0)*sj3*x2292*x2293))+((x2291*x2301))+((x2292*x2295))+((x2294*x2304))+((x2294*x2298))+((sj3*x2293*x2307))+((x2298*x2312)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2316=((0.250000349687704)*r12);
IkReal x2317=((0.749999650312296)*cj4);
IkReal x2318=(cj1*r22);
IkReal x2319=((0.866025201892125)*sj4);
IkReal x2320=(cj1*r20);
IkReal x2321=(sj1*sj5);
IkReal x2322=((0.433012903784321)*r20);
IkReal x2323=((0.433012903784321)*sj5);
IkReal x2324=(cj1*r10);
IkReal x2325=(r22*sj1);
IkReal x2326=((0.433012903784321)*r10);
IkReal x2327=((0.433012903784321)*cj5);
IkReal x2328=(cj1*r21);
IkReal x2329=(cj1*r11);
IkReal x2330=(r11*sj1);
IkReal x2331=(cj1*cj4*x2323);
IkReal x2332=(cj5*sj1*x2319);
IkReal x2333=(cj4*r21*x2327);
if( IKabs(((((-1.0)*cj4*x2323*x2324))+(((-1.0)*x2321*x2322))+((x2317*x2325))+((sj5*x2319*x2329))+(((-1.0)*r21*x2319*x2321))+((cj4*x2321*x2322))+(((-1.0)*cj4*x2327*x2329))+((sj1*x2333))+((x2327*x2329))+(((-1.0)*r21*sj1*x2327))+(((-1.0)*cj1*r12*x2317))+(((-1.0)*cj1*x2316))+(((-1.0)*cj5*x2319*x2324))+((x2323*x2324))+((r20*x2332))+(((0.250000349687704)*x2325)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x2317*x2318))+(((-1.0)*x2321*x2326))+(((-1.0)*r11*x2319*x2321))+((cj4*x2320*x2323))+((r12*sj1*x2317))+(((-1.0)*x2320*x2323))+((cj4*x2321*x2326))+(((-1.0)*sj5*x2319*x2328))+((sj1*x2316))+((cj4*x2327*x2330))+(((-1.0)*x2327*x2328))+((cj4*x2327*x2328))+((cj5*x2319*x2320))+(((-1.0)*x2327*x2330))+(((0.250000349687704)*x2318))+((r10*x2332)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj4*x2323*x2324))+(((-1.0)*x2321*x2322))+((x2317*x2325))+((sj5*x2319*x2329))+(((-1.0)*r21*x2319*x2321))+((cj4*x2321*x2322))+(((-1.0)*cj4*x2327*x2329))+((sj1*x2333))+((x2327*x2329))+(((-1.0)*r21*sj1*x2327))+(((-1.0)*cj1*r12*x2317))+(((-1.0)*cj1*x2316))+(((-1.0)*cj5*x2319*x2324))+((x2323*x2324))+((r20*x2332))+(((0.250000349687704)*x2325))))+IKsqr((((x2317*x2318))+(((-1.0)*x2321*x2326))+(((-1.0)*r11*x2319*x2321))+((cj4*x2320*x2323))+((r12*sj1*x2317))+(((-1.0)*x2320*x2323))+((cj4*x2321*x2326))+(((-1.0)*sj5*x2319*x2328))+((sj1*x2316))+((cj4*x2327*x2330))+(((-1.0)*x2327*x2328))+((cj4*x2327*x2328))+((cj5*x2319*x2320))+(((-1.0)*x2327*x2330))+(((0.250000349687704)*x2318))+((r10*x2332))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj4*x2323*x2324))+(((-1.0)*x2321*x2322))+((x2317*x2325))+((sj5*x2319*x2329))+(((-1.0)*r21*x2319*x2321))+((cj4*x2321*x2322))+(((-1.0)*cj4*x2327*x2329))+((sj1*x2333))+((x2327*x2329))+(((-1.0)*r21*sj1*x2327))+(((-1.0)*cj1*r12*x2317))+(((-1.0)*cj1*x2316))+(((-1.0)*cj5*x2319*x2324))+((x2323*x2324))+((r20*x2332))+(((0.250000349687704)*x2325))), (((x2317*x2318))+(((-1.0)*x2321*x2326))+(((-1.0)*r11*x2319*x2321))+((cj4*x2320*x2323))+((r12*sj1*x2317))+(((-1.0)*x2320*x2323))+((cj4*x2321*x2326))+(((-1.0)*sj5*x2319*x2328))+((sj1*x2316))+((cj4*x2327*x2330))+(((-1.0)*x2327*x2328))+((cj4*x2327*x2328))+((cj5*x2319*x2320))+(((-1.0)*x2327*x2330))+(((0.250000349687704)*x2318))+((r10*x2332))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2334=IKcos(j2);
IkReal x2335=IKsin(j2);
IkReal x2336=(cj5*r11);
IkReal x2337=((0.433012903784321)*cj4);
IkReal x2338=(r21*sj5);
IkReal x2339=((0.500000349687582)*sj4);
IkReal x2340=((0.749999650312296)*sj3);
IkReal x2341=(cj3*cj4);
IkReal x2342=(cj5*r10);
IkReal x2343=((0.0185150129489311)*sj4);
IkReal x2344=(r20*sj5);
IkReal x2345=(cj4*r22);
IkReal x2346=(r10*sj5);
IkReal x2347=(r12*sj3);
IkReal x2348=(r11*sj5);
IkReal x2349=(r22*sj3);
IkReal x2350=((0.27144)*sj1);
IkReal x2351=((0.00925751294893567)*cj4);
IkReal x2352=(cj5*r20);
IkReal x2353=(cj5*r21);
IkReal x2354=(cj4*r12);
IkReal x2355=((0.866025201892125)*sj4);
IkReal x2356=(sj1*x2334);
IkReal x2357=(cj1*x2334);
IkReal x2358=(cj1*x2335);
IkReal x2359=((0.250000349687704)*cj4*sj3);
IkReal x2360=(cj3*x2355);
IkReal x2361=(sj1*x2335);
IkReal x2362=((1.0)*x2358);
evalcond[0]=((((-1.0)*x2337*x2344))+(((-0.250000349687704)*r22))+x2361+x2357+(((0.433012903784321)*x2353))+(((0.433012903784321)*x2344))+((x2338*x2355))+(((-1.0)*x2352*x2355))+(((-0.749999650312296)*x2345))+(((-1.0)*x2337*x2353)));
evalcond[1]=((((-1.0)*x2337*x2346))+(((-0.250000349687704)*r12))+(((0.433012903784321)*x2336))+x2356+(((-1.0)*x2362))+((x2348*x2355))+(((0.433012903784321)*x2346))+(((-0.749999650312296)*x2354))+(((-1.0)*x2342*x2355))+(((-1.0)*x2336*x2337)));
evalcond[2]=((((-0.27144)*x2357))+(((0.41)*cj1))+(((-1.0)*x2335*x2350))+(((-0.0160344678271334)*r22))+(((0.0160344678271334)*x2345))+(((-1.0)*pz))+((x2351*x2353))+((x2344*x2351))+((x2343*x2352))+(((0.0648043305514941)*x2353))+(((0.0648043305514941)*x2344))+(((-1.0)*x2338*x2343)));
evalcond[3]=(((x2346*x2351))+((x2336*x2351))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((-1.0)*x2334*x2350))+(((0.0160344678271334)*x2354))+(((-1.0)*py))+(((0.27144)*x2358))+(((-1.0)*x2343*x2348))+(((0.0648043305514941)*x2336))+((x2342*x2343))+(((0.0648043305514941)*x2346)));
evalcond[4]=((((-1.0)*sj3*x2338*x2339))+((x2340*x2344))+x2356+(((-1.0)*x2362))+((x2340*x2353))+((x2353*x2359))+(((-1.0)*x2341*x2352))+(((-0.433012903784321)*x2349))+((cj3*x2339*x2344))+((cj3*x2339*x2353))+((x2338*x2341))+((r22*x2360))+((sj3*x2339*x2352))+((x2337*x2349))+((x2344*x2359)));
evalcond[5]=(((x2346*x2359))+((x2336*x2359))+((r12*x2360))+((x2340*x2346))+(((-1.0)*sj3*x2339*x2348))+(((-1.0)*x2357))+((x2341*x2348))+(((-1.0)*x2341*x2342))+(((-1.0)*x2361))+(((-0.433012903784321)*x2347))+((cj3*x2339*x2346))+((x2337*x2347))+((sj3*x2339*x2342))+((cj3*x2336*x2339))+((x2336*x2340)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2363=(cj4*sj1);
IkReal x2364=((0.433012903784321)*sj0);
IkReal x2365=(cj5*r21);
IkReal x2366=(cj1*r12);
IkReal x2367=(r20*sj5);
IkReal x2368=(r20*sj0);
IkReal x2369=(r10*sj1);
IkReal x2370=((0.749999650312296)*cj4);
IkReal x2371=(r21*sj0);
IkReal x2372=((0.433012903784321)*sj5);
IkReal x2373=(cj1*cj4);
IkReal x2374=(r22*sj0);
IkReal x2375=((0.250000349687704)*x2374);
IkReal x2376=((0.866025201892125)*cj5*sj4);
IkReal x2377=((0.433012903784321)*cj5*r11);
IkReal x2378=(cj1*r10*x2372);
IkReal x2379=((0.866025201892125)*sj1*sj4*sj5);
IkReal x2380=((0.866025201892125)*cj1*sj4*sj5);
CheckValue<IkReal> x2381=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x2381.valid){
continue;
}
CheckValue<IkReal> x2382 = IKatan2WithCheck(IkReal((((x2373*x2377))+((r10*x2372*x2373))+(((0.749999650312296)*x2363*x2374))+((x2363*x2364*x2365))+((x2363*x2364*x2367))+((sj1*x2375))+(((-1.0)*x2378))+((x2366*x2370))+((cj1*r10*x2376))+(((0.250000349687704)*x2366))+((sj1*x2368*x2376))+(((-1.0)*sj1*x2364*x2365))+(((-1.0)*sj1*x2364*x2367))+(((-1.0)*x2371*x2379))+(((-1.0)*cj1*x2377))+(((-1.0)*r11*x2380)))),IkReal(((((-0.749999650312296)*r12*x2363))+((cj1*x2370*x2374))+(((-0.250000349687704)*r12*sj1))+((cj1*x2368*x2376))+((sj1*x2377))+(((-1.0)*r10*x2363*x2372))+(((-1.0)*x2369*x2376))+((cj1*x2375))+((x2364*x2365*x2373))+((x2364*x2367*x2373))+(((-1.0)*cj1*x2364*x2367))+(((-1.0)*cj1*x2364*x2365))+(((-1.0)*x2363*x2377))+(((-1.0)*x2371*x2380))+((x2369*x2372))+((r11*x2379)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2382.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2381.value)))+(x2382.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x2383=IKsin(j2);
IkReal x2384=IKcos(j2);
IkReal x2385=(cj4*sj5);
IkReal x2386=(cj3*r21);
IkReal x2387=((0.433012903784321)*r20);
IkReal x2388=((0.749999650312296)*cj4);
IkReal x2389=(cj4*cj5);
IkReal x2390=((1.0)*cj3);
IkReal x2391=((0.433012903784321)*r01);
IkReal x2392=(sj4*sj5);
IkReal x2393=((0.749999650312296)*sj3);
IkReal x2394=(r10*sj5);
IkReal x2395=((0.500000349687582)*sj3);
IkReal x2396=(cj0*sj1);
IkReal x2397=((0.500000349687582)*cj3);
IkReal x2398=((0.0160344678271334)*r22);
IkReal x2399=(r20*sj3);
IkReal x2400=(r00*sj5);
IkReal x2401=(cj3*r11);
IkReal x2402=((0.0160344678271334)*r12);
IkReal x2403=((0.433012903784321)*r11);
IkReal x2404=(cj5*r11);
IkReal x2405=(r10*sj3);
IkReal x2406=(r00*sj3);
IkReal x2407=((0.433012903784321)*sj3);
IkReal x2408=(cj5*sj4);
IkReal x2409=(r20*sj5);
IkReal x2410=((0.433012903784321)*r21);
IkReal x2411=(sj0*sj1);
IkReal x2412=(cj3*r01);
IkReal x2413=(cj5*r21);
IkReal x2414=((0.0160344678271334)*r02);
IkReal x2415=(cj5*r01);
IkReal x2416=((0.250000349687704)*sj3);
IkReal x2417=(cj1*x2383);
IkReal x2418=((0.500000349687582)*x2408);
IkReal x2419=((0.27144)*x2384);
IkReal x2420=(cj4*x2407);
IkReal x2421=(sj1*x2383);
IkReal x2422=((0.866025201892125)*cj3*sj4);
IkReal x2423=(cj1*x2384);
IkReal x2424=((1.0)*x2384);
evalcond[0]=(x2421+x2423+(((-0.250000349687704)*r22))+(((-1.0)*r22*x2388))+((sj5*x2387))+((cj5*x2410))+(((0.866025201892125)*r21*x2392))+(((-1.0)*x2389*x2410))+(((-1.0)*x2385*x2387))+(((-0.866025201892125)*r20*x2408)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*r02*x2388))+(((-1.0)*x2396*x2424))+(((0.866025201892125)*r01*x2392))+(((-1.0)*x2389*x2391))+((cj0*x2417))+(((-0.433012903784321)*r00*x2385))+(((-0.866025201892125)*r00*x2408))+(((0.433012903784321)*x2400))+((cj5*x2391)));
evalcond[2]=((((-1.0)*r12*x2388))+(((-0.250000349687704)*r12))+(((-1.0)*x2389*x2403))+((sj0*x2417))+(((0.433012903784321)*x2394))+(((0.866025201892125)*r11*x2392))+(((-1.0)*x2411*x2424))+(((-0.433012903784321)*r10*x2385))+((cj5*x2403))+(((-0.866025201892125)*r10*x2408)));
evalcond[3]=((((0.0185150129489311)*r20*x2408))+(((0.00925751294893567)*r20*x2385))+(((0.41)*cj1))+(((-0.27144)*x2421))+(((0.00925751294893567)*r21*x2389))+(((-1.0)*pz))+(((-0.0185150129489311)*r21*x2392))+(((-1.0)*x2398))+(((-1.0)*cj1*x2419))+(((0.0648043305514941)*x2413))+(((0.0648043305514941)*x2409))+((cj4*x2398)));
evalcond[4]=((((-1.0)*px))+(((-0.41)*x2396))+(((-0.0185150129489311)*r01*x2392))+(((-1.0)*x2414))+(((-0.27144)*cj0*x2417))+(((0.00925751294893567)*r00*x2385))+((cj4*x2414))+(((0.00925751294893567)*r01*x2389))+(((0.0648043305514941)*x2415))+((x2396*x2419))+(((0.0185150129489311)*r00*x2408))+(((0.0648043305514941)*x2400))+(((0.0098)*sj0)));
evalcond[5]=((((-0.41)*x2411))+(((0.0648043305514941)*x2394))+(((0.00925751294893567)*r10*x2385))+(((-1.0)*x2402))+(((-0.27144)*sj0*x2417))+(((0.0185150129489311)*r10*x2408))+(((-1.0)*py))+((x2411*x2419))+(((-0.0185150129489311)*r11*x2392))+((cj4*x2402))+(((-0.0098)*cj0))+(((0.0648043305514941)*x2404))+(((0.00925751294893567)*r11*x2389)));
evalcond[6]=(((x2386*x2418))+((r22*x2422))+((r22*x2420))+((r20*x2395*x2408))+(((-1.0)*r20*x2389*x2390))+((x2385*x2386))+(((-1.0)*x2417))+((x2393*x2409))+(((-1.0)*r21*x2392*x2395))+((r20*x2392*x2397))+(((0.250000349687704)*x2385*x2399))+((r21*x2389*x2416))+((sj1*x2384))+(((-1.0)*r22*x2407))+((x2393*x2413)));
evalcond[7]=((((-1.0)*r00*x2389*x2390))+((r01*x2397*x2408))+((x2393*x2400))+(((-1.0)*r02*x2407))+((x2383*x2396))+((r00*x2395*x2408))+((r01*x2389*x2416))+(((0.250000349687704)*x2385*x2406))+((x2385*x2412))+((cj0*x2423))+((r02*x2420))+((r02*x2422))+(((-1.0)*r01*x2392*x2395))+((r00*x2392*x2397))+((x2393*x2415)));
evalcond[8]=(((x2385*x2401))+((r10*x2395*x2408))+((r10*x2392*x2397))+(((-1.0)*r10*x2389*x2390))+((x2393*x2404))+((x2393*x2394))+((sj0*x2423))+((r11*x2389*x2416))+((sj4*x2397*x2404))+(((0.250000349687704)*x2385*x2405))+(((-1.0)*r11*x2392*x2395))+((r12*x2422))+((r12*x2420))+((x2383*x2411))+(((-1.0)*r12*x2407)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2425=(cj0*r20);
IkReal x2426=(cj1*r00);
IkReal x2427=(r02*sj1);
IkReal x2428=(r00*sj1);
IkReal x2429=((0.433012903784321)*sj5);
IkReal x2430=(cj4*sj1);
IkReal x2431=((0.749999650312296)*cj4);
IkReal x2432=(cj0*r22);
IkReal x2433=(r01*sj1);
IkReal x2434=(cj1*cj4);
IkReal x2435=(cj0*r21);
IkReal x2436=(cj1*r02);
IkReal x2437=((0.866025201892125)*cj5*sj4);
IkReal x2438=((0.866025201892125)*sj4*sj5);
IkReal x2439=((0.433012903784321)*cj5*r01);
IkReal x2440=((0.433012903784321)*cj5*x2435);
CheckValue<IkReal> x2441=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x2441.valid){
continue;
}
CheckValue<IkReal> x2442 = IKatan2WithCheck(IkReal(((((-1.0)*sj1*x2440))+(((0.250000349687704)*x2436))+(((0.250000349687704)*sj1*x2432))+((x2430*x2440))+(((-1.0)*sj1*x2435*x2438))+(((-1.0)*cj1*r01*x2438))+((x2425*x2429*x2430))+((x2431*x2436))+(((-1.0)*cj1*x2439))+(((-1.0)*sj1*x2425*x2429))+((x2426*x2437))+(((0.749999650312296)*x2430*x2432))+(((-1.0)*x2426*x2429))+((cj4*x2426*x2429))+((x2434*x2439))+((sj1*x2425*x2437)))),IkReal(((((-0.250000349687704)*x2427))+(((-1.0)*cj4*x2428*x2429))+((cj1*x2425*x2437))+(((-1.0)*x2430*x2439))+(((0.433012903784321)*cj5*x2433))+(((-1.0)*x2427*x2431))+((x2425*x2429*x2434))+(((0.250000349687704)*cj1*x2432))+((x2434*x2440))+((x2428*x2429))+(((-1.0)*x2428*x2437))+(((-1.0)*cj1*x2425*x2429))+(((-1.0)*cj1*x2435*x2438))+((x2433*x2438))+((cj1*x2431*x2432))+(((-1.0)*cj1*x2440)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2442.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2441.value)))+(x2442.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x2443=IKsin(j2);
IkReal x2444=IKcos(j2);
IkReal x2445=(cj4*sj5);
IkReal x2446=(cj3*r21);
IkReal x2447=((0.433012903784321)*r20);
IkReal x2448=((0.749999650312296)*cj4);
IkReal x2449=(cj4*cj5);
IkReal x2450=((1.0)*cj3);
IkReal x2451=((0.433012903784321)*r01);
IkReal x2452=(sj4*sj5);
IkReal x2453=((0.749999650312296)*sj3);
IkReal x2454=(r10*sj5);
IkReal x2455=((0.500000349687582)*sj3);
IkReal x2456=(cj0*sj1);
IkReal x2457=((0.500000349687582)*cj3);
IkReal x2458=((0.0160344678271334)*r22);
IkReal x2459=(r20*sj3);
IkReal x2460=(r00*sj5);
IkReal x2461=(cj3*r11);
IkReal x2462=((0.0160344678271334)*r12);
IkReal x2463=((0.433012903784321)*r11);
IkReal x2464=(cj5*r11);
IkReal x2465=(r10*sj3);
IkReal x2466=(r00*sj3);
IkReal x2467=((0.433012903784321)*sj3);
IkReal x2468=(cj5*sj4);
IkReal x2469=(r20*sj5);
IkReal x2470=((0.433012903784321)*r21);
IkReal x2471=(sj0*sj1);
IkReal x2472=(cj3*r01);
IkReal x2473=(cj5*r21);
IkReal x2474=((0.0160344678271334)*r02);
IkReal x2475=(cj5*r01);
IkReal x2476=((0.250000349687704)*sj3);
IkReal x2477=(cj1*x2443);
IkReal x2478=((0.500000349687582)*x2468);
IkReal x2479=((0.27144)*x2444);
IkReal x2480=(cj4*x2467);
IkReal x2481=(sj1*x2443);
IkReal x2482=((0.866025201892125)*cj3*sj4);
IkReal x2483=(cj1*x2444);
IkReal x2484=((1.0)*x2444);
evalcond[0]=(((sj5*x2447))+x2483+x2481+(((-0.250000349687704)*r22))+(((-1.0)*x2445*x2447))+((cj5*x2470))+(((0.866025201892125)*r21*x2452))+(((-1.0)*r22*x2448))+(((-1.0)*x2449*x2470))+(((-0.866025201892125)*r20*x2468)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-0.433012903784321)*r00*x2445))+(((-1.0)*x2456*x2484))+(((0.866025201892125)*r01*x2452))+((cj5*x2451))+(((-1.0)*x2449*x2451))+((cj0*x2477))+(((0.433012903784321)*x2460))+(((-0.866025201892125)*r00*x2468))+(((-1.0)*r02*x2448)));
evalcond[2]=((((-0.250000349687704)*r12))+(((0.433012903784321)*x2454))+(((-1.0)*x2449*x2463))+(((0.866025201892125)*r11*x2452))+((sj0*x2477))+(((-1.0)*r12*x2448))+((cj5*x2463))+(((-0.433012903784321)*r10*x2445))+(((-0.866025201892125)*r10*x2468))+(((-1.0)*x2471*x2484)));
evalcond[3]=((((0.0185150129489311)*r20*x2468))+(((-0.0185150129489311)*r21*x2452))+(((-0.27144)*x2481))+(((0.0648043305514941)*x2469))+(((0.41)*cj1))+((cj4*x2458))+(((-1.0)*pz))+(((0.00925751294893567)*r21*x2449))+(((0.0648043305514941)*x2473))+(((0.00925751294893567)*r20*x2445))+(((-1.0)*x2458))+(((-1.0)*cj1*x2479)));
evalcond[4]=((((0.00925751294893567)*r00*x2445))+((x2456*x2479))+(((0.0648043305514941)*x2460))+(((0.0185150129489311)*r00*x2468))+(((-1.0)*x2474))+((cj4*x2474))+(((-1.0)*px))+(((0.0648043305514941)*x2475))+(((-0.0185150129489311)*r01*x2452))+(((-0.27144)*cj0*x2477))+(((-0.41)*x2456))+(((0.0098)*sj0))+(((0.00925751294893567)*r01*x2449)));
evalcond[5]=(((x2471*x2479))+(((0.0185150129489311)*r10*x2468))+(((0.00925751294893567)*r11*x2449))+(((-0.27144)*sj0*x2477))+(((0.0648043305514941)*x2464))+(((-1.0)*py))+(((0.0648043305514941)*x2454))+(((-0.0185150129489311)*r11*x2452))+((cj4*x2462))+(((-1.0)*x2462))+(((0.00925751294893567)*r10*x2445))+(((-0.0098)*cj0))+(((-0.41)*x2471)));
evalcond[6]=((((-1.0)*r21*x2452*x2455))+((x2446*x2478))+(((0.250000349687704)*x2445*x2459))+(((-1.0)*r22*x2467))+((sj1*x2444))+((r22*x2482))+((r22*x2480))+((x2453*x2469))+(((-1.0)*x2477))+((x2453*x2473))+(((-1.0)*r20*x2449*x2450))+((r21*x2449*x2476))+((r20*x2455*x2468))+((x2445*x2446))+((r20*x2452*x2457)));
evalcond[7]=(((r01*x2449*x2476))+((r02*x2480))+((r02*x2482))+((r01*x2457*x2468))+(((0.250000349687704)*x2445*x2466))+((x2443*x2456))+((x2453*x2460))+((x2445*x2472))+((x2453*x2475))+((r00*x2455*x2468))+(((-1.0)*r02*x2467))+((cj0*x2483))+((r00*x2452*x2457))+(((-1.0)*r01*x2452*x2455))+(((-1.0)*r00*x2449*x2450)));
evalcond[8]=(((x2443*x2471))+((sj4*x2457*x2464))+((sj0*x2483))+(((-1.0)*r12*x2467))+(((0.250000349687704)*x2445*x2465))+((x2453*x2454))+((x2453*x2464))+((r10*x2452*x2457))+(((-1.0)*r11*x2452*x2455))+((x2445*x2461))+((r10*x2455*x2468))+((r12*x2482))+((r12*x2480))+((r11*x2449*x2476))+(((-1.0)*r10*x2449*x2450)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2485=((0.26409636501044)*cj4);
IkReal x2486=(r20*sj5);
IkReal x2487=(cj5*r21);
IkReal x2488=(r10*sj5);
IkReal x2489=(cj5*r11);
IkReal x2490=((0.528192360616262)*sj4);
IkReal x2491=((0.18234135315471)*sj0);
IkReal x2492=(r12*sj0);
IkReal x2493=((0.10827950965428)*cj4*sj0);
IkReal x2494=((0.216558867852667)*sj0*sj4);
CheckValue<IkReal> x2495=IKPowWithIntegerCheck(sj0,-2);
if(!x2495.valid){
continue;
}
if( IKabs(((2.4390243902439)*(x2495.value)*((((x2488*x2491))+(((-0.0098)*cj0*sj0))+(((-1.0)*cj5*r10*x2494))+(((-1.0)*x2489*x2493))+(((-1.0)*x2488*x2493))+(((-1.0)*py*sj0))+((r11*sj5*x2494))+(((-0.0838945627463637)*x2492))+(((-0.187545437253636)*cj4*x2492))+((x2489*x2491)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r21*sj5*x2490))+((x2485*x2487))+((x2485*x2486))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+((cj5*r20*x2490))+(((-0.444735007694415)*x2487))+(((-0.444735007694415)*x2486))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((2.4390243902439)*(x2495.value)*((((x2488*x2491))+(((-0.0098)*cj0*sj0))+(((-1.0)*cj5*r10*x2494))+(((-1.0)*x2489*x2493))+(((-1.0)*x2488*x2493))+(((-1.0)*py*sj0))+((r11*sj5*x2494))+(((-0.0838945627463637)*x2492))+(((-0.187545437253636)*cj4*x2492))+((x2489*x2491))))))+IKsqr(((((-1.0)*r21*sj5*x2490))+((x2485*x2487))+((x2485*x2486))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+((cj5*r20*x2490))+(((-0.444735007694415)*x2487))+(((-0.444735007694415)*x2486))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((2.4390243902439)*(x2495.value)*((((x2488*x2491))+(((-0.0098)*cj0*sj0))+(((-1.0)*cj5*r10*x2494))+(((-1.0)*x2489*x2493))+(((-1.0)*x2488*x2493))+(((-1.0)*py*sj0))+((r11*sj5*x2494))+(((-0.0838945627463637)*x2492))+(((-0.187545437253636)*cj4*x2492))+((x2489*x2491))))), ((((-1.0)*r21*sj5*x2490))+((x2485*x2487))+((x2485*x2486))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+((cj5*r20*x2490))+(((-0.444735007694415)*x2487))+(((-0.444735007694415)*x2486))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x2496=IKsin(j1);
IkReal x2497=IKcos(j1);
IkReal x2498=sj0*sj0;
IkReal x2499=cj0*cj0;
IkReal x2500=((0.0098)*cj0);
IkReal x2501=(cj0*cj5);
IkReal x2502=(cj5*sj0);
IkReal x2503=((0.0648043305514941)*r21);
IkReal x2504=(r00*sj5);
IkReal x2505=((0.20357990508077)*sj3);
IkReal x2506=((0.135720094919197)*r21);
IkReal x2507=((1.0)*px);
IkReal x2508=((0.117537022603216)*sj3);
IkReal x2509=((0.00925751294893567)*cj4);
IkReal x2510=(r10*sj4);
IkReal x2511=(sj0*sj5);
IkReal x2512=(cj4*sj0);
IkReal x2513=(r20*sj5);
IkReal x2514=((0.10827950965428)*cj4);
IkReal x2515=(cj3*sj4);
IkReal x2516=((0.135720094919197)*sj5);
IkReal x2517=((0.117537022603216)*r11);
IkReal x2518=(cj5*r01);
IkReal x2519=(cj4*r02);
IkReal x2520=((0.117537022603216)*cj4);
IkReal x2521=((0.0160344678271334)*r02);
IkReal x2522=((0.0648043305514941)*r11);
IkReal x2523=((0.0160344678271334)*r12);
IkReal x2524=(cj0*cj4);
IkReal x2525=(cj5*sj3);
IkReal x2526=((0.0678600949192303)*cj4);
IkReal x2527=(r10*sj5);
IkReal x2528=((1.0)*py);
IkReal x2529=(cj5*r00);
IkReal x2530=(cj0*r21);
IkReal x2531=(r11*sj5);
IkReal x2532=((0.0160344678271334)*r22);
IkReal x2533=(r00*sj4);
IkReal x2534=((1.0)*pz);
IkReal x2535=(r22*sj0);
IkReal x2536=(sj3*sj4);
IkReal x2537=(cj5*r21);
IkReal x2538=(r21*sj3);
IkReal x2539=(cj0*r22);
IkReal x2540=((0.0185150129489311)*sj4);
IkReal x2541=(cj5*r11);
IkReal x2542=(r01*sj5);
IkReal x2543=((0.216558867852667)*sj4);
IkReal x2544=((0.135720094919197)*r20);
IkReal x2545=(sj0*x2500);
IkReal x2546=(sj4*x2511);
IkReal x2547=((0.27144)*cj3*cj4);
IkReal x2548=(r11*x2509);
IkReal x2549=((0.41)*x2496);
IkReal x2550=(cj0*x2527);
IkReal x2551=(sj5*x2540);
IkReal x2552=((0.41)*x2497);
IkReal x2553=(cj0*sj0*x2549);
evalcond[0]=(((cj5*r20*x2543))+(((-0.18234135315471)*x2513))+(((-0.18234135315471)*x2537))+(((0.187545437253636)*cj4*r22))+(((-1.0)*r21*sj5*x2543))+pz+((x2513*x2514))+(((-1.0)*x2552))+(((0.0838945627463637)*r22))+((x2514*x2537)));
evalcond[1]=((((-1.0)*sj0*x2528))+((r11*x2511*x2543))+(((-0.216558867852667)*x2502*x2510))+(((-1.0)*r10*x2511*x2514))+(((-0.187545437253636)*r12*x2512))+(((0.18234135315471)*r11*x2502))+(((0.18234135315471)*r10*x2511))+(((-0.0838945627463637)*r12*sj0))+(((-1.0)*x2545))+(((-1.0)*x2498*x2549))+(((-1.0)*r11*x2502*x2514)));
evalcond[2]=((((-1.0)*r01*x2501*x2514))+x2545+(((-1.0)*cj0*x2504*x2514))+(((-0.0838945627463637)*cj0*r02))+(((0.18234135315471)*r01*x2501))+(((-1.0)*x2499*x2549))+(((-0.187545437253636)*cj0*x2519))+(((0.18234135315471)*cj0*x2504))+(((-0.216558867852667)*x2501*x2533))+(((-1.0)*cj0*x2507))+((cj0*x2542*x2543)));
evalcond[3]=((((0.235073880801598)*r12*x2515))+(((-1.0)*r11*x2516*x2536))+((r20*x2502*x2540))+((sj3*x2526*x2527))+(((-1.0)*r12*x2508))+(((-1.0)*r21*x2511*x2540))+((x2512*x2532))+(((-1.0)*sj0*x2532))+(((-1.0)*sj0*x2534))+((r11*x2525*x2526))+((r21*x2502*x2509))+(((-1.0)*cj5*r10*x2547))+((r20*x2509*x2511))+((x2505*x2527))+((cj3*x2510*x2516))+(((0.135720094919197)*x2510*x2525))+((sj0*x2552))+((x2505*x2541))+(((0.135720094919197)*x2515*x2541))+((x2531*x2547))+(((0.0648043305514941)*r20*x2511))+((cj4*r12*x2508))+((x2502*x2503)));
evalcond[4]=(((x2504*x2505))+(((-1.0)*x2530*x2551))+(((0.135720094919197)*x2525*x2533))+(((-1.0)*r02*x2508))+((sj3*x2518*x2526))+((x2501*x2503))+((x2505*x2518))+(((0.0648043305514941)*cj0*x2513))+(((-1.0)*x2529*x2547))+(((0.235073880801598)*r02*x2515))+((cj0*x2509*x2513))+((x2524*x2532))+(((0.135720094919197)*x2515*x2518))+(((-1.0)*r01*x2516*x2536))+((x2542*x2547))+(((-1.0)*cj0*x2532))+(((-1.0)*cj0*x2534))+((r21*x2501*x2509))+((sj3*x2504*x2526))+((cj0*x2552))+((x2508*x2519))+(((0.135720094919197)*x2504*x2515))+((r20*x2501*x2540)));
evalcond[5]=((((-1.0)*r22*x2508*x2512))+(((-1.0)*x2531*x2540))+(((-1.0)*x2500))+(((0.0648043305514941)*x2527))+(((-1.0)*sj0*x2549))+(((-1.0)*x2511*x2515*x2544))+((r20*x2502*x2547))+(((-1.0)*x2502*x2526*x2538))+(((-1.0)*r21*x2511*x2547))+((x2506*x2511*x2536))+((cj5*x2522))+(((0.0185150129489311)*cj5*x2510))+((cj4*x2523))+(((-1.0)*r20*x2505*x2511))+((x2509*x2527))+(((-1.0)*x2502*x2506*x2515))+(((-0.235073880801598)*x2515*x2535))+((x2509*x2541))+((x2508*x2535))+(((-1.0)*x2523))+(((-1.0)*x2528))+(((-1.0)*r20*sj3*x2511*x2526))+(((-1.0)*r21*x2502*x2505))+(((-1.0)*x2502*x2536*x2544)));
evalcond[6]=(((x2504*x2509))+(((-1.0)*x2507))+(((-0.135720094919197)*cj0*x2513*x2515))+(((-1.0)*r21*x2501*x2505))+((cj0*sj5*x2506*x2536))+((x2529*x2540))+(((-1.0)*cj0*x2549))+(((0.0160344678271334)*x2519))+(((-1.0)*x2501*x2536*x2544))+(((-0.27144)*cj3*r21*sj5*x2524))+(((-0.0678600949192303)*sj3*x2513*x2524))+(((-1.0)*cj0*x2505*x2513))+(((-1.0)*x2501*x2526*x2538))+(((0.0648043305514941)*x2504))+(((-1.0)*r22*x2508*x2524))+(((-1.0)*x2501*x2506*x2515))+(((-0.235073880801598)*x2515*x2539))+(((-1.0)*x2540*x2542))+((x2508*x2539))+(((0.0098)*sj0))+((x2509*x2518))+((r20*x2501*x2547))+(((-1.0)*x2521))+(((0.0648043305514941)*x2518)));
evalcond[7]=((((-1.0)*sj0*x2521))+(((0.0648043305514941)*r01*x2502))+(((0.235073880801598)*cj0*sj4*x2531))+(((-0.0678600949192303)*cj0*r12))+(((-1.0)*x2520*x2550))+(((-0.20357990508077)*r12*x2524))+(((0.0648043305514941)*sj0*x2504))+(((0.0185150129489311)*x2502*x2533))+((x2501*x2517))+(((0.0098)*x2498))+(((-0.235073880801598)*x2501*x2510))+((r01*x2502*x2509))+((sj0*x2504*x2509))+(((-1.0)*x2553))+(((-1.0)*sj0*x2507))+(((-1.0)*r01*x2511*x2540))+((x2512*x2521))+(((-1.0)*cj4*x2501*x2517))+(((0.117537022603216)*x2550)));
evalcond[8]=((((-1.0)*cj0*x2528))+(((-1.0)*cj0*x2523))+(((-0.0098)*x2499))+((x2501*x2522))+(((-0.117537022603216)*x2504*x2512))+(((0.0648043305514941)*x2550))+(((-1.0)*r01*x2502*x2520))+(((0.117537022603216)*r01*x2502))+(((0.117537022603216)*sj0*x2504))+(((-1.0)*cj0*x2531*x2540))+((x2509*x2550))+(((0.235073880801598)*r01*x2546))+(((-0.20357990508077)*r02*x2512))+(((-0.235073880801598)*x2502*x2533))+(((0.0185150129489311)*x2501*x2510))+(((-1.0)*x2553))+((x2523*x2524))+(((-0.0678600949192303)*r02*sj0))+((x2501*x2548)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2554=((0.250000349687704)*sj1);
IkReal x2555=(cj1*cj4);
IkReal x2556=((0.749999650312296)*r22);
IkReal x2557=(cj4*sj1);
IkReal x2558=((0.749999650312296)*r02);
IkReal x2559=((0.250000349687704)*cj1);
IkReal x2560=((0.433012903784321)*r00*sj5);
IkReal x2561=((0.433012903784321)*r20*sj5);
IkReal x2562=((0.433012903784321)*cj5*r01);
IkReal x2563=((0.433012903784321)*cj5*r21);
IkReal x2564=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2565=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2566=((0.866025201892125)*r01*sj4*sj5);
IkReal x2567=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*cj1*x2560))+(((-1.0)*cj1*x2566))+(((-1.0)*cj1*x2562))+((r00*x2565))+((r22*x2554))+((x2555*x2560))+((x2555*x2562))+((x2557*x2561))+((x2557*x2563))+((x2556*x2557))+((r20*x2564))+((x2555*x2558))+(((-1.0)*sj1*x2567))+(((-1.0)*sj1*x2563))+(((-1.0)*sj1*x2561))+((r02*x2559)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r00*x2564))+(((-1.0)*cj1*x2561))+(((-1.0)*cj1*x2563))+(((-1.0)*cj1*x2567))+((r22*x2559))+((x2555*x2563))+((x2555*x2561))+(((-1.0)*x2557*x2562))+(((-1.0)*x2557*x2560))+((r20*x2565))+(((-1.0)*x2557*x2558))+((x2555*x2556))+(((-1.0)*r02*x2554))+((sj1*x2566))+((sj1*x2562))+((sj1*x2560)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*x2560))+(((-1.0)*cj1*x2566))+(((-1.0)*cj1*x2562))+((r00*x2565))+((r22*x2554))+((x2555*x2560))+((x2555*x2562))+((x2557*x2561))+((x2557*x2563))+((x2556*x2557))+((r20*x2564))+((x2555*x2558))+(((-1.0)*sj1*x2567))+(((-1.0)*sj1*x2563))+(((-1.0)*sj1*x2561))+((r02*x2559))))+IKsqr(((((-1.0)*r00*x2564))+(((-1.0)*cj1*x2561))+(((-1.0)*cj1*x2563))+(((-1.0)*cj1*x2567))+((r22*x2559))+((x2555*x2563))+((x2555*x2561))+(((-1.0)*x2557*x2562))+(((-1.0)*x2557*x2560))+((r20*x2565))+(((-1.0)*x2557*x2558))+((x2555*x2556))+(((-1.0)*r02*x2554))+((sj1*x2566))+((sj1*x2562))+((sj1*x2560))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj1*x2560))+(((-1.0)*cj1*x2566))+(((-1.0)*cj1*x2562))+((r00*x2565))+((r22*x2554))+((x2555*x2560))+((x2555*x2562))+((x2557*x2561))+((x2557*x2563))+((x2556*x2557))+((r20*x2564))+((x2555*x2558))+(((-1.0)*sj1*x2567))+(((-1.0)*sj1*x2563))+(((-1.0)*sj1*x2561))+((r02*x2559))), ((((-1.0)*r00*x2564))+(((-1.0)*cj1*x2561))+(((-1.0)*cj1*x2563))+(((-1.0)*cj1*x2567))+((r22*x2559))+((x2555*x2563))+((x2555*x2561))+(((-1.0)*x2557*x2562))+(((-1.0)*x2557*x2560))+((r20*x2565))+(((-1.0)*x2557*x2558))+((x2555*x2556))+(((-1.0)*r02*x2554))+((sj1*x2566))+((sj1*x2562))+((sj1*x2560))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2568=IKsin(j2);
IkReal x2569=IKcos(j2);
IkReal x2570=((0.749999650312296)*sj3);
IkReal x2571=(cj5*r01);
IkReal x2572=(r00*sj5);
IkReal x2573=(cj4*cj5);
IkReal x2574=((1.0)*cj3);
IkReal x2575=(r21*sj3);
IkReal x2576=(cj4*sj5);
IkReal x2577=(cj3*r21);
IkReal x2578=((0.500000349687582)*sj4);
IkReal x2579=((0.433012903784321)*r20);
IkReal x2580=(cj4*r22);
IkReal x2581=((0.433012903784321)*sj3);
IkReal x2582=((0.433012903784321)*cj4);
IkReal x2583=(r01*sj5);
IkReal x2584=(r20*sj5);
IkReal x2585=((0.0160344678271334)*r02);
IkReal x2586=(cj4*r02);
IkReal x2587=((0.00925751294893567)*cj4);
IkReal x2588=((0.0185150129489311)*sj4);
IkReal x2589=(r21*sj5);
IkReal x2590=(cj5*r21);
IkReal x2591=((0.866025201892125)*sj4);
IkReal x2592=(cj5*r20);
IkReal x2593=(cj5*r00);
IkReal x2594=((0.250000349687704)*sj3);
IkReal x2595=(cj1*x2569);
IkReal x2596=(sj1*x2568);
IkReal x2597=(cj1*x2568);
IkReal x2598=(sj1*x2569);
IkReal x2599=(x2595+x2596);
evalcond[0]=(x2599+(((-0.250000349687704)*r22))+(((-0.433012903784321)*r21*x2573))+(((0.433012903784321)*x2590))+((sj5*x2579))+(((-1.0)*x2591*x2592))+((x2589*x2591))+(((-0.749999650312296)*x2580))+(((-1.0)*x2576*x2579)));
evalcond[1]=(((x2583*x2591))+(((-0.250000349687704)*r02))+x2597+(((-1.0)*x2572*x2582))+(((-1.0)*x2598))+(((0.433012903784321)*x2572))+(((0.433012903784321)*x2571))+(((-1.0)*x2591*x2593))+(((-1.0)*x2571*x2582))+(((-0.749999650312296)*x2586)));
evalcond[2]=((((0.0648043305514941)*x2590))+(((0.41)*cj1))+(((0.0648043305514941)*x2584))+(((-0.0160344678271334)*r22))+(((0.00925751294893567)*r20*x2576))+(((-1.0)*x2588*x2589))+(((0.00925751294893567)*r21*x2573))+(((-1.0)*pz))+(((0.0160344678271334)*x2580))+((x2588*x2592))+(((-0.27144)*x2595))+(((-0.27144)*x2596)));
evalcond[3]=((((0.0648043305514941)*x2571))+(((0.0648043305514941)*x2572))+((x2572*x2587))+(((-0.41)*sj1))+(((-1.0)*x2585))+(((-1.0)*px))+(((0.27144)*x2598))+((x2588*x2593))+((cj4*x2585))+((x2571*x2587))+(((-0.27144)*x2597))+(((-1.0)*x2583*x2588)));
evalcond[4]=(x2599+((cj4*x2572*x2594))+((cj3*r02*x2591))+(((-1.0)*r02*x2581))+((sj3*x2578*x2593))+((cj3*x2571*x2578))+((cj3*r01*x2576))+((x2581*x2586))+((cj3*x2572*x2578))+(((-1.0)*sj3*x2578*x2583))+((cj4*x2571*x2594))+(((-1.0)*r00*x2573*x2574))+((x2570*x2572))+((x2570*x2571)));
evalcond[5]=((((-1.0)*r20*x2573*x2574))+x2598+(((-1.0)*x2597))+((r20*x2576*x2594))+((cj3*r22*x2591))+((sj3*x2578*x2592))+((x2580*x2581))+((cj5*x2577*x2578))+(((-1.0)*sj5*x2575*x2578))+((x2570*x2590))+((x2576*x2577))+((cj3*x2578*x2584))+((x2570*x2584))+(((0.250000349687704)*x2573*x2575))+(((-1.0)*r22*x2581)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2600=(r02*sj1);
IkReal x2601=(cj1*cj4);
IkReal x2602=((0.749999650312296)*r22);
IkReal x2603=(cj4*sj1);
IkReal x2604=((0.250000349687704)*r22);
IkReal x2605=((0.433012903784321)*r00*sj5);
IkReal x2606=((0.433012903784321)*r20*sj5);
IkReal x2607=((0.433012903784321)*cj5*r01);
IkReal x2608=((0.433012903784321)*cj5*r21);
IkReal x2609=((0.866025201892125)*cj5*sj1*sj4);
IkReal x2610=((0.866025201892125)*cj1*cj5*sj4);
IkReal x2611=((0.866025201892125)*r01*sj4*sj5);
IkReal x2612=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x2603*x2606))+((x2603*x2608))+(((-1.0)*r00*x2610))+(((-1.0)*sj1*x2612))+(((-1.0)*sj1*x2606))+(((-1.0)*sj1*x2608))+(((-1.0)*x2601*x2605))+(((-1.0)*x2601*x2607))+(((-0.749999650312296)*r02*x2601))+((r20*x2609))+((x2602*x2603))+((cj1*x2605))+((cj1*x2607))+((cj1*x2611))+((sj1*x2604))+(((-0.250000349687704)*cj1*r02)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x2603*x2607))+((x2603*x2605))+(((0.749999650312296)*cj4*x2600))+(((-1.0)*sj1*x2611))+(((-1.0)*sj1*x2607))+(((-1.0)*sj1*x2605))+((r20*x2610))+((cj1*x2604))+(((-1.0)*cj1*x2606))+(((-1.0)*cj1*x2608))+((x2601*x2608))+((x2601*x2602))+((x2601*x2606))+(((-1.0)*cj1*x2612))+((r00*x2609))+(((0.250000349687704)*x2600)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x2603*x2606))+((x2603*x2608))+(((-1.0)*r00*x2610))+(((-1.0)*sj1*x2612))+(((-1.0)*sj1*x2606))+(((-1.0)*sj1*x2608))+(((-1.0)*x2601*x2605))+(((-1.0)*x2601*x2607))+(((-0.749999650312296)*r02*x2601))+((r20*x2609))+((x2602*x2603))+((cj1*x2605))+((cj1*x2607))+((cj1*x2611))+((sj1*x2604))+(((-0.250000349687704)*cj1*r02))))+IKsqr((((x2603*x2607))+((x2603*x2605))+(((0.749999650312296)*cj4*x2600))+(((-1.0)*sj1*x2611))+(((-1.0)*sj1*x2607))+(((-1.0)*sj1*x2605))+((r20*x2610))+((cj1*x2604))+(((-1.0)*cj1*x2606))+(((-1.0)*cj1*x2608))+((x2601*x2608))+((x2601*x2602))+((x2601*x2606))+(((-1.0)*cj1*x2612))+((r00*x2609))+(((0.250000349687704)*x2600))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x2603*x2606))+((x2603*x2608))+(((-1.0)*r00*x2610))+(((-1.0)*sj1*x2612))+(((-1.0)*sj1*x2606))+(((-1.0)*sj1*x2608))+(((-1.0)*x2601*x2605))+(((-1.0)*x2601*x2607))+(((-0.749999650312296)*r02*x2601))+((r20*x2609))+((x2602*x2603))+((cj1*x2605))+((cj1*x2607))+((cj1*x2611))+((sj1*x2604))+(((-0.250000349687704)*cj1*r02))), (((x2603*x2607))+((x2603*x2605))+(((0.749999650312296)*cj4*x2600))+(((-1.0)*sj1*x2611))+(((-1.0)*sj1*x2607))+(((-1.0)*sj1*x2605))+((r20*x2610))+((cj1*x2604))+(((-1.0)*cj1*x2606))+(((-1.0)*cj1*x2608))+((x2601*x2608))+((x2601*x2602))+((x2601*x2606))+(((-1.0)*cj1*x2612))+((r00*x2609))+(((0.250000349687704)*x2600))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2613=IKcos(j2);
IkReal x2614=IKsin(j2);
IkReal x2615=((0.433012903784321)*sj3);
IkReal x2616=((0.749999650312296)*sj3);
IkReal x2617=(r00*sj5);
IkReal x2618=(cj4*cj5);
IkReal x2619=((1.0)*cj3);
IkReal x2620=(cj5*r01);
IkReal x2621=(r21*sj3);
IkReal x2622=(cj4*sj5);
IkReal x2623=(cj3*r21);
IkReal x2624=((0.500000349687582)*sj4);
IkReal x2625=((0.433012903784321)*r20);
IkReal x2626=(cj4*r22);
IkReal x2627=(r20*sj5);
IkReal x2628=((0.0160344678271334)*r02);
IkReal x2629=(cj4*r02);
IkReal x2630=(r01*sj5);
IkReal x2631=(cj5*r00);
IkReal x2632=((0.0185150129489311)*sj4);
IkReal x2633=(r21*sj5);
IkReal x2634=(cj5*r21);
IkReal x2635=((0.866025201892125)*sj4);
IkReal x2636=(cj5*r20);
IkReal x2637=((0.250000349687704)*sj3);
IkReal x2638=(sj1*x2613);
IkReal x2639=(cj1*x2613);
IkReal x2640=(sj1*x2614);
IkReal x2641=(cj1*x2614);
IkReal x2642=((1.0)*x2641);
evalcond[0]=((((-1.0)*x2622*x2625))+((sj5*x2625))+(((-0.250000349687704)*r22))+(((-0.433012903784321)*r21*x2618))+(((-1.0)*x2635*x2636))+((x2633*x2635))+(((0.433012903784321)*x2634))+(((-0.749999650312296)*x2626))+x2639+x2640);
evalcond[1]=((((-0.250000349687704)*r02))+(((-0.433012903784321)*cj4*x2617))+(((0.433012903784321)*x2617))+(((0.433012903784321)*x2620))+(((-0.433012903784321)*r01*x2618))+(((-1.0)*x2642))+((x2630*x2635))+(((-1.0)*x2631*x2635))+(((-0.749999650312296)*x2629))+x2638);
evalcond[2]=((((0.0160344678271334)*x2626))+(((0.00925751294893567)*r21*x2618))+(((0.00925751294893567)*r20*x2622))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x2634))+(((-1.0)*x2632*x2633))+(((-1.0)*pz))+(((-0.27144)*x2640))+((x2632*x2636))+(((-0.27144)*x2639))+(((0.0648043305514941)*x2627)));
evalcond[3]=(((cj4*x2628))+(((0.41)*sj1))+(((-1.0)*px))+(((0.27144)*x2641))+(((-1.0)*x2628))+(((0.00925751294893567)*r01*x2618))+(((-1.0)*x2630*x2632))+((x2631*x2632))+(((0.0648043305514941)*x2617))+(((-0.27144)*x2638))+(((0.00925751294893567)*cj4*x2617))+(((0.0648043305514941)*x2620)));
evalcond[4]=(((x2616*x2634))+((sj3*x2624*x2636))+((cj5*x2623*x2624))+(((-1.0)*sj5*x2621*x2624))+((cj3*x2624*x2627))+((r20*x2622*x2637))+((x2615*x2626))+((cj3*r22*x2635))+((x2616*x2627))+(((0.250000349687704)*x2618*x2621))+(((-1.0)*r22*x2615))+(((-1.0)*r20*x2618*x2619))+(((-1.0)*x2642))+((x2622*x2623))+x2638);
evalcond[5]=(((sj3*x2624*x2631))+((r01*x2618*x2637))+((cj3*r02*x2635))+(((-1.0)*r00*x2618*x2619))+((x2615*x2629))+((cj3*x2620*x2624))+((x2616*x2620))+((x2616*x2617))+(((-1.0)*r02*x2615))+((cj4*x2617*x2637))+((cj3*r01*x2622))+(((-1.0)*x2639))+((cj3*x2617*x2624))+(((-1.0)*sj3*x2624*x2630))+(((-1.0)*x2640)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2643=((0.250000349687704)*r12);
IkReal x2644=((0.749999650312296)*cj4);
IkReal x2645=((0.433012903784321)*sj5);
IkReal x2646=(cj1*r10);
IkReal x2647=(cj1*r22);
IkReal x2648=(cj1*r20);
IkReal x2649=((0.866025201892125)*sj4);
IkReal x2650=(r20*sj1);
IkReal x2651=(r22*sj1);
IkReal x2652=(r10*sj1);
IkReal x2653=(r11*sj1);
IkReal x2654=((0.433012903784321)*cj5);
IkReal x2655=(r21*sj1);
IkReal x2656=(cj1*r21);
IkReal x2657=(cj1*r11);
IkReal x2658=(cj5*sj1*x2649);
IkReal x2659=(cj4*r21*x2654);
if( IKabs((((cj1*r12*x2644))+((cj4*x2654*x2657))+((cj4*x2654*x2655))+((cj1*x2643))+((cj5*x2649*x2650))+(((-1.0)*x2645*x2650))+(((-1.0)*x2645*x2646))+(((0.250000349687704)*x2651))+(((-1.0)*sj5*x2649*x2655))+(((-1.0)*sj5*x2649*x2657))+((x2644*x2651))+((cj5*x2646*x2649))+((cj4*x2645*x2646))+((cj4*x2645*x2650))+(((-1.0)*x2654*x2657))+(((-1.0)*x2654*x2655)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj5*x2649*x2653))+((cj4*x2654*x2656))+(((-1.0)*cj5*x2649*x2652))+(((-1.0)*x2645*x2648))+(((-1.0)*cj4*x2645*x2652))+(((0.250000349687704)*x2647))+(((-1.0)*sj5*x2649*x2656))+((x2653*x2654))+((x2644*x2647))+(((-1.0)*cj4*x2653*x2654))+((x2645*x2652))+((cj4*x2645*x2648))+(((-1.0)*sj1*x2643))+((cj5*x2648*x2649))+(((-1.0)*r12*sj1*x2644))+(((-1.0)*x2654*x2656)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj1*r12*x2644))+((cj4*x2654*x2657))+((cj4*x2654*x2655))+((cj1*x2643))+((cj5*x2649*x2650))+(((-1.0)*x2645*x2650))+(((-1.0)*x2645*x2646))+(((0.250000349687704)*x2651))+(((-1.0)*sj5*x2649*x2655))+(((-1.0)*sj5*x2649*x2657))+((x2644*x2651))+((cj5*x2646*x2649))+((cj4*x2645*x2646))+((cj4*x2645*x2650))+(((-1.0)*x2654*x2657))+(((-1.0)*x2654*x2655))))+IKsqr((((sj5*x2649*x2653))+((cj4*x2654*x2656))+(((-1.0)*cj5*x2649*x2652))+(((-1.0)*x2645*x2648))+(((-1.0)*cj4*x2645*x2652))+(((0.250000349687704)*x2647))+(((-1.0)*sj5*x2649*x2656))+((x2653*x2654))+((x2644*x2647))+(((-1.0)*cj4*x2653*x2654))+((x2645*x2652))+((cj4*x2645*x2648))+(((-1.0)*sj1*x2643))+((cj5*x2648*x2649))+(((-1.0)*r12*sj1*x2644))+(((-1.0)*x2654*x2656))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj1*r12*x2644))+((cj4*x2654*x2657))+((cj4*x2654*x2655))+((cj1*x2643))+((cj5*x2649*x2650))+(((-1.0)*x2645*x2650))+(((-1.0)*x2645*x2646))+(((0.250000349687704)*x2651))+(((-1.0)*sj5*x2649*x2655))+(((-1.0)*sj5*x2649*x2657))+((x2644*x2651))+((cj5*x2646*x2649))+((cj4*x2645*x2646))+((cj4*x2645*x2650))+(((-1.0)*x2654*x2657))+(((-1.0)*x2654*x2655))), (((sj5*x2649*x2653))+((cj4*x2654*x2656))+(((-1.0)*cj5*x2649*x2652))+(((-1.0)*x2645*x2648))+(((-1.0)*cj4*x2645*x2652))+(((0.250000349687704)*x2647))+(((-1.0)*sj5*x2649*x2656))+((x2653*x2654))+((x2644*x2647))+(((-1.0)*cj4*x2653*x2654))+((x2645*x2652))+((cj4*x2645*x2648))+(((-1.0)*sj1*x2643))+((cj5*x2648*x2649))+(((-1.0)*r12*sj1*x2644))+(((-1.0)*x2654*x2656))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2660=IKsin(j2);
IkReal x2661=IKcos(j2);
IkReal x2662=(cj5*r11);
IkReal x2663=((0.433012903784321)*cj4);
IkReal x2664=(r21*sj5);
IkReal x2665=((0.500000349687582)*sj4);
IkReal x2666=((0.749999650312296)*sj3);
IkReal x2667=(cj3*cj4);
IkReal x2668=(cj5*r10);
IkReal x2669=((0.0185150129489311)*sj4);
IkReal x2670=(r20*sj5);
IkReal x2671=(cj4*r22);
IkReal x2672=(r10*sj5);
IkReal x2673=(r22*sj3);
IkReal x2674=(r11*sj5);
IkReal x2675=((0.00925751294893567)*cj4);
IkReal x2676=(cj5*r21);
IkReal x2677=(r12*sj3);
IkReal x2678=(cj4*r12);
IkReal x2679=(cj5*r20);
IkReal x2680=((0.866025201892125)*sj4);
IkReal x2681=(cj1*x2661);
IkReal x2682=(sj1*x2660);
IkReal x2683=(cj1*x2660);
IkReal x2684=((0.250000349687704)*cj4*sj3);
IkReal x2685=(sj1*x2661);
IkReal x2686=(cj3*x2680);
IkReal x2687=(x2681+x2682);
evalcond[0]=((((-0.250000349687704)*r22))+(((-0.749999650312296)*x2671))+(((-1.0)*x2679*x2680))+(((0.433012903784321)*x2670))+(((0.433012903784321)*x2676))+(((-1.0)*x2663*x2676))+(((-1.0)*x2663*x2670))+((x2664*x2680))+x2687);
evalcond[1]=((((-0.250000349687704)*r12))+(((-0.749999650312296)*x2678))+((x2674*x2680))+(((-1.0)*x2662*x2663))+(((-1.0)*x2668*x2680))+(((0.433012903784321)*x2662))+(((0.433012903784321)*x2672))+(((-1.0)*x2663*x2672))+(((-1.0)*x2685))+x2683);
evalcond[2]=((((0.0648043305514941)*x2676))+(((0.0648043305514941)*x2670))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((-1.0)*x2664*x2669))+((x2675*x2676))+((x2669*x2679))+(((0.0160344678271334)*x2671))+(((-0.27144)*x2682))+(((-0.27144)*x2681))+((x2670*x2675)));
evalcond[3]=((((0.0648043305514941)*x2672))+(((0.0648043305514941)*x2662))+((x2672*x2675))+((x2662*x2675))+(((0.27144)*x2685))+((x2668*x2669))+(((-0.0160344678271334)*r12))+(((-0.41)*sj1))+(((-1.0)*py))+(((0.0160344678271334)*x2678))+(((-0.27144)*x2683))+(((-1.0)*x2669*x2674)));
evalcond[4]=(((x2662*x2684))+((x2672*x2684))+((x2662*x2666))+((cj3*x2662*x2665))+((x2663*x2677))+(((-0.433012903784321)*x2677))+((x2667*x2674))+((x2666*x2672))+((cj3*x2665*x2672))+(((-1.0)*sj3*x2665*x2674))+(((-1.0)*x2667*x2668))+((sj3*x2665*x2668))+((r12*x2686))+x2687);
evalcond[5]=(((x2663*x2673))+(((-0.433012903784321)*x2673))+((r22*x2686))+((x2666*x2676))+((x2666*x2670))+((x2670*x2684))+((cj3*x2665*x2676))+((cj3*x2665*x2670))+((x2664*x2667))+(((-1.0)*x2683))+((x2676*x2684))+(((-1.0)*x2667*x2679))+(((-1.0)*sj3*x2664*x2665))+((sj3*x2665*x2679))+x2685);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2688=((0.250000349687704)*r12);
IkReal x2689=((0.749999650312296)*cj4);
IkReal x2690=(cj1*r22);
IkReal x2691=((0.866025201892125)*sj4);
IkReal x2692=(cj1*r20);
IkReal x2693=(sj1*sj5);
IkReal x2694=((0.433012903784321)*r20);
IkReal x2695=((0.433012903784321)*sj5);
IkReal x2696=(cj1*r10);
IkReal x2697=(r22*sj1);
IkReal x2698=((0.433012903784321)*r10);
IkReal x2699=((0.433012903784321)*cj5);
IkReal x2700=(cj1*r21);
IkReal x2701=(cj1*r11);
IkReal x2702=(r11*sj1);
IkReal x2703=(cj1*cj4*x2695);
IkReal x2704=(cj5*sj1*x2691);
IkReal x2705=(cj4*r21*x2699);
if( IKabs(((((-1.0)*cj1*x2688))+((x2699*x2701))+(((-1.0)*cj5*x2691*x2696))+((x2689*x2697))+((r20*x2704))+((x2695*x2696))+((cj4*x2693*x2694))+(((-1.0)*cj1*r12*x2689))+(((0.250000349687704)*x2697))+(((-1.0)*r21*x2691*x2693))+(((-1.0)*cj4*x2695*x2696))+((sj5*x2691*x2701))+(((-1.0)*x2693*x2694))+(((-1.0)*cj4*x2699*x2701))+((sj1*x2705))+(((-1.0)*r21*sj1*x2699)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj5*x2691*x2700))+(((-1.0)*x2692*x2695))+((cj4*x2699*x2700))+((cj4*x2699*x2702))+((r10*x2704))+((sj1*x2688))+((x2689*x2690))+(((-1.0)*r11*x2691*x2693))+((cj5*x2691*x2692))+((cj4*x2692*x2695))+((cj4*x2693*x2698))+(((0.250000349687704)*x2690))+((r12*sj1*x2689))+(((-1.0)*x2693*x2698))+(((-1.0)*x2699*x2702))+(((-1.0)*x2699*x2700)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*x2688))+((x2699*x2701))+(((-1.0)*cj5*x2691*x2696))+((x2689*x2697))+((r20*x2704))+((x2695*x2696))+((cj4*x2693*x2694))+(((-1.0)*cj1*r12*x2689))+(((0.250000349687704)*x2697))+(((-1.0)*r21*x2691*x2693))+(((-1.0)*cj4*x2695*x2696))+((sj5*x2691*x2701))+(((-1.0)*x2693*x2694))+(((-1.0)*cj4*x2699*x2701))+((sj1*x2705))+(((-1.0)*r21*sj1*x2699))))+IKsqr(((((-1.0)*sj5*x2691*x2700))+(((-1.0)*x2692*x2695))+((cj4*x2699*x2700))+((cj4*x2699*x2702))+((r10*x2704))+((sj1*x2688))+((x2689*x2690))+(((-1.0)*r11*x2691*x2693))+((cj5*x2691*x2692))+((cj4*x2692*x2695))+((cj4*x2693*x2698))+(((0.250000349687704)*x2690))+((r12*sj1*x2689))+(((-1.0)*x2693*x2698))+(((-1.0)*x2699*x2702))+(((-1.0)*x2699*x2700))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj1*x2688))+((x2699*x2701))+(((-1.0)*cj5*x2691*x2696))+((x2689*x2697))+((r20*x2704))+((x2695*x2696))+((cj4*x2693*x2694))+(((-1.0)*cj1*r12*x2689))+(((0.250000349687704)*x2697))+(((-1.0)*r21*x2691*x2693))+(((-1.0)*cj4*x2695*x2696))+((sj5*x2691*x2701))+(((-1.0)*x2693*x2694))+(((-1.0)*cj4*x2699*x2701))+((sj1*x2705))+(((-1.0)*r21*sj1*x2699))), ((((-1.0)*sj5*x2691*x2700))+(((-1.0)*x2692*x2695))+((cj4*x2699*x2700))+((cj4*x2699*x2702))+((r10*x2704))+((sj1*x2688))+((x2689*x2690))+(((-1.0)*r11*x2691*x2693))+((cj5*x2691*x2692))+((cj4*x2692*x2695))+((cj4*x2693*x2698))+(((0.250000349687704)*x2690))+((r12*sj1*x2689))+(((-1.0)*x2693*x2698))+(((-1.0)*x2699*x2702))+(((-1.0)*x2699*x2700))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2706=IKcos(j2);
IkReal x2707=IKsin(j2);
IkReal x2708=(cj5*r11);
IkReal x2709=((0.433012903784321)*cj4);
IkReal x2710=(r21*sj5);
IkReal x2711=((0.500000349687582)*sj4);
IkReal x2712=((0.749999650312296)*sj3);
IkReal x2713=(cj3*cj4);
IkReal x2714=(cj5*r10);
IkReal x2715=((0.0185150129489311)*sj4);
IkReal x2716=(r20*sj5);
IkReal x2717=(cj4*r22);
IkReal x2718=(r10*sj5);
IkReal x2719=(r12*sj3);
IkReal x2720=(r11*sj5);
IkReal x2721=(r22*sj3);
IkReal x2722=((0.27144)*sj1);
IkReal x2723=((0.00925751294893567)*cj4);
IkReal x2724=(cj5*r20);
IkReal x2725=(cj5*r21);
IkReal x2726=(cj4*r12);
IkReal x2727=((0.866025201892125)*sj4);
IkReal x2728=(sj1*x2706);
IkReal x2729=(cj1*x2706);
IkReal x2730=(cj1*x2707);
IkReal x2731=((0.250000349687704)*cj4*sj3);
IkReal x2732=(cj3*x2727);
IkReal x2733=(sj1*x2707);
IkReal x2734=((1.0)*x2730);
evalcond[0]=(x2733+x2729+(((0.433012903784321)*x2725))+(((-0.250000349687704)*r22))+(((-1.0)*x2724*x2727))+(((-1.0)*x2709*x2725))+(((-1.0)*x2709*x2716))+(((0.433012903784321)*x2716))+(((-0.749999650312296)*x2717))+((x2710*x2727)));
evalcond[1]=(x2728+(((-1.0)*x2708*x2709))+(((-0.250000349687704)*r12))+(((0.433012903784321)*x2708))+((x2720*x2727))+(((-1.0)*x2709*x2718))+(((-0.749999650312296)*x2726))+(((-1.0)*x2714*x2727))+(((0.433012903784321)*x2718))+(((-1.0)*x2734)));
evalcond[2]=(((x2715*x2724))+(((-1.0)*x2707*x2722))+(((0.0648043305514941)*x2716))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x2725))+(((-1.0)*pz))+(((0.0160344678271334)*x2717))+((x2716*x2723))+((x2723*x2725))+(((-1.0)*x2710*x2715))+(((-0.27144)*x2729)));
evalcond[3]=((((0.0648043305514941)*x2718))+(((0.0160344678271334)*x2726))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+((x2708*x2723))+(((-1.0)*py))+(((-1.0)*x2715*x2720))+(((0.27144)*x2730))+((x2718*x2723))+(((0.0648043305514941)*x2708))+(((-1.0)*x2706*x2722))+((x2714*x2715)));
evalcond[4]=(x2728+((sj3*x2711*x2724))+(((-1.0)*x2713*x2724))+((x2712*x2716))+((x2725*x2731))+(((-0.433012903784321)*x2721))+((r22*x2732))+((x2709*x2721))+((x2710*x2713))+((x2712*x2725))+(((-1.0)*sj3*x2710*x2711))+((x2716*x2731))+((cj3*x2711*x2725))+(((-1.0)*x2734))+((cj3*x2711*x2716)));
evalcond[5]=(((x2708*x2712))+((x2713*x2720))+(((-0.433012903784321)*x2719))+((x2708*x2731))+((x2712*x2718))+((x2709*x2719))+(((-1.0)*x2733))+(((-1.0)*x2729))+((sj3*x2711*x2714))+(((-1.0)*x2713*x2714))+((x2718*x2731))+((r12*x2732))+((cj3*x2708*x2711))+(((-1.0)*sj3*x2711*x2720))+((cj3*x2711*x2718)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2735=(cj4*sj1);
IkReal x2736=((0.433012903784321)*sj0);
IkReal x2737=(cj5*r21);
IkReal x2738=(cj1*r12);
IkReal x2739=(r20*sj5);
IkReal x2740=(r20*sj0);
IkReal x2741=(r10*sj1);
IkReal x2742=((0.749999650312296)*cj4);
IkReal x2743=(r21*sj0);
IkReal x2744=((0.433012903784321)*sj5);
IkReal x2745=(cj1*cj4);
IkReal x2746=(r22*sj0);
IkReal x2747=((0.250000349687704)*x2746);
IkReal x2748=((0.866025201892125)*cj5*sj4);
IkReal x2749=((0.433012903784321)*cj5*r11);
IkReal x2750=(cj1*r10*x2744);
IkReal x2751=((0.866025201892125)*sj1*sj4*sj5);
IkReal x2752=((0.866025201892125)*cj1*sj4*sj5);
CheckValue<IkReal> x2753 = IKatan2WithCheck(IkReal(((((0.749999650312296)*x2735*x2746))+((r10*x2744*x2745))+((cj1*r10*x2748))+((sj1*x2740*x2748))+((x2738*x2742))+((x2745*x2749))+(((0.250000349687704)*x2738))+(((-1.0)*r11*x2752))+((sj1*x2747))+(((-1.0)*cj1*x2749))+(((-1.0)*x2750))+((x2735*x2736*x2739))+((x2735*x2736*x2737))+(((-1.0)*x2743*x2751))+(((-1.0)*sj1*x2736*x2737))+(((-1.0)*sj1*x2736*x2739)))),IkReal((((r11*x2751))+(((-0.250000349687704)*r12*sj1))+((cj1*x2740*x2748))+(((-1.0)*r10*x2735*x2744))+(((-1.0)*x2741*x2748))+(((-1.0)*x2735*x2749))+(((-1.0)*cj1*x2736*x2739))+(((-1.0)*cj1*x2736*x2737))+((sj1*x2749))+((x2741*x2744))+((cj1*x2742*x2746))+((cj1*x2747))+(((-0.749999650312296)*r12*x2735))+((x2736*x2737*x2745))+((x2736*x2739*x2745))+(((-1.0)*x2743*x2752)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2753.valid){
continue;
}
CheckValue<IkReal> x2754=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x2754.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x2753.value)+(((1.5707963267949)*(x2754.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x2755=IKsin(j2);
IkReal x2756=IKcos(j2);
IkReal x2757=(cj4*sj5);
IkReal x2758=(cj3*r21);
IkReal x2759=((0.433012903784321)*r20);
IkReal x2760=((0.749999650312296)*cj4);
IkReal x2761=(cj4*cj5);
IkReal x2762=((1.0)*cj3);
IkReal x2763=((0.433012903784321)*r01);
IkReal x2764=(sj4*sj5);
IkReal x2765=((0.749999650312296)*sj3);
IkReal x2766=(r10*sj5);
IkReal x2767=((0.500000349687582)*sj3);
IkReal x2768=(cj0*sj1);
IkReal x2769=((0.500000349687582)*cj3);
IkReal x2770=((0.0160344678271334)*r22);
IkReal x2771=(r20*sj3);
IkReal x2772=(r00*sj5);
IkReal x2773=(cj3*r11);
IkReal x2774=((0.0160344678271334)*r12);
IkReal x2775=((0.433012903784321)*r11);
IkReal x2776=(cj5*r11);
IkReal x2777=(r10*sj3);
IkReal x2778=(r00*sj3);
IkReal x2779=((0.433012903784321)*sj3);
IkReal x2780=(cj5*sj4);
IkReal x2781=(r20*sj5);
IkReal x2782=((0.433012903784321)*r21);
IkReal x2783=(sj0*sj1);
IkReal x2784=(cj3*r01);
IkReal x2785=(cj5*r21);
IkReal x2786=((0.0160344678271334)*r02);
IkReal x2787=(cj5*r01);
IkReal x2788=((0.250000349687704)*sj3);
IkReal x2789=(cj1*x2755);
IkReal x2790=((0.500000349687582)*x2780);
IkReal x2791=((0.27144)*x2756);
IkReal x2792=(cj4*x2779);
IkReal x2793=(sj1*x2755);
IkReal x2794=((0.866025201892125)*cj3*sj4);
IkReal x2795=(cj1*x2756);
IkReal x2796=((1.0)*x2756);
evalcond[0]=(x2793+x2795+(((-1.0)*x2761*x2782))+(((-0.250000349687704)*r22))+(((0.866025201892125)*r21*x2764))+((sj5*x2759))+(((-1.0)*x2757*x2759))+(((-0.866025201892125)*r20*x2780))+(((-1.0)*r22*x2760))+((cj5*x2782)));
evalcond[1]=((((-0.250000349687704)*r02))+((cj5*x2763))+(((-1.0)*x2761*x2763))+(((-0.433012903784321)*r00*x2757))+(((0.433012903784321)*x2772))+(((0.866025201892125)*r01*x2764))+(((-1.0)*r02*x2760))+(((-1.0)*x2768*x2796))+((cj0*x2789))+(((-0.866025201892125)*r00*x2780)));
evalcond[2]=((((0.866025201892125)*r11*x2764))+(((-0.866025201892125)*r10*x2780))+(((-0.250000349687704)*r12))+(((-1.0)*r12*x2760))+(((0.433012903784321)*x2766))+((cj5*x2775))+(((-1.0)*x2761*x2775))+((sj0*x2789))+(((-1.0)*x2783*x2796))+(((-0.433012903784321)*r10*x2757)));
evalcond[3]=((((0.00925751294893567)*r21*x2761))+((cj4*x2770))+(((0.41)*cj1))+(((0.0648043305514941)*x2781))+(((0.0648043305514941)*x2785))+(((-0.0185150129489311)*r21*x2764))+(((-1.0)*pz))+(((-1.0)*x2770))+(((0.00925751294893567)*r20*x2757))+(((-0.27144)*x2793))+(((0.0185150129489311)*r20*x2780))+(((-1.0)*cj1*x2791)));
evalcond[4]=((((-1.0)*x2786))+(((-0.27144)*cj0*x2789))+(((-0.41)*x2768))+(((0.0185150129489311)*r00*x2780))+(((0.00925751294893567)*r01*x2761))+(((0.0648043305514941)*x2787))+(((-1.0)*px))+(((0.00925751294893567)*r00*x2757))+(((-0.0185150129489311)*r01*x2764))+((x2768*x2791))+(((0.0648043305514941)*x2772))+((cj4*x2786))+(((0.0098)*sj0)));
evalcond[5]=((((0.0185150129489311)*r10*x2780))+(((0.00925751294893567)*r10*x2757))+((cj4*x2774))+(((-0.27144)*sj0*x2789))+((x2783*x2791))+(((-1.0)*py))+(((-1.0)*x2774))+(((0.0648043305514941)*x2766))+(((-0.41)*x2783))+(((-0.0185150129489311)*r11*x2764))+(((-0.0098)*cj0))+(((0.0648043305514941)*x2776))+(((0.00925751294893567)*r11*x2761)));
evalcond[6]=(((r21*x2761*x2788))+((x2765*x2781))+((x2765*x2785))+((r20*x2767*x2780))+((x2757*x2758))+((x2758*x2790))+(((-1.0)*r20*x2761*x2762))+((r22*x2792))+((r22*x2794))+((sj1*x2756))+(((-1.0)*x2789))+(((-1.0)*r21*x2764*x2767))+(((0.250000349687704)*x2757*x2771))+((r20*x2764*x2769))+(((-1.0)*r22*x2779)));
evalcond[7]=(((x2765*x2787))+(((-1.0)*r02*x2779))+((r02*x2792))+((r02*x2794))+((x2755*x2768))+((x2757*x2784))+((r01*x2769*x2780))+((r00*x2764*x2769))+((x2765*x2772))+((r01*x2761*x2788))+(((-1.0)*r00*x2761*x2762))+((r00*x2767*x2780))+(((-1.0)*r01*x2764*x2767))+((cj0*x2795))+(((0.250000349687704)*x2757*x2778)));
evalcond[8]=(((x2757*x2773))+(((-1.0)*r11*x2764*x2767))+((r10*x2764*x2769))+(((-1.0)*r12*x2779))+((r11*x2761*x2788))+((r12*x2794))+((r12*x2792))+((r10*x2767*x2780))+(((-1.0)*r10*x2761*x2762))+((x2765*x2766))+((x2765*x2776))+((sj0*x2795))+((sj4*x2769*x2776))+((x2755*x2783))+(((0.250000349687704)*x2757*x2777)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2797=(cj0*r20);
IkReal x2798=(cj1*r00);
IkReal x2799=(r02*sj1);
IkReal x2800=(r00*sj1);
IkReal x2801=((0.433012903784321)*sj5);
IkReal x2802=(cj4*sj1);
IkReal x2803=((0.749999650312296)*cj4);
IkReal x2804=(cj0*r22);
IkReal x2805=(r01*sj1);
IkReal x2806=(cj1*cj4);
IkReal x2807=(cj0*r21);
IkReal x2808=(cj1*r02);
IkReal x2809=((0.866025201892125)*cj5*sj4);
IkReal x2810=((0.866025201892125)*sj4*sj5);
IkReal x2811=((0.433012903784321)*cj5*r01);
IkReal x2812=((0.433012903784321)*cj5*x2807);
CheckValue<IkReal> x2813=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x2813.valid){
continue;
}
CheckValue<IkReal> x2814 = IKatan2WithCheck(IkReal(((((0.749999650312296)*x2802*x2804))+(((-1.0)*sj1*x2807*x2810))+(((-1.0)*cj1*r01*x2810))+(((0.250000349687704)*sj1*x2804))+(((-1.0)*cj1*x2811))+((x2802*x2812))+((x2798*x2809))+((x2797*x2801*x2802))+((cj4*x2798*x2801))+((x2803*x2808))+(((0.250000349687704)*x2808))+(((-1.0)*sj1*x2812))+(((-1.0)*x2798*x2801))+((sj1*x2797*x2809))+(((-1.0)*sj1*x2797*x2801))+((x2806*x2811)))),IkReal(((((-1.0)*cj4*x2800*x2801))+(((-1.0)*cj1*x2812))+(((-1.0)*x2800*x2809))+((x2797*x2801*x2806))+(((0.433012903784321)*cj5*x2805))+(((-1.0)*cj1*x2797*x2801))+(((-1.0)*x2799*x2803))+(((-1.0)*cj1*x2807*x2810))+((x2805*x2810))+((cj1*x2797*x2809))+(((-0.250000349687704)*x2799))+((cj1*x2803*x2804))+((x2800*x2801))+(((-1.0)*x2802*x2811))+((x2806*x2812))+(((0.250000349687704)*cj1*x2804)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2814.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2813.value)))+(x2814.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x2815=IKsin(j2);
IkReal x2816=IKcos(j2);
IkReal x2817=(cj4*sj5);
IkReal x2818=(cj3*r21);
IkReal x2819=((0.433012903784321)*r20);
IkReal x2820=((0.749999650312296)*cj4);
IkReal x2821=(cj4*cj5);
IkReal x2822=((1.0)*cj3);
IkReal x2823=((0.433012903784321)*r01);
IkReal x2824=(sj4*sj5);
IkReal x2825=((0.749999650312296)*sj3);
IkReal x2826=(r10*sj5);
IkReal x2827=((0.500000349687582)*sj3);
IkReal x2828=(cj0*sj1);
IkReal x2829=((0.500000349687582)*cj3);
IkReal x2830=((0.0160344678271334)*r22);
IkReal x2831=(r20*sj3);
IkReal x2832=(r00*sj5);
IkReal x2833=(cj3*r11);
IkReal x2834=((0.0160344678271334)*r12);
IkReal x2835=((0.433012903784321)*r11);
IkReal x2836=(cj5*r11);
IkReal x2837=(r10*sj3);
IkReal x2838=(r00*sj3);
IkReal x2839=((0.433012903784321)*sj3);
IkReal x2840=(cj5*sj4);
IkReal x2841=(r20*sj5);
IkReal x2842=((0.433012903784321)*r21);
IkReal x2843=(sj0*sj1);
IkReal x2844=(cj3*r01);
IkReal x2845=(cj5*r21);
IkReal x2846=((0.0160344678271334)*r02);
IkReal x2847=(cj5*r01);
IkReal x2848=((0.250000349687704)*sj3);
IkReal x2849=(cj1*x2815);
IkReal x2850=((0.500000349687582)*x2840);
IkReal x2851=((0.27144)*x2816);
IkReal x2852=(cj4*x2839);
IkReal x2853=(sj1*x2815);
IkReal x2854=((0.866025201892125)*cj3*sj4);
IkReal x2855=(cj1*x2816);
IkReal x2856=((1.0)*x2816);
evalcond[0]=((((-0.250000349687704)*r22))+(((-1.0)*x2821*x2842))+(((-0.866025201892125)*r20*x2840))+((cj5*x2842))+(((-1.0)*r22*x2820))+(((0.866025201892125)*r21*x2824))+x2853+x2855+(((-1.0)*x2817*x2819))+((sj5*x2819)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x2821*x2823))+(((-0.433012903784321)*r00*x2817))+(((0.433012903784321)*x2832))+(((-1.0)*r02*x2820))+((cj5*x2823))+((cj0*x2849))+(((-0.866025201892125)*r00*x2840))+(((-1.0)*x2828*x2856))+(((0.866025201892125)*r01*x2824)));
evalcond[2]=((((-1.0)*r12*x2820))+(((-0.433012903784321)*r10*x2817))+(((-0.866025201892125)*r10*x2840))+(((-0.250000349687704)*r12))+(((0.866025201892125)*r11*x2824))+(((-1.0)*x2843*x2856))+((sj0*x2849))+((cj5*x2835))+(((-1.0)*x2821*x2835))+(((0.433012903784321)*x2826)));
evalcond[3]=((((-1.0)*cj1*x2851))+(((-1.0)*x2830))+(((0.0185150129489311)*r20*x2840))+((cj4*x2830))+(((-0.27144)*x2853))+(((0.41)*cj1))+(((-0.0185150129489311)*r21*x2824))+(((-1.0)*pz))+(((0.00925751294893567)*r20*x2817))+(((0.00925751294893567)*r21*x2821))+(((0.0648043305514941)*x2841))+(((0.0648043305514941)*x2845)));
evalcond[4]=((((0.00925751294893567)*r00*x2817))+(((-0.27144)*cj0*x2849))+(((0.00925751294893567)*r01*x2821))+((x2828*x2851))+(((0.0185150129489311)*r00*x2840))+(((-1.0)*px))+((cj4*x2846))+(((-0.0185150129489311)*r01*x2824))+(((0.0648043305514941)*x2832))+(((0.0098)*sj0))+(((-0.41)*x2828))+(((-1.0)*x2846))+(((0.0648043305514941)*x2847)));
evalcond[5]=((((-0.41)*x2843))+(((-1.0)*x2834))+((cj4*x2834))+(((0.00925751294893567)*r11*x2821))+(((-0.27144)*sj0*x2849))+(((0.00925751294893567)*r10*x2817))+(((-1.0)*py))+((x2843*x2851))+(((0.0185150129489311)*r10*x2840))+(((0.0648043305514941)*x2836))+(((-0.0185150129489311)*r11*x2824))+(((-0.0098)*cj0))+(((0.0648043305514941)*x2826)));
evalcond[6]=(((x2825*x2841))+((x2825*x2845))+(((-1.0)*r21*x2824*x2827))+((r20*x2827*x2840))+((x2818*x2850))+((r20*x2824*x2829))+((r21*x2821*x2848))+(((0.250000349687704)*x2817*x2831))+((sj1*x2816))+((r22*x2852))+((r22*x2854))+(((-1.0)*r22*x2839))+(((-1.0)*x2849))+((x2817*x2818))+(((-1.0)*r20*x2821*x2822)));
evalcond[7]=(((x2825*x2847))+(((-1.0)*r01*x2824*x2827))+((r01*x2821*x2848))+((r00*x2824*x2829))+((r00*x2827*x2840))+(((-1.0)*r00*x2821*x2822))+((x2815*x2828))+((x2825*x2832))+((x2817*x2844))+(((0.250000349687704)*x2817*x2838))+((cj0*x2855))+((r01*x2829*x2840))+((r02*x2854))+((r02*x2852))+(((-1.0)*r02*x2839)));
evalcond[8]=(((sj0*x2855))+((sj4*x2829*x2836))+((x2815*x2843))+((x2825*x2836))+((r12*x2852))+((r12*x2854))+((r10*x2827*x2840))+((r11*x2821*x2848))+(((0.250000349687704)*x2817*x2837))+((r10*x2824*x2829))+(((-1.0)*r10*x2821*x2822))+(((-1.0)*r12*x2839))+((x2825*x2826))+((x2817*x2833))+(((-1.0)*r11*x2824*x2827)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x2857=((0.433012903784321)*cj5);
IkReal x2858=(sj4*sj5);
IkReal x2859=((0.500000349687582)*sj0);
IkReal x2860=(r22*sj0);
IkReal x2861=((0.866025201892125)*sj4);
IkReal x2862=((0.433012903784321)*cj4);
IkReal x2863=((0.250000349687704)*cj4);
IkReal x2864=(cj5*sj4);
IkReal x2865=(cj4*sj0);
IkReal x2866=(cj5*r21*sj0);
IkReal x2867=(r20*sj0*sj5);
CheckValue<IkReal> x2868=IKPowWithIntegerCheck(IKsign((((r10*(((((-1.0)*cj5*x2861))+(((-1.0)*sj5*x2862))+(((0.433012903784321)*sj5))))))+((r12*(((-0.250000349687704)+(((-0.749999650312296)*cj4))))))+((r11*(((((-1.0)*cj4*x2857))+(((0.866025201892125)*x2858))+x2857)))))),-1);
if(!x2868.valid){
continue;
}
CheckValue<IkReal> x2869 = IKatan2WithCheck(IkReal((((r21*x2858*x2859))+(((0.433012903784321)*x2860))+(((-1.0)*r20*x2859*x2864))+(((-1.0)*x2860*x2862))+(((-1.0)*x2863*x2867))+(((-1.0)*x2863*x2866))+(((-0.749999650312296)*x2866))+(((-0.749999650312296)*x2867)))),IkReal(((((-1.0)*x2860*x2861))+(((-1.0)*r20*x2858*x2859))+((cj5*r20*x2865))+(((-1.0)*r21*x2859*x2864))+(((-1.0)*r21*sj5*x2865)))),IKFAST_ATAN2_MAGTHRESH);
if(!x2869.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(((1.5707963267949)*(x2868.value)))+(x2869.value));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x2870=IKsin(j3);
IkReal x2871=IKcos(j3);
IkReal x2872=(r11*sj5);
IkReal x2873=(cj5*r20);
IkReal x2874=(cj4*cj5);
IkReal x2875=(r00*sj5);
IkReal x2876=(cj5*r01);
IkReal x2877=(r10*sj5);
IkReal x2878=(r21*sj5);
IkReal x2879=(r20*sj5);
IkReal x2880=(cj5*r21);
IkReal x2881=(cj5*r11);
IkReal x2882=(r01*sj5);
IkReal x2883=((1.0)*x2870);
IkReal x2884=((0.250000349687704)*x2871);
IkReal x2885=((0.749999650312296)*x2871);
IkReal x2886=(cj4*x2870);
IkReal x2887=((0.500000349687582)*sj4*x2871);
IkReal x2888=((0.433012903784321)*r12*x2871);
IkReal x2889=((0.500000349687582)*sj4*x2870);
IkReal x2890=((0.433012903784321)*r02*x2871);
IkReal x2891=((0.866025201892125)*sj4*x2870);
IkReal x2892=((0.433012903784321)*r22*x2871);
evalcond[0]=((((-1.0)*x2873*x2887))+(((-1.0)*r21*x2874*x2884))+((x2880*x2889))+((r22*x2891))+(((-1.0)*cj4*x2879*x2884))+((x2879*x2889))+(((-1.0)*x2879*x2885))+((x2878*x2887))+((x2878*x2886))+(((-1.0)*cj4*x2873*x2883))+x2892+(((-1.0)*cj4*x2892))+(((-1.0)*x2880*x2885)));
evalcond[1]=(((x2877*x2889))+((x2872*x2887))+((x2872*x2886))+cj0+(((-1.0)*r10*x2874*x2883))+(((-1.0)*r11*x2874*x2884))+((r12*x2891))+(((-1.0)*x2877*x2885))+((x2881*x2889))+(((-1.0)*cj5*r10*x2887))+x2888+(((-1.0)*cj4*x2888))+(((-1.0)*cj4*x2877*x2884))+(((-1.0)*x2881*x2885)));
evalcond[2]=((((-1.0)*sj0))+((x2876*x2889))+(((-1.0)*x2876*x2885))+(((-1.0)*r00*x2874*x2883))+(((-1.0)*r01*x2874*x2884))+((r02*x2891))+(((-1.0)*cj4*x2875*x2884))+((x2875*x2889))+x2890+(((-1.0)*cj4*x2890))+((x2882*x2887))+((x2882*x2886))+(((-1.0)*x2875*x2885))+(((-1.0)*cj5*r00*x2887)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1eval[1];
j1eval[0]=sj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal j1eval[1];
j1eval[0]=cj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2893=((0.528192360616262)*sj4);
IkReal x2894=(r20*sj5);
IkReal x2895=((0.26409636501044)*cj4);
IkReal x2896=((0.444735007694415)*cj5);
IkReal x2897=((0.457427895740576)*cj4);
IkReal x2898=(r10*sj5);
if( IKabs(((((-2.4390243902439)*py))+((r11*sj5*x2893))+(((-0.204620884747229)*r12))+(((-1.0)*x2895*x2898))+((r11*x2896))+(((-1.0)*cj5*r11*x2895))+(((-1.0)*cj5*r10*x2893))+(((0.444735007694415)*x2898))+(((-1.0)*r12*x2897)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x2893))+(((0.204620884747229)*r22))+((r22*x2897))+(((-0.444735007694415)*x2894))+(((-1.0)*r21*sj5*x2893))+((x2894*x2895))+((cj5*r21*x2895))+(((-1.0)*r21*x2896))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*py))+((r11*sj5*x2893))+(((-0.204620884747229)*r12))+(((-1.0)*x2895*x2898))+((r11*x2896))+(((-1.0)*cj5*r11*x2895))+(((-1.0)*cj5*r10*x2893))+(((0.444735007694415)*x2898))+(((-1.0)*r12*x2897))))+IKsqr((((cj5*r20*x2893))+(((0.204620884747229)*r22))+((r22*x2897))+(((-0.444735007694415)*x2894))+(((-1.0)*r21*sj5*x2893))+((x2894*x2895))+((cj5*r21*x2895))+(((-1.0)*r21*x2896))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*py))+((r11*sj5*x2893))+(((-0.204620884747229)*r12))+(((-1.0)*x2895*x2898))+((r11*x2896))+(((-1.0)*cj5*r11*x2895))+(((-1.0)*cj5*r10*x2893))+(((0.444735007694415)*x2898))+(((-1.0)*r12*x2897))), (((cj5*r20*x2893))+(((0.204620884747229)*r22))+((r22*x2897))+(((-0.444735007694415)*x2894))+(((-1.0)*r21*sj5*x2893))+((x2894*x2895))+((cj5*r21*x2895))+(((-1.0)*r21*x2896))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2899=((1.0)*py);
IkReal x2900=(cj5*r11);
IkReal x2901=(cj5*sj3);
IkReal x2902=(r20*sj5);
IkReal x2903=((0.135720094919197)*sj4);
IkReal x2904=(r21*sj5);
IkReal x2905=((0.0185150129489311)*sj4);
IkReal x2906=((0.135720094919197)*sj3);
IkReal x2907=((0.00925751294893567)*cj4);
IkReal x2908=(cj4*cj5);
IkReal x2909=(cj3*r10);
IkReal x2910=((0.0678600949192303)*cj4);
IkReal x2911=(r10*sj5);
IkReal x2912=((0.10827950965428)*cj4);
IkReal x2913=(cj4*r22);
IkReal x2914=((0.0160344678271334)*r12);
IkReal x2915=((0.20357990508077)*sj3);
IkReal x2916=(cj5*r20);
IkReal x2917=((0.216558867852667)*sj4);
IkReal x2918=((0.117537022603216)*sj3);
IkReal x2919=((0.27144)*cj3);
IkReal x2920=(cj5*r21);
IkReal x2921=(cj4*r12);
IkReal x2922=((0.41)*(IKsin(j1)));
IkReal x2923=((0.41)*(IKcos(j1)));
IkReal x2924=(cj5*r10*sj4);
IkReal x2925=(r11*sj4*sj5);
IkReal x2926=((0.235073880801598)*cj3*sj4);
IkReal x2927=(x2899+x2922);
evalcond[0]=((((-0.18234135315471)*x2902))+(((-1.0)*x2923))+((x2916*x2917))+(((-1.0)*x2904*x2917))+pz+(((0.187545437253636)*x2913))+((x2902*x2912))+(((0.0838945627463637)*r22))+(((-0.18234135315471)*x2920))+(((0.10827950965428)*r21*x2908)));
evalcond[1]=((((-0.187545437253636)*x2921))+((r11*sj5*x2917))+(((-1.0)*cj5*r10*x2917))+(((0.18234135315471)*x2900))+(((-1.0)*x2927))+(((0.18234135315471)*x2911))+(((-0.0838945627463637)*r12))+(((-1.0)*x2911*x2912))+(((-1.0)*x2900*x2912)));
evalcond[2]=((((-0.20357990508077)*r21*x2901))+(((0.0648043305514941)*x2911))+(((-1.0)*x2913*x2918))+((x2907*x2911))+((x2900*x2907))+(((-1.0)*x2927))+(((-1.0)*cj4*x2904*x2919))+((sj3*x2903*x2904))+((r20*x2908*x2919))+(((-1.0)*r11*sj5*x2905))+(((-1.0)*r20*x2901*x2903))+((cj5*r10*x2905))+((cj4*x2914))+(((-1.0)*r21*x2901*x2910))+(((-1.0)*r22*x2926))+(((-1.0)*cj3*x2903*x2920))+(((-1.0)*cj3*x2902*x2903))+(((-1.0)*x2902*x2915))+(((0.0648043305514941)*x2900))+(((-1.0)*sj3*x2902*x2910))+((r22*x2918))+(((-1.0)*x2914)));
evalcond[3]=(((cj3*x2900*x2903))+((x2902*x2907))+((sj5*x2903*x2909))+(((-1.0)*r11*sj3*sj5*x2903))+(((-1.0)*x2904*x2905))+((r10*x2901*x2903))+(((-0.0160344678271334)*r22))+(((-1.0)*r12*x2918))+((x2918*x2921))+(((-1.0)*pz))+((cj4*r11*sj5*x2919))+((x2905*x2916))+(((0.0648043305514941)*x2920))+(((-0.27144)*x2908*x2909))+((sj3*x2910*x2911))+((x2911*x2915))+((x2900*x2915))+(((0.0648043305514941)*x2902))+(((0.0160344678271334)*x2913))+x2923+((x2907*x2920))+((r12*x2926))+((sj3*x2900*x2910)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x2928=((0.250000349687704)*r12);
IkReal x2929=((0.749999650312296)*cj4);
IkReal x2930=((0.433012903784321)*sj5);
IkReal x2931=(cj1*r10);
IkReal x2932=(cj1*r22);
IkReal x2933=(cj1*r20);
IkReal x2934=((0.866025201892125)*sj4);
IkReal x2935=(r20*sj1);
IkReal x2936=(r22*sj1);
IkReal x2937=(r10*sj1);
IkReal x2938=(r11*sj1);
IkReal x2939=((0.433012903784321)*cj5);
IkReal x2940=(r21*sj1);
IkReal x2941=(cj1*r21);
IkReal x2942=(cj1*r11);
IkReal x2943=(cj5*sj1*x2934);
IkReal x2944=(cj4*r21*x2939);
if( IKabs((((x2929*x2936))+(((-1.0)*sj5*x2934*x2942))+(((-1.0)*sj5*x2934*x2940))+(((-1.0)*x2930*x2931))+(((-1.0)*x2930*x2935))+(((-1.0)*x2939*x2940))+(((-1.0)*x2939*x2942))+((cj4*x2939*x2942))+((cj4*x2939*x2940))+((cj5*x2934*x2935))+((cj5*x2931*x2934))+((cj1*r12*x2929))+((cj1*x2928))+(((0.250000349687704)*x2936))+((cj4*x2930*x2935))+((cj4*x2930*x2931)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x2929*x2932))+(((-1.0)*sj5*x2934*x2941))+(((-1.0)*x2930*x2933))+(((-1.0)*x2939*x2941))+((sj5*x2934*x2938))+(((-1.0)*cj5*x2934*x2937))+((x2938*x2939))+(((-1.0)*cj4*x2930*x2937))+((cj5*x2933*x2934))+((cj4*x2939*x2941))+(((-1.0)*sj1*x2928))+(((-1.0)*r12*sj1*x2929))+(((-1.0)*cj4*x2938*x2939))+((x2930*x2937))+(((0.250000349687704)*x2932))+((cj4*x2930*x2933)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x2929*x2936))+(((-1.0)*sj5*x2934*x2942))+(((-1.0)*sj5*x2934*x2940))+(((-1.0)*x2930*x2931))+(((-1.0)*x2930*x2935))+(((-1.0)*x2939*x2940))+(((-1.0)*x2939*x2942))+((cj4*x2939*x2942))+((cj4*x2939*x2940))+((cj5*x2934*x2935))+((cj5*x2931*x2934))+((cj1*r12*x2929))+((cj1*x2928))+(((0.250000349687704)*x2936))+((cj4*x2930*x2935))+((cj4*x2930*x2931))))+IKsqr((((x2929*x2932))+(((-1.0)*sj5*x2934*x2941))+(((-1.0)*x2930*x2933))+(((-1.0)*x2939*x2941))+((sj5*x2934*x2938))+(((-1.0)*cj5*x2934*x2937))+((x2938*x2939))+(((-1.0)*cj4*x2930*x2937))+((cj5*x2933*x2934))+((cj4*x2939*x2941))+(((-1.0)*sj1*x2928))+(((-1.0)*r12*sj1*x2929))+(((-1.0)*cj4*x2938*x2939))+((x2930*x2937))+(((0.250000349687704)*x2932))+((cj4*x2930*x2933))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x2929*x2936))+(((-1.0)*sj5*x2934*x2942))+(((-1.0)*sj5*x2934*x2940))+(((-1.0)*x2930*x2931))+(((-1.0)*x2930*x2935))+(((-1.0)*x2939*x2940))+(((-1.0)*x2939*x2942))+((cj4*x2939*x2942))+((cj4*x2939*x2940))+((cj5*x2934*x2935))+((cj5*x2931*x2934))+((cj1*r12*x2929))+((cj1*x2928))+(((0.250000349687704)*x2936))+((cj4*x2930*x2935))+((cj4*x2930*x2931))), (((x2929*x2932))+(((-1.0)*sj5*x2934*x2941))+(((-1.0)*x2930*x2933))+(((-1.0)*x2939*x2941))+((sj5*x2934*x2938))+(((-1.0)*cj5*x2934*x2937))+((x2938*x2939))+(((-1.0)*cj4*x2930*x2937))+((cj5*x2933*x2934))+((cj4*x2939*x2941))+(((-1.0)*sj1*x2928))+(((-1.0)*r12*sj1*x2929))+(((-1.0)*cj4*x2938*x2939))+((x2930*x2937))+(((0.250000349687704)*x2932))+((cj4*x2930*x2933))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x2945=IKsin(j2);
IkReal x2946=IKcos(j2);
IkReal x2947=(cj5*r11);
IkReal x2948=((0.433012903784321)*cj4);
IkReal x2949=(r21*sj5);
IkReal x2950=((0.500000349687582)*sj4);
IkReal x2951=((0.749999650312296)*sj3);
IkReal x2952=(cj3*cj4);
IkReal x2953=(cj5*r10);
IkReal x2954=((0.0185150129489311)*sj4);
IkReal x2955=(r20*sj5);
IkReal x2956=(cj4*r22);
IkReal x2957=(r10*sj5);
IkReal x2958=(r22*sj3);
IkReal x2959=(r11*sj5);
IkReal x2960=((0.00925751294893567)*cj4);
IkReal x2961=(cj5*r21);
IkReal x2962=(r12*sj3);
IkReal x2963=(cj4*r12);
IkReal x2964=(cj5*r20);
IkReal x2965=((0.866025201892125)*sj4);
IkReal x2966=(cj1*x2946);
IkReal x2967=(sj1*x2945);
IkReal x2968=(cj1*x2945);
IkReal x2969=((0.250000349687704)*cj4*sj3);
IkReal x2970=(sj1*x2946);
IkReal x2971=(cj3*x2965);
IkReal x2972=(x2967+x2966);
evalcond[0]=((((-1.0)*x2948*x2955))+(((-0.250000349687704)*r22))+(((-0.749999650312296)*x2956))+(((-1.0)*x2948*x2961))+((x2949*x2965))+(((0.433012903784321)*x2961))+(((-1.0)*x2964*x2965))+x2972+(((0.433012903784321)*x2955)));
evalcond[1]=((((-1.0)*x2948*x2957))+(((-0.250000349687704)*r12))+(((-1.0)*x2970))+((x2959*x2965))+(((-1.0)*x2947*x2948))+(((0.433012903784321)*x2947))+x2968+(((0.433012903784321)*x2957))+(((-0.749999650312296)*x2963))+(((-1.0)*x2953*x2965)));
evalcond[2]=((((0.0160344678271334)*x2956))+(((-0.27144)*x2966))+(((-0.27144)*x2967))+((x2954*x2964))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+((x2955*x2960))+(((0.0648043305514941)*x2961))+((x2960*x2961))+(((-1.0)*pz))+(((-1.0)*x2949*x2954))+(((0.0648043305514941)*x2955)));
evalcond[3]=(((x2947*x2960))+(((0.0160344678271334)*x2963))+(((-0.27144)*x2968))+(((-0.0160344678271334)*r12))+(((-0.41)*sj1))+(((-1.0)*x2954*x2959))+(((-1.0)*py))+((x2953*x2954))+((x2957*x2960))+(((0.27144)*x2970))+(((0.0648043305514941)*x2947))+(((0.0648043305514941)*x2957)));
evalcond[4]=(((x2947*x2969))+((x2948*x2962))+(((-1.0)*sj3*x2950*x2959))+((x2951*x2957))+((sj3*x2950*x2953))+((x2947*x2951))+((r12*x2971))+(((-1.0)*x2952*x2953))+((cj3*x2947*x2950))+(((-0.433012903784321)*x2962))+((x2957*x2969))+((x2952*x2959))+x2972+((cj3*x2950*x2957)));
evalcond[5]=(((cj3*x2950*x2961))+((x2951*x2955))+(((-1.0)*x2968))+((x2948*x2958))+((x2955*x2969))+((sj3*x2950*x2964))+((x2961*x2969))+((r22*x2971))+(((-0.433012903784321)*x2958))+((x2951*x2961))+(((-1.0)*sj3*x2949*x2950))+((x2949*x2952))+(((-1.0)*x2952*x2964))+x2970+((cj3*x2950*x2955)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x2973=((0.528192360616262)*sj4);
IkReal x2974=((0.26409636501044)*cj4);
IkReal x2975=(r20*sj5);
IkReal x2976=((0.444735007694415)*cj5);
IkReal x2977=((0.457427895740576)*cj4);
IkReal x2978=(r10*sj5);
if( IKabs((((cj5*r11*x2974))+(((-1.0)*r11*x2976))+((x2974*x2978))+(((-1.0)*r11*sj5*x2973))+((r12*x2977))+((cj5*r10*x2973))+(((-0.444735007694415)*x2978))+(((0.204620884747229)*r12))+(((2.4390243902439)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x2973))+(((0.204620884747229)*r22))+((x2974*x2975))+(((-1.0)*r21*x2976))+(((-1.0)*r21*sj5*x2973))+(((-0.444735007694415)*x2975))+((r22*x2977))+((cj5*r21*x2974))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj5*r11*x2974))+(((-1.0)*r11*x2976))+((x2974*x2978))+(((-1.0)*r11*sj5*x2973))+((r12*x2977))+((cj5*r10*x2973))+(((-0.444735007694415)*x2978))+(((0.204620884747229)*r12))+(((2.4390243902439)*py))))+IKsqr((((cj5*r20*x2973))+(((0.204620884747229)*r22))+((x2974*x2975))+(((-1.0)*r21*x2976))+(((-1.0)*r21*sj5*x2973))+(((-0.444735007694415)*x2975))+((r22*x2977))+((cj5*r21*x2974))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((cj5*r11*x2974))+(((-1.0)*r11*x2976))+((x2974*x2978))+(((-1.0)*r11*sj5*x2973))+((r12*x2977))+((cj5*r10*x2973))+(((-0.444735007694415)*x2978))+(((0.204620884747229)*r12))+(((2.4390243902439)*py))), (((cj5*r20*x2973))+(((0.204620884747229)*r22))+((x2974*x2975))+(((-1.0)*r21*x2976))+(((-1.0)*r21*sj5*x2973))+(((-0.444735007694415)*x2975))+((r22*x2977))+((cj5*r21*x2974))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x2979=(cj5*sj4);
IkReal x2980=((0.135720094919197)*sj3);
IkReal x2981=(cj5*r11);
IkReal x2982=(cj5*r21);
IkReal x2983=((0.20357990508077)*sj3);
IkReal x2984=(r20*sj5);
IkReal x2985=((0.00925751294893567)*cj4);
IkReal x2986=(cj4*r10);
IkReal x2987=((0.27144)*cj3);
IkReal x2988=((0.10827950965428)*cj4);
IkReal x2989=((0.117537022603216)*sj3);
IkReal x2990=(cj4*r22);
IkReal x2991=(cj3*sj4);
IkReal x2992=(cj4*r12);
IkReal x2993=(r10*sj5);
IkReal x2994=(cj4*sj5);
IkReal x2995=((0.135720094919197)*cj3);
IkReal x2996=((0.41)*(IKcos(j1)));
IkReal x2997=((0.41)*(IKsin(j1)));
IkReal x2998=(r11*sj4*sj5);
IkReal x2999=((0.0678600949192303)*cj4*sj3);
IkReal x3000=(r21*sj4*sj5);
evalcond[0]=((((-1.0)*x2997))+(((0.10827950965428)*sj5*x2986))+(((-0.18234135315471)*x2981))+((x2981*x2988))+py+(((-0.216558867852667)*x2998))+(((-0.18234135315471)*x2993))+(((0.216558867852667)*r10*x2979))+(((0.0838945627463637)*r12))+(((0.187545437253636)*x2992)));
evalcond[1]=((((-1.0)*x2996))+((x2984*x2988))+(((-0.18234135315471)*x2982))+(((-0.18234135315471)*x2984))+(((0.216558867852667)*r20*x2979))+pz+((x2982*x2988))+(((-0.216558867852667)*x3000))+(((0.0838945627463637)*r22))+(((0.187545437253636)*x2990)));
evalcond[2]=((((-1.0)*x2996))+((x2981*x2999))+(((-1.0)*x2982*x2985))+((r11*x2987*x2994))+(((-1.0)*x2984*x2985))+(((0.235073880801598)*r12*x2991))+(((-0.0160344678271334)*x2990))+(((-1.0)*x2980*x2998))+(((-0.0648043305514941)*x2984))+(((-0.0648043305514941)*x2982))+(((-1.0)*r12*x2989))+((r10*x2979*x2980))+(((-1.0)*cj5*x2986*x2987))+(((0.0678600949192303)*sj3*sj5*x2986))+((r11*x2979*x2995))+((x2981*x2983))+pz+(((0.135720094919197)*x2991*x2993))+(((0.0160344678271334)*r22))+((x2989*x2992))+(((-0.0185150129489311)*r20*x2979))+((x2983*x2993))+(((0.0185150129489311)*x3000)));
evalcond[3]=(((r20*x2979*x2980))+((x2983*x2984))+(((-1.0)*cj4*cj5*r20*x2987))+(((0.135720094919197)*x2984*x2991))+((x2985*x2993))+(((-0.0160344678271334)*r12))+((x2982*x2999))+(((0.235073880801598)*r22*x2991))+(((-0.0185150129489311)*x2998))+((x2981*x2985))+((r21*x2987*x2994))+(((-1.0)*py))+(((0.0185150129489311)*r10*x2979))+(((-1.0)*r22*x2989))+((x2982*x2983))+(((-1.0)*x2980*x3000))+(((0.0648043305514941)*x2981))+((x2989*x2990))+(((0.0160344678271334)*x2992))+((x2984*x2999))+((r21*x2979*x2995))+x2997+(((0.0648043305514941)*x2993)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3001=((0.250000349687704)*r12);
IkReal x3002=((0.749999650312296)*cj4);
IkReal x3003=(cj1*r22);
IkReal x3004=((0.866025201892125)*sj4);
IkReal x3005=(cj1*r20);
IkReal x3006=(sj1*sj5);
IkReal x3007=((0.433012903784321)*r20);
IkReal x3008=((0.433012903784321)*sj5);
IkReal x3009=(cj1*r10);
IkReal x3010=(r22*sj1);
IkReal x3011=((0.433012903784321)*r10);
IkReal x3012=((0.433012903784321)*cj5);
IkReal x3013=(cj1*r21);
IkReal x3014=(cj1*r11);
IkReal x3015=(r11*sj1);
IkReal x3016=(cj1*cj4*x3008);
IkReal x3017=(cj5*sj1*x3004);
IkReal x3018=(cj4*r21*x3012);
if( IKabs(((((-1.0)*cj1*r12*x3002))+(((-1.0)*cj4*x3008*x3009))+((x3008*x3009))+((x3012*x3014))+(((-1.0)*r21*sj1*x3012))+((x3002*x3010))+(((-1.0)*cj1*x3001))+((sj1*x3018))+((cj4*x3006*x3007))+(((-1.0)*cj5*x3004*x3009))+((sj5*x3004*x3014))+((r20*x3017))+(((-1.0)*cj4*x3012*x3014))+(((-1.0)*x3006*x3007))+(((0.250000349687704)*x3010))+(((-1.0)*r21*x3004*x3006)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x3005*x3008))+((cj5*x3004*x3005))+((r10*x3017))+((cj4*x3012*x3015))+((cj4*x3012*x3013))+((x3002*x3003))+((cj4*x3006*x3011))+((sj1*x3001))+((r12*sj1*x3002))+(((-1.0)*x3005*x3008))+(((0.250000349687704)*x3003))+(((-1.0)*x3006*x3011))+(((-1.0)*sj5*x3004*x3013))+(((-1.0)*r11*x3004*x3006))+(((-1.0)*x3012*x3015))+(((-1.0)*x3012*x3013)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*r12*x3002))+(((-1.0)*cj4*x3008*x3009))+((x3008*x3009))+((x3012*x3014))+(((-1.0)*r21*sj1*x3012))+((x3002*x3010))+(((-1.0)*cj1*x3001))+((sj1*x3018))+((cj4*x3006*x3007))+(((-1.0)*cj5*x3004*x3009))+((sj5*x3004*x3014))+((r20*x3017))+(((-1.0)*cj4*x3012*x3014))+(((-1.0)*x3006*x3007))+(((0.250000349687704)*x3010))+(((-1.0)*r21*x3004*x3006))))+IKsqr((((cj4*x3005*x3008))+((cj5*x3004*x3005))+((r10*x3017))+((cj4*x3012*x3015))+((cj4*x3012*x3013))+((x3002*x3003))+((cj4*x3006*x3011))+((sj1*x3001))+((r12*sj1*x3002))+(((-1.0)*x3005*x3008))+(((0.250000349687704)*x3003))+(((-1.0)*x3006*x3011))+(((-1.0)*sj5*x3004*x3013))+(((-1.0)*r11*x3004*x3006))+(((-1.0)*x3012*x3015))+(((-1.0)*x3012*x3013))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj1*r12*x3002))+(((-1.0)*cj4*x3008*x3009))+((x3008*x3009))+((x3012*x3014))+(((-1.0)*r21*sj1*x3012))+((x3002*x3010))+(((-1.0)*cj1*x3001))+((sj1*x3018))+((cj4*x3006*x3007))+(((-1.0)*cj5*x3004*x3009))+((sj5*x3004*x3014))+((r20*x3017))+(((-1.0)*cj4*x3012*x3014))+(((-1.0)*x3006*x3007))+(((0.250000349687704)*x3010))+(((-1.0)*r21*x3004*x3006))), (((cj4*x3005*x3008))+((cj5*x3004*x3005))+((r10*x3017))+((cj4*x3012*x3015))+((cj4*x3012*x3013))+((x3002*x3003))+((cj4*x3006*x3011))+((sj1*x3001))+((r12*sj1*x3002))+(((-1.0)*x3005*x3008))+(((0.250000349687704)*x3003))+(((-1.0)*x3006*x3011))+(((-1.0)*sj5*x3004*x3013))+(((-1.0)*r11*x3004*x3006))+(((-1.0)*x3012*x3015))+(((-1.0)*x3012*x3013))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3019=IKcos(j2);
IkReal x3020=IKsin(j2);
IkReal x3021=(cj5*r11);
IkReal x3022=((0.433012903784321)*cj4);
IkReal x3023=(r21*sj5);
IkReal x3024=((0.500000349687582)*sj4);
IkReal x3025=((0.749999650312296)*sj3);
IkReal x3026=(cj3*cj4);
IkReal x3027=(cj5*r10);
IkReal x3028=((0.0185150129489311)*sj4);
IkReal x3029=(r20*sj5);
IkReal x3030=(cj4*r22);
IkReal x3031=(r10*sj5);
IkReal x3032=(r12*sj3);
IkReal x3033=(r11*sj5);
IkReal x3034=(r22*sj3);
IkReal x3035=((0.27144)*sj1);
IkReal x3036=((0.00925751294893567)*cj4);
IkReal x3037=(cj5*r20);
IkReal x3038=(cj5*r21);
IkReal x3039=(cj4*r12);
IkReal x3040=((0.866025201892125)*sj4);
IkReal x3041=(sj1*x3019);
IkReal x3042=(cj1*x3019);
IkReal x3043=(cj1*x3020);
IkReal x3044=((0.250000349687704)*cj4*sj3);
IkReal x3045=(cj3*x3040);
IkReal x3046=(sj1*x3020);
IkReal x3047=((1.0)*x3043);
evalcond[0]=((((-0.250000349687704)*r22))+((x3023*x3040))+x3042+x3046+(((0.433012903784321)*x3038))+(((0.433012903784321)*x3029))+(((-0.749999650312296)*x3030))+(((-1.0)*x3022*x3029))+(((-1.0)*x3022*x3038))+(((-1.0)*x3037*x3040)));
evalcond[1]=((((-0.250000349687704)*r12))+((x3033*x3040))+x3041+(((-1.0)*x3021*x3022))+(((-1.0)*x3027*x3040))+(((-1.0)*x3047))+(((0.433012903784321)*x3031))+(((0.433012903784321)*x3021))+(((-0.749999650312296)*x3039))+(((-1.0)*x3022*x3031)));
evalcond[2]=((((-0.27144)*x3042))+((x3028*x3037))+(((0.0160344678271334)*x3030))+((x3036*x3038))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*x3020*x3035))+(((-1.0)*pz))+(((-1.0)*x3023*x3028))+(((0.0648043305514941)*x3029))+(((0.0648043305514941)*x3038))+((x3029*x3036)));
evalcond[3]=((((0.0160344678271334)*x3039))+(((-1.0)*x3019*x3035))+((x3027*x3028))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((0.27144)*x3043))+(((-1.0)*py))+(((-1.0)*x3028*x3033))+(((0.0648043305514941)*x3021))+((x3031*x3036))+((x3021*x3036))+(((0.0648043305514941)*x3031)));
evalcond[4]=(((r22*x3045))+(((-1.0)*x3026*x3037))+(((-1.0)*sj3*x3023*x3024))+((x3029*x3044))+x3041+(((-0.433012903784321)*x3034))+((cj3*x3024*x3029))+((x3022*x3034))+(((-1.0)*x3047))+((x3025*x3038))+((cj3*x3024*x3038))+((x3025*x3029))+((x3038*x3044))+((x3023*x3026))+((sj3*x3024*x3037)));
evalcond[5]=((((-1.0)*sj3*x3024*x3033))+((sj3*x3024*x3027))+((x3026*x3033))+((x3021*x3044))+(((-0.433012903784321)*x3032))+((x3022*x3032))+((x3021*x3025))+(((-1.0)*x3026*x3027))+((x3025*x3031))+((cj3*x3024*x3031))+(((-1.0)*x3046))+(((-1.0)*x3042))+((r12*x3045))+((cj3*x3021*x3024))+((x3031*x3044)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3048=((0.26409636501044)*cj4);
IkReal x3049=(r20*sj5);
IkReal x3050=(cj5*r21);
IkReal x3051=((0.457427895740576)*cj4);
IkReal x3052=(r00*sj5);
IkReal x3053=((0.528192360616262)*sj4);
IkReal x3054=(cj5*r01);
if( IKabs(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((0.444735007694415)*x3054))+(((0.444735007694415)*x3052))+((r01*sj5*x3053))+(((-1.0)*x3048*x3054))+(((-1.0)*x3048*x3052))+(((-1.0)*r02*x3051))+(((-1.0)*cj5*r00*x3053)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x3048*x3050))+(((-0.444735007694415)*x3050))+(((0.204620884747229)*r22))+((x3048*x3049))+(((-0.444735007694415)*x3049))+(((-1.0)*r21*sj5*x3053))+((r22*x3051))+((cj5*r20*x3053))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((0.444735007694415)*x3054))+(((0.444735007694415)*x3052))+((r01*sj5*x3053))+(((-1.0)*x3048*x3054))+(((-1.0)*x3048*x3052))+(((-1.0)*r02*x3051))+(((-1.0)*cj5*r00*x3053))))+IKsqr((((x3048*x3050))+(((-0.444735007694415)*x3050))+(((0.204620884747229)*r22))+((x3048*x3049))+(((-0.444735007694415)*x3049))+(((-1.0)*r21*sj5*x3053))+((r22*x3051))+((cj5*r20*x3053))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((0.444735007694415)*x3054))+(((0.444735007694415)*x3052))+((r01*sj5*x3053))+(((-1.0)*x3048*x3054))+(((-1.0)*x3048*x3052))+(((-1.0)*r02*x3051))+(((-1.0)*cj5*r00*x3053))), (((x3048*x3050))+(((-0.444735007694415)*x3050))+(((0.204620884747229)*r22))+((x3048*x3049))+(((-0.444735007694415)*x3049))+(((-1.0)*r21*sj5*x3053))+((r22*x3051))+((cj5*r20*x3053))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3055=((1.0)*px);
IkReal x3056=((0.187545437253636)*cj4);
IkReal x3057=(r20*sj5);
IkReal x3058=(r01*sj3);
IkReal x3059=(cj5*r21);
IkReal x3060=(cj3*r00);
IkReal x3061=((0.0185150129489311)*sj4);
IkReal x3062=(r21*sj5);
IkReal x3063=((0.20357990508077)*sj3);
IkReal x3064=(cj5*sj4);
IkReal x3065=((0.135720094919197)*sj3);
IkReal x3066=(cj4*cj5);
IkReal x3067=(r00*sj5);
IkReal x3068=((0.00925751294893567)*cj4);
IkReal x3069=((0.10827950965428)*cj4);
IkReal x3070=(cj4*r22);
IkReal x3071=((0.117537022603216)*sj3);
IkReal x3072=(cj5*r01);
IkReal x3073=((0.135720094919197)*cj3);
IkReal x3074=(r01*sj5);
IkReal x3075=((0.216558867852667)*sj4);
IkReal x3076=(cj4*r02);
IkReal x3077=((0.27144)*cj3);
IkReal x3078=((0.41)*(IKsin(j1)));
IkReal x3079=((0.41)*(IKcos(j1)));
IkReal x3080=((0.135720094919197)*sj4*sj5);
IkReal x3081=((0.0678600949192303)*cj4*sj3);
IkReal x3082=((0.235073880801598)*cj3*sj4);
IkReal x3083=(x3078+x3055);
evalcond[0]=((((0.216558867852667)*r20*x3064))+(((-1.0)*x3062*x3075))+(((-0.18234135315471)*x3059))+(((-0.18234135315471)*x3057))+(((-1.0)*x3079))+((r22*x3056))+pz+((x3059*x3069))+((x3057*x3069))+(((0.0838945627463637)*r22)));
evalcond[1]=((((0.18234135315471)*x3067))+(((-1.0)*x3083))+(((-1.0)*x3067*x3069))+(((0.18234135315471)*x3072))+(((-0.0838945627463637)*r02))+(((-0.216558867852667)*r00*x3064))+(((-1.0)*r02*x3056))+(((-0.10827950965428)*r01*x3066))+((x3074*x3075)));
evalcond[2]=((((-1.0)*r20*x3064*x3065))+(((-1.0)*x3083))+(((-1.0)*x3061*x3074))+(((0.0648043305514941)*x3072))+(((0.00925751294893567)*r01*x3066))+(((-0.0160344678271334)*r02))+((r22*x3071))+((sj4*x3062*x3065))+(((-1.0)*sj4*x3059*x3073))+(((-1.0)*x3059*x3081))+(((-1.0)*x3057*x3081))+(((-1.0)*sj4*x3057*x3073))+(((-1.0)*r22*x3082))+((x3067*x3068))+(((-1.0)*x3070*x3071))+(((-1.0)*cj4*x3062*x3077))+((r20*x3066*x3077))+(((-1.0)*x3059*x3063))+((cj5*r00*x3061))+(((-1.0)*x3057*x3063))+(((0.0160344678271334)*x3076))+(((0.0648043305514941)*x3067)));
evalcond[3]=((((0.0678600949192303)*x3058*x3066))+(((-0.27144)*x3060*x3066))+x3079+(((-1.0)*r02*x3071))+((x3060*x3080))+(((-1.0)*x3058*x3080))+(((-1.0)*x3061*x3062))+((cj5*r20*x3061))+((x3067*x3081))+(((-0.0160344678271334)*r22))+(((0.20357990508077)*cj5*x3058))+((r02*x3082))+(((-1.0)*pz))+((x3059*x3068))+((cj4*x3074*x3077))+((x3057*x3068))+((x3071*x3076))+(((0.0648043305514941)*x3059))+(((0.0648043305514941)*x3057))+((r01*x3064*x3073))+((r00*x3064*x3065))+((x3063*x3067))+(((0.0160344678271334)*x3070)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3084=((0.250000349687704)*sj1);
IkReal x3085=(cj1*cj4);
IkReal x3086=((0.749999650312296)*r22);
IkReal x3087=(cj4*sj1);
IkReal x3088=((0.749999650312296)*r02);
IkReal x3089=((0.250000349687704)*cj1);
IkReal x3090=((0.433012903784321)*r00*sj5);
IkReal x3091=((0.433012903784321)*r20*sj5);
IkReal x3092=((0.433012903784321)*cj5*r01);
IkReal x3093=((0.433012903784321)*cj5*r21);
IkReal x3094=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3095=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3096=((0.866025201892125)*r01*sj4*sj5);
IkReal x3097=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((r00*x3095))+((x3087*x3091))+((x3087*x3093))+((r20*x3094))+((r02*x3089))+((x3085*x3090))+((x3085*x3092))+(((-1.0)*sj1*x3097))+(((-1.0)*sj1*x3091))+(((-1.0)*sj1*x3093))+((x3085*x3088))+(((-1.0)*cj1*x3090))+(((-1.0)*cj1*x3096))+(((-1.0)*cj1*x3092))+((r22*x3084))+((x3086*x3087)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj1*x3096))+((sj1*x3090))+((sj1*x3092))+((r20*x3095))+((x3085*x3091))+((x3085*x3093))+((x3085*x3086))+(((-1.0)*r00*x3094))+(((-1.0)*cj1*x3093))+(((-1.0)*cj1*x3091))+(((-1.0)*cj1*x3097))+(((-1.0)*r02*x3084))+((r22*x3089))+(((-1.0)*x3087*x3092))+(((-1.0)*x3087*x3090))+(((-1.0)*x3087*x3088)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r00*x3095))+((x3087*x3091))+((x3087*x3093))+((r20*x3094))+((r02*x3089))+((x3085*x3090))+((x3085*x3092))+(((-1.0)*sj1*x3097))+(((-1.0)*sj1*x3091))+(((-1.0)*sj1*x3093))+((x3085*x3088))+(((-1.0)*cj1*x3090))+(((-1.0)*cj1*x3096))+(((-1.0)*cj1*x3092))+((r22*x3084))+((x3086*x3087))))+IKsqr((((sj1*x3096))+((sj1*x3090))+((sj1*x3092))+((r20*x3095))+((x3085*x3091))+((x3085*x3093))+((x3085*x3086))+(((-1.0)*r00*x3094))+(((-1.0)*cj1*x3093))+(((-1.0)*cj1*x3091))+(((-1.0)*cj1*x3097))+(((-1.0)*r02*x3084))+((r22*x3089))+(((-1.0)*x3087*x3092))+(((-1.0)*x3087*x3090))+(((-1.0)*x3087*x3088))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r00*x3095))+((x3087*x3091))+((x3087*x3093))+((r20*x3094))+((r02*x3089))+((x3085*x3090))+((x3085*x3092))+(((-1.0)*sj1*x3097))+(((-1.0)*sj1*x3091))+(((-1.0)*sj1*x3093))+((x3085*x3088))+(((-1.0)*cj1*x3090))+(((-1.0)*cj1*x3096))+(((-1.0)*cj1*x3092))+((r22*x3084))+((x3086*x3087))), (((sj1*x3096))+((sj1*x3090))+((sj1*x3092))+((r20*x3095))+((x3085*x3091))+((x3085*x3093))+((x3085*x3086))+(((-1.0)*r00*x3094))+(((-1.0)*cj1*x3093))+(((-1.0)*cj1*x3091))+(((-1.0)*cj1*x3097))+(((-1.0)*r02*x3084))+((r22*x3089))+(((-1.0)*x3087*x3092))+(((-1.0)*x3087*x3090))+(((-1.0)*x3087*x3088))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3098=IKsin(j2);
IkReal x3099=IKcos(j2);
IkReal x3100=((0.749999650312296)*sj3);
IkReal x3101=(cj5*r01);
IkReal x3102=(r00*sj5);
IkReal x3103=(cj4*cj5);
IkReal x3104=((1.0)*cj3);
IkReal x3105=(r21*sj3);
IkReal x3106=(cj4*sj5);
IkReal x3107=(cj3*r21);
IkReal x3108=((0.500000349687582)*sj4);
IkReal x3109=((0.433012903784321)*r20);
IkReal x3110=(cj4*r22);
IkReal x3111=((0.433012903784321)*sj3);
IkReal x3112=((0.433012903784321)*cj4);
IkReal x3113=(r01*sj5);
IkReal x3114=(r20*sj5);
IkReal x3115=((0.0160344678271334)*r02);
IkReal x3116=(cj4*r02);
IkReal x3117=((0.00925751294893567)*cj4);
IkReal x3118=((0.0185150129489311)*sj4);
IkReal x3119=(r21*sj5);
IkReal x3120=(cj5*r21);
IkReal x3121=((0.866025201892125)*sj4);
IkReal x3122=(cj5*r20);
IkReal x3123=(cj5*r00);
IkReal x3124=((0.250000349687704)*sj3);
IkReal x3125=(cj1*x3099);
IkReal x3126=(sj1*x3098);
IkReal x3127=(cj1*x3098);
IkReal x3128=(sj1*x3099);
IkReal x3129=(x3126+x3125);
evalcond[0]=(x3129+(((-0.250000349687704)*r22))+(((-0.433012903784321)*r21*x3103))+((sj5*x3109))+(((-0.749999650312296)*x3110))+((x3119*x3121))+(((-1.0)*x3106*x3109))+(((-1.0)*x3121*x3122))+(((0.433012903784321)*x3120)));
evalcond[1]=((((-0.250000349687704)*r02))+x3127+(((0.433012903784321)*x3102))+(((0.433012903784321)*x3101))+(((-1.0)*x3102*x3112))+(((-0.749999650312296)*x3116))+(((-1.0)*x3128))+(((-1.0)*x3101*x3112))+((x3113*x3121))+(((-1.0)*x3121*x3123)));
evalcond[2]=((((0.0648043305514941)*x3114))+(((0.0648043305514941)*x3120))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+((x3118*x3122))+(((-1.0)*pz))+(((-1.0)*x3118*x3119))+(((-0.27144)*x3126))+(((-0.27144)*x3125))+(((0.00925751294893567)*r20*x3106))+(((0.0160344678271334)*x3110))+(((0.00925751294893567)*r21*x3103)));
evalcond[3]=((((-1.0)*x3113*x3118))+((x3101*x3117))+(((0.0648043305514941)*x3102))+(((0.0648043305514941)*x3101))+(((-1.0)*x3115))+((x3102*x3117))+(((-0.41)*sj1))+((x3118*x3123))+(((-1.0)*px))+(((-0.27144)*x3127))+(((0.27144)*x3128))+((cj4*x3115)));
evalcond[4]=(((cj3*x3101*x3108))+x3129+(((-1.0)*r02*x3111))+((cj3*x3102*x3108))+((cj4*x3102*x3124))+((x3111*x3116))+((sj3*x3108*x3123))+((cj4*x3101*x3124))+((cj3*r02*x3121))+(((-1.0)*sj3*x3108*x3113))+((cj3*r01*x3106))+(((-1.0)*r00*x3103*x3104))+((x3100*x3101))+((x3100*x3102)));
evalcond[5]=((((-1.0)*sj5*x3105*x3108))+x3128+((cj3*r22*x3121))+(((-1.0)*x3127))+((sj3*x3108*x3122))+(((-1.0)*r20*x3103*x3104))+((cj3*x3108*x3114))+(((0.250000349687704)*x3103*x3105))+((x3110*x3111))+(((-1.0)*r22*x3111))+((x3106*x3107))+((x3100*x3120))+((cj5*x3107*x3108))+((r20*x3106*x3124))+((x3100*x3114)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3130=(cj5*r21);
IkReal x3131=((0.26409636501044)*cj4);
IkReal x3132=((0.457427895740576)*cj4);
IkReal x3133=((0.528192360616262)*sj4);
IkReal x3134=(cj5*r01);
IkReal x3135=((0.444735007694415)*sj5);
if( IKabs((((x3131*x3134))+(((-1.0)*r01*sj5*x3133))+((cj5*r00*x3133))+(((-0.444735007694415)*x3134))+((r02*x3132))+(((0.204620884747229)*r02))+((r00*sj5*x3131))+(((-1.0)*r00*x3135))+(((2.4390243902439)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+((cj5*r20*x3133))+((x3130*x3131))+(((-1.0)*r20*x3135))+(((-1.0)*r21*sj5*x3133))+((r20*sj5*x3131))+(((-0.444735007694415)*x3130))+((r22*x3132))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x3131*x3134))+(((-1.0)*r01*sj5*x3133))+((cj5*r00*x3133))+(((-0.444735007694415)*x3134))+((r02*x3132))+(((0.204620884747229)*r02))+((r00*sj5*x3131))+(((-1.0)*r00*x3135))+(((2.4390243902439)*px))))+IKsqr(((((0.204620884747229)*r22))+((cj5*r20*x3133))+((x3130*x3131))+(((-1.0)*r20*x3135))+(((-1.0)*r21*sj5*x3133))+((r20*sj5*x3131))+(((-0.444735007694415)*x3130))+((r22*x3132))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((x3131*x3134))+(((-1.0)*r01*sj5*x3133))+((cj5*r00*x3133))+(((-0.444735007694415)*x3134))+((r02*x3132))+(((0.204620884747229)*r02))+((r00*sj5*x3131))+(((-1.0)*r00*x3135))+(((2.4390243902439)*px))), ((((0.204620884747229)*r22))+((cj5*r20*x3133))+((x3130*x3131))+(((-1.0)*r20*x3135))+(((-1.0)*r21*sj5*x3133))+((r20*sj5*x3131))+(((-0.444735007694415)*x3130))+((r22*x3132))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3136=((0.187545437253636)*cj4);
IkReal x3137=(cj5*r20);
IkReal x3138=(r01*sj5);
IkReal x3139=(cj5*r21);
IkReal x3140=(cj3*r00);
IkReal x3141=(sj4*sj5);
IkReal x3142=((0.20357990508077)*sj3);
IkReal x3143=(r20*sj5);
IkReal x3144=(cj4*cj5);
IkReal x3145=((0.00925751294893567)*cj4);
IkReal x3146=((0.117537022603216)*sj3);
IkReal x3147=((0.10827950965428)*cj4);
IkReal x3148=(r00*sj5);
IkReal x3149=(cj4*r22);
IkReal x3150=(r21*sj5);
IkReal x3151=((0.216558867852667)*sj4);
IkReal x3152=((0.0185150129489311)*sj4);
IkReal x3153=(cj3*sj4);
IkReal x3154=(cj4*r02);
IkReal x3155=(cj5*r01);
IkReal x3156=((0.41)*(IKcos(j1)));
IkReal x3157=((0.41)*(IKsin(j1)));
IkReal x3158=((0.135720094919197)*sj3*sj4);
IkReal x3159=((0.0678600949192303)*cj4*sj3);
IkReal x3160=(cj5*r00*sj4);
IkReal x3161=((0.27144)*cj3*cj4);
evalcond[0]=((((-1.0)*x3157))+((x3147*x3148))+(((0.10827950965428)*r01*x3144))+((cj5*r00*x3151))+((r02*x3136))+px+(((-0.18234135315471)*x3155))+(((-1.0)*x3138*x3151))+(((-0.18234135315471)*x3148))+(((0.0838945627463637)*r02)));
evalcond[1]=((((-1.0)*x3156))+(((-0.18234135315471)*x3139))+((x3143*x3147))+((r22*x3136))+pz+((x3139*x3147))+(((-0.216558867852667)*r21*x3141))+(((0.0838945627463637)*r22))+(((-0.18234135315471)*x3143))+((x3137*x3151)));
evalcond[2]=((((-1.0)*x3156))+(((-0.0648043305514941)*x3143))+((x3138*x3161))+((x3142*x3155))+(((-1.0)*x3143*x3145))+((x3142*x3148))+(((-0.27144)*x3140*x3144))+(((0.135720094919197)*x3140*x3141))+(((0.235073880801598)*r02*x3153))+(((0.0185150129489311)*r21*x3141))+((x3148*x3159))+(((-0.0160344678271334)*x3149))+((cj5*r00*x3158))+(((0.135720094919197)*x3153*x3155))+(((-0.0648043305514941)*x3139))+(((-1.0)*r02*x3146))+pz+(((-1.0)*x3137*x3152))+(((0.0160344678271334)*r22))+(((-1.0)*x3139*x3145))+(((0.0678600949192303)*r01*sj3*x3144))+(((-1.0)*x3138*x3158))+((x3146*x3154)));
evalcond[3]=((((0.235073880801598)*r22*x3153))+((x3146*x3149))+x3157+(((-1.0)*r22*x3146))+((x3142*x3143))+(((-0.0160344678271334)*r02))+((x3150*x3161))+((x3145*x3148))+(((0.0160344678271334)*x3154))+(((0.135720094919197)*x3139*x3153))+((cj5*r00*x3152))+(((0.0648043305514941)*x3155))+(((0.00925751294893567)*r01*x3144))+(((-0.135720094919197)*r21*sj3*x3141))+((x3143*x3159))+(((-1.0)*px))+(((0.135720094919197)*cj3*r20*x3141))+((x3139*x3159))+(((0.0648043305514941)*x3148))+((x3139*x3142))+(((-1.0)*x3137*x3161))+(((-1.0)*x3138*x3152))+((x3137*x3158)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3162=(r02*sj1);
IkReal x3163=(cj1*cj4);
IkReal x3164=((0.749999650312296)*r22);
IkReal x3165=(cj4*sj1);
IkReal x3166=((0.250000349687704)*r22);
IkReal x3167=((0.433012903784321)*r00*sj5);
IkReal x3168=((0.433012903784321)*r20*sj5);
IkReal x3169=((0.433012903784321)*cj5*r01);
IkReal x3170=((0.433012903784321)*cj5*r21);
IkReal x3171=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3172=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3173=((0.866025201892125)*r01*sj4*sj5);
IkReal x3174=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((cj1*x3169))+((cj1*x3167))+(((-1.0)*x3163*x3169))+(((-1.0)*x3163*x3167))+((cj1*x3173))+(((-1.0)*sj1*x3174))+(((-1.0)*sj1*x3170))+((x3165*x3170))+(((-1.0)*r00*x3172))+((sj1*x3166))+(((-1.0)*sj1*x3168))+(((-0.749999650312296)*r02*x3163))+(((-0.250000349687704)*cj1*r02))+((r20*x3171))+((x3165*x3168))+((x3164*x3165)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*x3166))+(((-1.0)*cj1*x3168))+(((-1.0)*sj1*x3173))+(((-1.0)*cj1*x3170))+(((-1.0)*cj1*x3174))+((x3163*x3168))+((x3163*x3164))+(((0.749999650312296)*cj4*x3162))+(((-1.0)*sj1*x3167))+(((-1.0)*sj1*x3169))+(((0.250000349687704)*x3162))+((r00*x3171))+((r20*x3172))+((x3163*x3170))+((x3165*x3169))+((x3165*x3167)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj1*x3169))+((cj1*x3167))+(((-1.0)*x3163*x3169))+(((-1.0)*x3163*x3167))+((cj1*x3173))+(((-1.0)*sj1*x3174))+(((-1.0)*sj1*x3170))+((x3165*x3170))+(((-1.0)*r00*x3172))+((sj1*x3166))+(((-1.0)*sj1*x3168))+(((-0.749999650312296)*r02*x3163))+(((-0.250000349687704)*cj1*r02))+((r20*x3171))+((x3165*x3168))+((x3164*x3165))))+IKsqr((((cj1*x3166))+(((-1.0)*cj1*x3168))+(((-1.0)*sj1*x3173))+(((-1.0)*cj1*x3170))+(((-1.0)*cj1*x3174))+((x3163*x3168))+((x3163*x3164))+(((0.749999650312296)*cj4*x3162))+(((-1.0)*sj1*x3167))+(((-1.0)*sj1*x3169))+(((0.250000349687704)*x3162))+((r00*x3171))+((r20*x3172))+((x3163*x3170))+((x3165*x3169))+((x3165*x3167))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj1*x3169))+((cj1*x3167))+(((-1.0)*x3163*x3169))+(((-1.0)*x3163*x3167))+((cj1*x3173))+(((-1.0)*sj1*x3174))+(((-1.0)*sj1*x3170))+((x3165*x3170))+(((-1.0)*r00*x3172))+((sj1*x3166))+(((-1.0)*sj1*x3168))+(((-0.749999650312296)*r02*x3163))+(((-0.250000349687704)*cj1*r02))+((r20*x3171))+((x3165*x3168))+((x3164*x3165))), (((cj1*x3166))+(((-1.0)*cj1*x3168))+(((-1.0)*sj1*x3173))+(((-1.0)*cj1*x3170))+(((-1.0)*cj1*x3174))+((x3163*x3168))+((x3163*x3164))+(((0.749999650312296)*cj4*x3162))+(((-1.0)*sj1*x3167))+(((-1.0)*sj1*x3169))+(((0.250000349687704)*x3162))+((r00*x3171))+((r20*x3172))+((x3163*x3170))+((x3165*x3169))+((x3165*x3167))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3175=IKcos(j2);
IkReal x3176=IKsin(j2);
IkReal x3177=((0.433012903784321)*sj3);
IkReal x3178=((0.749999650312296)*sj3);
IkReal x3179=(r00*sj5);
IkReal x3180=(cj4*cj5);
IkReal x3181=((1.0)*cj3);
IkReal x3182=(cj5*r01);
IkReal x3183=(r21*sj3);
IkReal x3184=(cj4*sj5);
IkReal x3185=(cj3*r21);
IkReal x3186=((0.500000349687582)*sj4);
IkReal x3187=((0.433012903784321)*r20);
IkReal x3188=(cj4*r22);
IkReal x3189=(r20*sj5);
IkReal x3190=((0.0160344678271334)*r02);
IkReal x3191=(cj4*r02);
IkReal x3192=(r01*sj5);
IkReal x3193=(cj5*r00);
IkReal x3194=((0.0185150129489311)*sj4);
IkReal x3195=(r21*sj5);
IkReal x3196=(cj5*r21);
IkReal x3197=((0.866025201892125)*sj4);
IkReal x3198=(cj5*r20);
IkReal x3199=((0.250000349687704)*sj3);
IkReal x3200=(sj1*x3175);
IkReal x3201=(cj1*x3175);
IkReal x3202=(sj1*x3176);
IkReal x3203=(cj1*x3176);
IkReal x3204=((1.0)*x3203);
evalcond[0]=((((-0.749999650312296)*x3188))+(((-1.0)*x3184*x3187))+(((-1.0)*x3197*x3198))+(((-0.250000349687704)*r22))+x3202+x3201+(((0.433012903784321)*x3196))+((x3195*x3197))+(((-0.433012903784321)*r21*x3180))+((sj5*x3187)));
evalcond[1]=((((0.433012903784321)*x3179))+(((-0.250000349687704)*r02))+(((-0.433012903784321)*r01*x3180))+(((-0.433012903784321)*cj4*x3179))+x3200+(((-1.0)*x3193*x3197))+(((0.433012903784321)*x3182))+(((-1.0)*x3204))+((x3192*x3197))+(((-0.749999650312296)*x3191)));
evalcond[2]=((((0.00925751294893567)*r20*x3184))+(((0.00925751294893567)*r21*x3180))+(((0.41)*cj1))+(((0.0160344678271334)*x3188))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+((x3194*x3198))+(((-0.27144)*x3202))+(((-0.27144)*x3201))+(((0.0648043305514941)*x3196))+(((0.0648043305514941)*x3189))+(((-1.0)*x3194*x3195)));
evalcond[3]=((((0.0648043305514941)*x3179))+(((0.27144)*x3203))+(((0.41)*sj1))+((cj4*x3190))+(((-1.0)*x3192*x3194))+(((-1.0)*px))+(((-0.27144)*x3200))+(((0.00925751294893567)*r01*x3180))+(((0.0648043305514941)*x3182))+(((-1.0)*x3190))+(((0.00925751294893567)*cj4*x3179))+((x3193*x3194)));
evalcond[4]=((((-1.0)*sj5*x3183*x3186))+((r20*x3184*x3199))+x3200+((x3184*x3185))+((x3178*x3189))+((sj3*x3186*x3198))+((x3178*x3196))+((cj5*x3185*x3186))+((cj3*r22*x3197))+(((-1.0)*r20*x3180*x3181))+((cj3*x3186*x3189))+((x3177*x3188))+(((-1.0)*x3204))+(((0.250000349687704)*x3180*x3183))+(((-1.0)*r22*x3177)));
evalcond[5]=(((cj3*x3182*x3186))+((x3178*x3182))+(((-1.0)*x3201))+(((-1.0)*x3202))+((sj3*x3186*x3193))+(((-1.0)*r00*x3180*x3181))+((cj3*r02*x3197))+((x3177*x3191))+((cj4*x3179*x3199))+((cj3*x3179*x3186))+((x3178*x3179))+((r01*x3180*x3199))+(((-1.0)*sj3*x3186*x3192))+((cj3*r01*x3184))+(((-1.0)*r02*x3177)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j1, j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3205=(cj4*sj5);
IkReal x3206=(cj0*r00);
IkReal x3207=(cj0*r02);
IkReal x3208=(cj5*r21);
IkReal x3209=((0.216558867852667)*sj4);
IkReal x3210=((0.528192360616262)*sj4);
IkReal x3211=(cj0*cj5*r01);
CheckValue<IkReal> x3212=IKPowWithIntegerCheck(cj0,-2);
if(!x3212.valid){
continue;
}
if( IKabs(((2.4390243902439)*(x3212.value)*(((((-0.187545437253636)*cj4*x3207))+(((0.0098)*cj0*sj0))+((cj0*r01*sj5*x3209))+(((-0.0838945627463637)*x3207))+(((-0.10827950965428)*x3205*x3206))+(((-0.10827950965428)*cj4*x3211))+(((-1.0)*cj5*x3206*x3209))+(((0.18234135315471)*x3211))+(((-1.0)*cj0*px))+(((0.18234135315471)*sj5*x3206)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.26409636501044)*cj4*x3208))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*r20*x3205))+(((-1.0)*r21*sj5*x3210))+((cj5*r20*x3210))+(((-0.444735007694415)*x3208))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((2.4390243902439)*(x3212.value)*(((((-0.187545437253636)*cj4*x3207))+(((0.0098)*cj0*sj0))+((cj0*r01*sj5*x3209))+(((-0.0838945627463637)*x3207))+(((-0.10827950965428)*x3205*x3206))+(((-0.10827950965428)*cj4*x3211))+(((-1.0)*cj5*x3206*x3209))+(((0.18234135315471)*x3211))+(((-1.0)*cj0*px))+(((0.18234135315471)*sj5*x3206))))))+IKsqr(((((0.26409636501044)*cj4*x3208))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*r20*x3205))+(((-1.0)*r21*sj5*x3210))+((cj5*r20*x3210))+(((-0.444735007694415)*x3208))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((2.4390243902439)*(x3212.value)*(((((-0.187545437253636)*cj4*x3207))+(((0.0098)*cj0*sj0))+((cj0*r01*sj5*x3209))+(((-0.0838945627463637)*x3207))+(((-0.10827950965428)*x3205*x3206))+(((-0.10827950965428)*cj4*x3211))+(((-1.0)*cj5*x3206*x3209))+(((0.18234135315471)*x3211))+(((-1.0)*cj0*px))+(((0.18234135315471)*sj5*x3206))))), ((((0.26409636501044)*cj4*x3208))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*r20*x3205))+(((-1.0)*r21*sj5*x3210))+((cj5*r20*x3210))+(((-0.444735007694415)*x3208))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x3213=IKsin(j1);
IkReal x3214=IKcos(j1);
IkReal x3215=sj0*sj0;
IkReal x3216=cj0*cj0;
IkReal x3217=((0.0098)*cj0);
IkReal x3218=(cj0*cj5);
IkReal x3219=(cj5*sj0);
IkReal x3220=((0.0648043305514941)*r21);
IkReal x3221=(r00*sj5);
IkReal x3222=((0.20357990508077)*sj3);
IkReal x3223=((0.135720094919197)*r21);
IkReal x3224=((1.0)*px);
IkReal x3225=((0.117537022603216)*sj3);
IkReal x3226=((0.00925751294893567)*cj4);
IkReal x3227=(r10*sj4);
IkReal x3228=(sj0*sj5);
IkReal x3229=(cj4*sj0);
IkReal x3230=(r20*sj5);
IkReal x3231=((0.10827950965428)*cj4);
IkReal x3232=(cj3*sj4);
IkReal x3233=((0.135720094919197)*sj5);
IkReal x3234=((0.117537022603216)*r11);
IkReal x3235=(cj5*r01);
IkReal x3236=(cj4*r02);
IkReal x3237=((0.117537022603216)*cj4);
IkReal x3238=((0.0160344678271334)*r02);
IkReal x3239=((0.0648043305514941)*r11);
IkReal x3240=((0.0160344678271334)*r12);
IkReal x3241=(cj0*cj4);
IkReal x3242=(cj5*sj3);
IkReal x3243=((0.0678600949192303)*cj4);
IkReal x3244=(r10*sj5);
IkReal x3245=((1.0)*py);
IkReal x3246=(cj5*r00);
IkReal x3247=(cj0*r21);
IkReal x3248=(r11*sj5);
IkReal x3249=((0.0160344678271334)*r22);
IkReal x3250=(r00*sj4);
IkReal x3251=((1.0)*pz);
IkReal x3252=(r22*sj0);
IkReal x3253=(sj3*sj4);
IkReal x3254=(cj5*r21);
IkReal x3255=(r21*sj3);
IkReal x3256=(cj0*r22);
IkReal x3257=((0.0185150129489311)*sj4);
IkReal x3258=(cj5*r11);
IkReal x3259=(r01*sj5);
IkReal x3260=((0.216558867852667)*sj4);
IkReal x3261=((0.135720094919197)*r20);
IkReal x3262=(sj0*x3217);
IkReal x3263=(sj4*x3228);
IkReal x3264=((0.27144)*cj3*cj4);
IkReal x3265=(r11*x3226);
IkReal x3266=((0.41)*x3213);
IkReal x3267=(cj0*x3244);
IkReal x3268=(sj5*x3257);
IkReal x3269=((0.41)*x3214);
IkReal x3270=(cj0*sj0*x3266);
evalcond[0]=((((-0.18234135315471)*x3230))+((cj5*r20*x3260))+(((-1.0)*x3269))+(((0.187545437253636)*cj4*r22))+(((-0.18234135315471)*x3254))+((x3231*x3254))+pz+((x3230*x3231))+(((0.0838945627463637)*r22))+(((-1.0)*r21*sj5*x3260)));
evalcond[1]=((((-1.0)*sj0*x3245))+(((-0.216558867852667)*x3219*x3227))+((r11*x3228*x3260))+(((-0.187545437253636)*r12*x3229))+(((-1.0)*x3262))+(((0.18234135315471)*r10*x3228))+(((-1.0)*r10*x3228*x3231))+(((0.18234135315471)*r11*x3219))+(((-0.0838945627463637)*r12*sj0))+(((-1.0)*x3215*x3266))+(((-1.0)*r11*x3219*x3231)));
evalcond[2]=(((cj0*x3259*x3260))+(((-1.0)*r01*x3218*x3231))+(((-0.0838945627463637)*cj0*r02))+(((-1.0)*cj0*x3224))+x3262+(((-1.0)*cj0*x3221*x3231))+(((0.18234135315471)*cj0*x3221))+(((-0.187545437253636)*cj0*x3236))+(((-1.0)*x3216*x3266))+(((0.18234135315471)*r01*x3218))+(((-0.216558867852667)*x3218*x3250)));
evalcond[3]=((((-1.0)*cj5*r10*x3264))+((x3222*x3258))+((cj3*x3227*x3233))+((sj0*x3269))+(((-1.0)*sj0*x3249))+(((0.135720094919197)*x3227*x3242))+(((0.0648043305514941)*r20*x3228))+((r20*x3226*x3228))+((sj3*x3243*x3244))+(((0.235073880801598)*r12*x3232))+(((-1.0)*r11*x3233*x3253))+(((-1.0)*sj0*x3251))+((r11*x3242*x3243))+(((-1.0)*r21*x3228*x3257))+((x3222*x3244))+((x3248*x3264))+((cj4*r12*x3225))+((x3229*x3249))+((x3219*x3220))+((r20*x3219*x3257))+(((-1.0)*r12*x3225))+((r21*x3219*x3226))+(((0.135720094919197)*x3232*x3258)));
evalcond[4]=(((x3225*x3236))+(((-1.0)*r01*x3233*x3253))+(((0.135720094919197)*x3232*x3235))+((sj3*x3235*x3243))+(((-1.0)*r02*x3225))+(((0.235073880801598)*r02*x3232))+((x3218*x3220))+((cj0*x3226*x3230))+(((0.135720094919197)*x3221*x3232))+(((-1.0)*cj0*x3251))+(((0.0648043305514941)*cj0*x3230))+((r21*x3218*x3226))+((x3221*x3222))+((x3222*x3235))+((sj3*x3221*x3243))+((x3241*x3249))+(((-1.0)*x3246*x3264))+(((-1.0)*cj0*x3249))+((x3259*x3264))+(((-1.0)*x3247*x3268))+(((0.135720094919197)*x3242*x3250))+((r20*x3218*x3257))+((cj0*x3269)));
evalcond[5]=(((cj5*x3239))+((r20*x3219*x3264))+(((-1.0)*x3219*x3223*x3232))+((x3226*x3244))+(((-1.0)*r21*x3228*x3264))+(((-1.0)*r21*x3219*x3222))+((cj4*x3240))+(((-1.0)*r22*x3225*x3229))+(((-0.235073880801598)*x3232*x3252))+(((-1.0)*sj0*x3266))+(((-1.0)*x3228*x3232*x3261))+(((-1.0)*r20*sj3*x3228*x3243))+(((-1.0)*x3248*x3257))+((x3226*x3258))+(((-1.0)*x3219*x3253*x3261))+(((-1.0)*x3245))+(((-1.0)*x3240))+((x3223*x3228*x3253))+(((-1.0)*x3219*x3243*x3255))+((x3225*x3252))+(((-1.0)*x3217))+(((0.0185150129489311)*cj5*x3227))+(((-1.0)*r20*x3222*x3228))+(((0.0648043305514941)*x3244)));
evalcond[6]=((((-0.135720094919197)*cj0*x3230*x3232))+(((-0.0678600949192303)*sj3*x3230*x3241))+((x3246*x3257))+(((0.0160344678271334)*x3236))+(((-1.0)*cj0*x3222*x3230))+(((-0.235073880801598)*x3232*x3256))+(((-0.27144)*cj3*r21*sj5*x3241))+((cj0*sj5*x3223*x3253))+((r20*x3218*x3264))+((x3221*x3226))+(((-1.0)*r21*x3218*x3222))+(((-1.0)*x3257*x3259))+(((0.0648043305514941)*x3221))+(((-1.0)*x3218*x3243*x3255))+(((-1.0)*x3238))+((x3225*x3256))+(((0.0648043305514941)*x3235))+((x3226*x3235))+(((0.0098)*sj0))+(((-1.0)*cj0*x3266))+(((-1.0)*x3224))+(((-1.0)*x3218*x3253*x3261))+(((-1.0)*r22*x3225*x3241))+(((-1.0)*x3218*x3223*x3232)));
evalcond[7]=((((-1.0)*sj0*x3238))+((sj0*x3221*x3226))+(((0.117537022603216)*x3267))+((x3218*x3234))+(((-0.0678600949192303)*cj0*r12))+(((-1.0)*x3237*x3267))+(((-1.0)*r01*x3228*x3257))+(((-0.20357990508077)*r12*x3241))+(((-0.235073880801598)*x3218*x3227))+(((0.0185150129489311)*x3219*x3250))+(((-1.0)*x3270))+(((-1.0)*sj0*x3224))+(((-1.0)*cj4*x3218*x3234))+(((0.0648043305514941)*r01*x3219))+(((0.235073880801598)*cj0*sj4*x3248))+(((0.0648043305514941)*sj0*x3221))+((r01*x3219*x3226))+((x3229*x3238))+(((0.0098)*x3215)));
evalcond[8]=((((-0.235073880801598)*x3219*x3250))+((x3218*x3239))+(((-1.0)*r01*x3219*x3237))+(((0.0185150129489311)*x3218*x3227))+(((0.235073880801598)*r01*x3263))+(((0.117537022603216)*r01*x3219))+(((-0.0098)*x3216))+(((0.117537022603216)*sj0*x3221))+(((-1.0)*x3270))+(((-0.117537022603216)*x3221*x3229))+(((-1.0)*cj0*x3240))+(((-1.0)*cj0*x3245))+(((0.0648043305514941)*x3267))+((x3218*x3265))+((x3240*x3241))+(((-0.20357990508077)*r02*x3229))+(((-0.0678600949192303)*r02*sj0))+(((-1.0)*cj0*x3248*x3257))+((x3226*x3267)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3271=((0.250000349687704)*sj1);
IkReal x3272=(cj1*cj4);
IkReal x3273=((0.749999650312296)*r22);
IkReal x3274=(cj4*sj1);
IkReal x3275=((0.749999650312296)*r02);
IkReal x3276=((0.250000349687704)*cj1);
IkReal x3277=((0.433012903784321)*r00*sj5);
IkReal x3278=((0.433012903784321)*r20*sj5);
IkReal x3279=((0.433012903784321)*cj5*r01);
IkReal x3280=((0.433012903784321)*cj5*r21);
IkReal x3281=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3282=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3283=((0.866025201892125)*r01*sj4*sj5);
IkReal x3284=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((r00*x3282))+((r20*x3281))+((x3272*x3277))+((x3272*x3275))+((x3272*x3279))+((x3273*x3274))+(((-1.0)*cj1*x3283))+((x3274*x3278))+(((-1.0)*cj1*x3279))+(((-1.0)*cj1*x3277))+(((-1.0)*sj1*x3278))+((x3274*x3280))+((r02*x3276))+((r22*x3271))+(((-1.0)*sj1*x3284))+(((-1.0)*sj1*x3280)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r20*x3282))+((sj1*x3277))+((sj1*x3279))+((x3272*x3273))+((x3272*x3278))+(((-1.0)*cj1*x3284))+(((-1.0)*cj1*x3280))+(((-1.0)*x3274*x3277))+(((-1.0)*x3274*x3275))+(((-1.0)*x3274*x3279))+(((-1.0)*cj1*x3278))+((x3272*x3280))+((sj1*x3283))+(((-1.0)*r00*x3281))+((r22*x3276))+(((-1.0)*r02*x3271)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r00*x3282))+((r20*x3281))+((x3272*x3277))+((x3272*x3275))+((x3272*x3279))+((x3273*x3274))+(((-1.0)*cj1*x3283))+((x3274*x3278))+(((-1.0)*cj1*x3279))+(((-1.0)*cj1*x3277))+(((-1.0)*sj1*x3278))+((x3274*x3280))+((r02*x3276))+((r22*x3271))+(((-1.0)*sj1*x3284))+(((-1.0)*sj1*x3280))))+IKsqr((((r20*x3282))+((sj1*x3277))+((sj1*x3279))+((x3272*x3273))+((x3272*x3278))+(((-1.0)*cj1*x3284))+(((-1.0)*cj1*x3280))+(((-1.0)*x3274*x3277))+(((-1.0)*x3274*x3275))+(((-1.0)*x3274*x3279))+(((-1.0)*cj1*x3278))+((x3272*x3280))+((sj1*x3283))+(((-1.0)*r00*x3281))+((r22*x3276))+(((-1.0)*r02*x3271))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((r00*x3282))+((r20*x3281))+((x3272*x3277))+((x3272*x3275))+((x3272*x3279))+((x3273*x3274))+(((-1.0)*cj1*x3283))+((x3274*x3278))+(((-1.0)*cj1*x3279))+(((-1.0)*cj1*x3277))+(((-1.0)*sj1*x3278))+((x3274*x3280))+((r02*x3276))+((r22*x3271))+(((-1.0)*sj1*x3284))+(((-1.0)*sj1*x3280))), (((r20*x3282))+((sj1*x3277))+((sj1*x3279))+((x3272*x3273))+((x3272*x3278))+(((-1.0)*cj1*x3284))+(((-1.0)*cj1*x3280))+(((-1.0)*x3274*x3277))+(((-1.0)*x3274*x3275))+(((-1.0)*x3274*x3279))+(((-1.0)*cj1*x3278))+((x3272*x3280))+((sj1*x3283))+(((-1.0)*r00*x3281))+((r22*x3276))+(((-1.0)*r02*x3271))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3285=IKsin(j2);
IkReal x3286=IKcos(j2);
IkReal x3287=((0.749999650312296)*sj3);
IkReal x3288=(cj5*r01);
IkReal x3289=(r00*sj5);
IkReal x3290=(cj4*cj5);
IkReal x3291=((1.0)*cj3);
IkReal x3292=(r21*sj3);
IkReal x3293=(cj4*sj5);
IkReal x3294=(cj3*r21);
IkReal x3295=((0.500000349687582)*sj4);
IkReal x3296=((0.433012903784321)*r20);
IkReal x3297=(cj4*r22);
IkReal x3298=((0.433012903784321)*sj3);
IkReal x3299=((0.433012903784321)*cj4);
IkReal x3300=(r01*sj5);
IkReal x3301=(r20*sj5);
IkReal x3302=((0.0160344678271334)*r02);
IkReal x3303=(cj4*r02);
IkReal x3304=((0.00925751294893567)*cj4);
IkReal x3305=((0.0185150129489311)*sj4);
IkReal x3306=(r21*sj5);
IkReal x3307=(cj5*r21);
IkReal x3308=((0.866025201892125)*sj4);
IkReal x3309=(cj5*r20);
IkReal x3310=(cj5*r00);
IkReal x3311=((0.250000349687704)*sj3);
IkReal x3312=(cj1*x3286);
IkReal x3313=(sj1*x3285);
IkReal x3314=(cj1*x3285);
IkReal x3315=(sj1*x3286);
IkReal x3316=(x3313+x3312);
evalcond[0]=((((-0.250000349687704)*r22))+((sj5*x3296))+x3316+(((-1.0)*x3293*x3296))+(((-1.0)*x3308*x3309))+(((-0.749999650312296)*x3297))+(((0.433012903784321)*x3307))+((x3306*x3308))+(((-0.433012903784321)*r21*x3290)));
evalcond[1]=(((x3300*x3308))+(((-0.250000349687704)*r02))+x3314+(((-0.749999650312296)*x3303))+(((-1.0)*x3288*x3299))+(((-1.0)*x3308*x3310))+(((0.433012903784321)*x3289))+(((0.433012903784321)*x3288))+(((-1.0)*x3315))+(((-1.0)*x3289*x3299)));
evalcond[2]=((((0.0648043305514941)*x3307))+(((0.0648043305514941)*x3301))+(((-1.0)*x3305*x3306))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-0.27144)*x3313))+(((-0.27144)*x3312))+(((-1.0)*pz))+(((0.00925751294893567)*r20*x3293))+(((0.00925751294893567)*r21*x3290))+(((0.0160344678271334)*x3297))+((x3305*x3309)));
evalcond[3]=(((cj4*x3302))+(((0.0648043305514941)*x3289))+(((0.0648043305514941)*x3288))+((x3289*x3304))+((x3288*x3304))+(((-0.27144)*x3314))+(((-0.41)*sj1))+(((-1.0)*x3302))+(((-1.0)*px))+(((0.27144)*x3315))+(((-1.0)*x3300*x3305))+((x3305*x3310)));
evalcond[4]=(((x3287*x3289))+((x3287*x3288))+((cj3*x3288*x3295))+(((-1.0)*r00*x3290*x3291))+x3316+((sj3*x3295*x3310))+(((-1.0)*sj3*x3295*x3300))+((cj3*r01*x3293))+((x3298*x3303))+((cj3*x3289*x3295))+(((-1.0)*r02*x3298))+((cj4*x3288*x3311))+((cj4*x3289*x3311))+((cj3*r02*x3308)));
evalcond[5]=(((cj3*x3295*x3301))+((x3287*x3301))+((x3287*x3307))+((sj3*x3295*x3309))+((x3293*x3294))+((r20*x3293*x3311))+x3315+(((-1.0)*r20*x3290*x3291))+(((-1.0)*r22*x3298))+((cj3*r22*x3308))+(((-1.0)*x3314))+((cj5*x3294*x3295))+(((0.250000349687704)*x3290*x3292))+(((-1.0)*sj5*x3292*x3295))+((x3297*x3298)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3317=(r02*sj1);
IkReal x3318=(cj1*cj4);
IkReal x3319=((0.749999650312296)*r22);
IkReal x3320=(cj4*sj1);
IkReal x3321=((0.250000349687704)*r22);
IkReal x3322=((0.433012903784321)*r00*sj5);
IkReal x3323=((0.433012903784321)*r20*sj5);
IkReal x3324=((0.433012903784321)*cj5*r01);
IkReal x3325=((0.433012903784321)*cj5*r21);
IkReal x3326=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3327=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3328=((0.866025201892125)*r01*sj4*sj5);
IkReal x3329=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((sj1*x3321))+((r20*x3326))+((cj1*x3324))+((cj1*x3322))+((cj1*x3328))+(((-0.749999650312296)*r02*x3318))+(((-1.0)*sj1*x3325))+(((-1.0)*sj1*x3323))+(((-1.0)*sj1*x3329))+(((-1.0)*x3318*x3322))+(((-1.0)*x3318*x3324))+((x3320*x3325))+((x3320*x3323))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x3327))+((x3319*x3320)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((r00*x3326))+((r20*x3327))+((cj1*x3321))+(((-1.0)*sj1*x3324))+(((-1.0)*sj1*x3322))+(((-1.0)*sj1*x3328))+(((0.749999650312296)*cj4*x3317))+((x3318*x3319))+(((-1.0)*cj1*x3325))+(((-1.0)*cj1*x3323))+(((-1.0)*cj1*x3329))+((x3320*x3324))+((x3320*x3322))+(((0.250000349687704)*x3317))+((x3318*x3325))+((x3318*x3323)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((sj1*x3321))+((r20*x3326))+((cj1*x3324))+((cj1*x3322))+((cj1*x3328))+(((-0.749999650312296)*r02*x3318))+(((-1.0)*sj1*x3325))+(((-1.0)*sj1*x3323))+(((-1.0)*sj1*x3329))+(((-1.0)*x3318*x3322))+(((-1.0)*x3318*x3324))+((x3320*x3325))+((x3320*x3323))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x3327))+((x3319*x3320))))+IKsqr((((r00*x3326))+((r20*x3327))+((cj1*x3321))+(((-1.0)*sj1*x3324))+(((-1.0)*sj1*x3322))+(((-1.0)*sj1*x3328))+(((0.749999650312296)*cj4*x3317))+((x3318*x3319))+(((-1.0)*cj1*x3325))+(((-1.0)*cj1*x3323))+(((-1.0)*cj1*x3329))+((x3320*x3324))+((x3320*x3322))+(((0.250000349687704)*x3317))+((x3318*x3325))+((x3318*x3323))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((sj1*x3321))+((r20*x3326))+((cj1*x3324))+((cj1*x3322))+((cj1*x3328))+(((-0.749999650312296)*r02*x3318))+(((-1.0)*sj1*x3325))+(((-1.0)*sj1*x3323))+(((-1.0)*sj1*x3329))+(((-1.0)*x3318*x3322))+(((-1.0)*x3318*x3324))+((x3320*x3325))+((x3320*x3323))+(((-0.250000349687704)*cj1*r02))+(((-1.0)*r00*x3327))+((x3319*x3320))), (((r00*x3326))+((r20*x3327))+((cj1*x3321))+(((-1.0)*sj1*x3324))+(((-1.0)*sj1*x3322))+(((-1.0)*sj1*x3328))+(((0.749999650312296)*cj4*x3317))+((x3318*x3319))+(((-1.0)*cj1*x3325))+(((-1.0)*cj1*x3323))+(((-1.0)*cj1*x3329))+((x3320*x3324))+((x3320*x3322))+(((0.250000349687704)*x3317))+((x3318*x3325))+((x3318*x3323))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3330=IKcos(j2);
IkReal x3331=IKsin(j2);
IkReal x3332=((0.433012903784321)*sj3);
IkReal x3333=((0.749999650312296)*sj3);
IkReal x3334=(r00*sj5);
IkReal x3335=(cj4*cj5);
IkReal x3336=((1.0)*cj3);
IkReal x3337=(cj5*r01);
IkReal x3338=(r21*sj3);
IkReal x3339=(cj4*sj5);
IkReal x3340=(cj3*r21);
IkReal x3341=((0.500000349687582)*sj4);
IkReal x3342=((0.433012903784321)*r20);
IkReal x3343=(cj4*r22);
IkReal x3344=(r20*sj5);
IkReal x3345=((0.0160344678271334)*r02);
IkReal x3346=(cj4*r02);
IkReal x3347=(r01*sj5);
IkReal x3348=(cj5*r00);
IkReal x3349=((0.0185150129489311)*sj4);
IkReal x3350=(r21*sj5);
IkReal x3351=(cj5*r21);
IkReal x3352=((0.866025201892125)*sj4);
IkReal x3353=(cj5*r20);
IkReal x3354=((0.250000349687704)*sj3);
IkReal x3355=(sj1*x3330);
IkReal x3356=(cj1*x3330);
IkReal x3357=(sj1*x3331);
IkReal x3358=(cj1*x3331);
IkReal x3359=((1.0)*x3358);
evalcond[0]=((((-1.0)*x3352*x3353))+(((-0.250000349687704)*r22))+x3357+x3356+(((-0.433012903784321)*r21*x3335))+(((0.433012903784321)*x3351))+((sj5*x3342))+(((-1.0)*x3339*x3342))+((x3350*x3352))+(((-0.749999650312296)*x3343)));
evalcond[1]=((((-0.250000349687704)*r02))+((x3347*x3352))+(((0.433012903784321)*x3337))+(((0.433012903784321)*x3334))+(((-1.0)*x3359))+(((-0.433012903784321)*r01*x3335))+(((-1.0)*x3348*x3352))+x3355+(((-0.433012903784321)*cj4*x3334))+(((-0.749999650312296)*x3346)));
evalcond[2]=((((-1.0)*x3349*x3350))+(((0.0648043305514941)*x3344))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*pz))+(((0.0648043305514941)*x3351))+(((0.00925751294893567)*r20*x3339))+(((0.00925751294893567)*r21*x3335))+(((-0.27144)*x3356))+(((-0.27144)*x3357))+(((0.0160344678271334)*x3343))+((x3349*x3353)));
evalcond[3]=((((-1.0)*x3347*x3349))+((cj4*x3345))+(((0.27144)*x3358))+(((0.00925751294893567)*r01*x3335))+(((0.41)*sj1))+(((-1.0)*x3345))+((x3348*x3349))+(((0.0648043305514941)*x3334))+(((0.0648043305514941)*x3337))+(((0.00925751294893567)*cj4*x3334))+(((-1.0)*px))+(((-0.27144)*x3355)));
evalcond[4]=((((-1.0)*sj5*x3338*x3341))+(((-1.0)*x3359))+((sj3*x3341*x3353))+x3355+((x3332*x3343))+((x3333*x3344))+((r20*x3339*x3354))+(((0.250000349687704)*x3335*x3338))+(((-1.0)*r22*x3332))+((x3333*x3351))+((cj3*r22*x3352))+(((-1.0)*r20*x3335*x3336))+((cj3*x3341*x3344))+((x3339*x3340))+((cj5*x3340*x3341)));
evalcond[5]=(((x3333*x3334))+((x3333*x3337))+((cj3*x3334*x3341))+((sj3*x3341*x3348))+((cj3*x3337*x3341))+((cj3*r01*x3339))+((cj3*r02*x3352))+((x3332*x3346))+(((-1.0)*r02*x3332))+((r01*x3335*x3354))+((cj4*x3334*x3354))+(((-1.0)*r00*x3335*x3336))+(((-1.0)*sj3*x3341*x3347))+(((-1.0)*x3357))+(((-1.0)*x3356)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3360=((0.250000349687704)*r12);
IkReal x3361=((0.749999650312296)*cj4);
IkReal x3362=((0.433012903784321)*sj5);
IkReal x3363=(cj1*r10);
IkReal x3364=(cj1*r22);
IkReal x3365=(cj1*r20);
IkReal x3366=((0.866025201892125)*sj4);
IkReal x3367=(r20*sj1);
IkReal x3368=(r22*sj1);
IkReal x3369=(r10*sj1);
IkReal x3370=(r11*sj1);
IkReal x3371=((0.433012903784321)*cj5);
IkReal x3372=(r21*sj1);
IkReal x3373=(cj1*r21);
IkReal x3374=(cj1*r11);
IkReal x3375=(cj5*sj1*x3366);
IkReal x3376=(cj4*r21*x3371);
if( IKabs((((cj5*x3363*x3366))+(((-1.0)*x3362*x3367))+(((-1.0)*x3362*x3363))+((cj4*x3371*x3374))+((cj4*x3371*x3372))+((cj5*x3366*x3367))+((x3361*x3368))+(((-1.0)*x3371*x3374))+(((-1.0)*x3371*x3372))+(((0.250000349687704)*x3368))+((cj4*x3362*x3367))+((cj4*x3362*x3363))+((cj1*x3360))+(((-1.0)*sj5*x3366*x3372))+(((-1.0)*sj5*x3366*x3374))+((cj1*r12*x3361)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x3362*x3369))+(((-1.0)*x3362*x3365))+((cj4*x3371*x3373))+(((-1.0)*cj5*x3366*x3369))+(((-1.0)*cj4*x3362*x3369))+((x3361*x3364))+(((-1.0)*r12*sj1*x3361))+((x3370*x3371))+(((-1.0)*x3371*x3373))+(((0.250000349687704)*x3364))+((cj4*x3362*x3365))+((sj5*x3366*x3370))+(((-1.0)*sj5*x3366*x3373))+(((-1.0)*cj4*x3370*x3371))+(((-1.0)*sj1*x3360))+((cj5*x3365*x3366)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj5*x3363*x3366))+(((-1.0)*x3362*x3367))+(((-1.0)*x3362*x3363))+((cj4*x3371*x3374))+((cj4*x3371*x3372))+((cj5*x3366*x3367))+((x3361*x3368))+(((-1.0)*x3371*x3374))+(((-1.0)*x3371*x3372))+(((0.250000349687704)*x3368))+((cj4*x3362*x3367))+((cj4*x3362*x3363))+((cj1*x3360))+(((-1.0)*sj5*x3366*x3372))+(((-1.0)*sj5*x3366*x3374))+((cj1*r12*x3361))))+IKsqr((((x3362*x3369))+(((-1.0)*x3362*x3365))+((cj4*x3371*x3373))+(((-1.0)*cj5*x3366*x3369))+(((-1.0)*cj4*x3362*x3369))+((x3361*x3364))+(((-1.0)*r12*sj1*x3361))+((x3370*x3371))+(((-1.0)*x3371*x3373))+(((0.250000349687704)*x3364))+((cj4*x3362*x3365))+((sj5*x3366*x3370))+(((-1.0)*sj5*x3366*x3373))+(((-1.0)*cj4*x3370*x3371))+(((-1.0)*sj1*x3360))+((cj5*x3365*x3366))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj5*x3363*x3366))+(((-1.0)*x3362*x3367))+(((-1.0)*x3362*x3363))+((cj4*x3371*x3374))+((cj4*x3371*x3372))+((cj5*x3366*x3367))+((x3361*x3368))+(((-1.0)*x3371*x3374))+(((-1.0)*x3371*x3372))+(((0.250000349687704)*x3368))+((cj4*x3362*x3367))+((cj4*x3362*x3363))+((cj1*x3360))+(((-1.0)*sj5*x3366*x3372))+(((-1.0)*sj5*x3366*x3374))+((cj1*r12*x3361))), (((x3362*x3369))+(((-1.0)*x3362*x3365))+((cj4*x3371*x3373))+(((-1.0)*cj5*x3366*x3369))+(((-1.0)*cj4*x3362*x3369))+((x3361*x3364))+(((-1.0)*r12*sj1*x3361))+((x3370*x3371))+(((-1.0)*x3371*x3373))+(((0.250000349687704)*x3364))+((cj4*x3362*x3365))+((sj5*x3366*x3370))+(((-1.0)*sj5*x3366*x3373))+(((-1.0)*cj4*x3370*x3371))+(((-1.0)*sj1*x3360))+((cj5*x3365*x3366))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3377=IKsin(j2);
IkReal x3378=IKcos(j2);
IkReal x3379=(cj5*r11);
IkReal x3380=((0.433012903784321)*cj4);
IkReal x3381=(r21*sj5);
IkReal x3382=((0.500000349687582)*sj4);
IkReal x3383=((0.749999650312296)*sj3);
IkReal x3384=(cj3*cj4);
IkReal x3385=(cj5*r10);
IkReal x3386=((0.0185150129489311)*sj4);
IkReal x3387=(r20*sj5);
IkReal x3388=(cj4*r22);
IkReal x3389=(r10*sj5);
IkReal x3390=(r22*sj3);
IkReal x3391=(r11*sj5);
IkReal x3392=((0.00925751294893567)*cj4);
IkReal x3393=(cj5*r21);
IkReal x3394=(r12*sj3);
IkReal x3395=(cj4*r12);
IkReal x3396=(cj5*r20);
IkReal x3397=((0.866025201892125)*sj4);
IkReal x3398=(cj1*x3378);
IkReal x3399=(sj1*x3377);
IkReal x3400=(cj1*x3377);
IkReal x3401=((0.250000349687704)*cj4*sj3);
IkReal x3402=(sj1*x3378);
IkReal x3403=(cj3*x3397);
IkReal x3404=(x3399+x3398);
evalcond[0]=(((x3381*x3397))+(((-0.250000349687704)*r22))+(((-1.0)*x3396*x3397))+(((-1.0)*x3380*x3387))+x3404+(((-1.0)*x3380*x3393))+(((0.433012903784321)*x3393))+(((-0.749999650312296)*x3388))+(((0.433012903784321)*x3387)));
evalcond[1]=((((0.433012903784321)*x3379))+(((-0.250000349687704)*r12))+(((-1.0)*x3402))+(((-1.0)*x3385*x3397))+((x3391*x3397))+(((-1.0)*x3380*x3389))+x3400+(((-1.0)*x3379*x3380))+(((-0.749999650312296)*x3395))+(((0.433012903784321)*x3389)));
evalcond[2]=((((0.0648043305514941)*x3387))+((x3386*x3396))+(((0.0160344678271334)*x3388))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*x3381*x3386))+((x3387*x3392))+(((-1.0)*pz))+((x3392*x3393))+(((-0.27144)*x3399))+(((-0.27144)*x3398))+(((0.0648043305514941)*x3393)));
evalcond[3]=((((0.0648043305514941)*x3389))+((x3379*x3392))+(((0.0648043305514941)*x3379))+(((-0.0160344678271334)*r12))+(((0.27144)*x3402))+((x3389*x3392))+(((-0.41)*sj1))+(((-0.27144)*x3400))+(((-1.0)*x3386*x3391))+(((-1.0)*py))+((x3385*x3386))+(((0.0160344678271334)*x3395)));
evalcond[4]=((((-0.433012903784321)*x3394))+((x3379*x3401))+((x3380*x3394))+((cj3*x3382*x3389))+((x3379*x3383))+x3404+((r12*x3403))+((x3384*x3391))+(((-1.0)*sj3*x3382*x3391))+((cj3*x3379*x3382))+(((-1.0)*x3384*x3385))+((x3389*x3401))+((sj3*x3382*x3385))+((x3383*x3389)));
evalcond[5]=((((-0.433012903784321)*x3390))+((r22*x3403))+((x3383*x3393))+(((-1.0)*x3400))+((x3381*x3384))+((x3380*x3390))+((cj3*x3382*x3387))+((cj3*x3382*x3393))+x3402+((x3387*x3401))+(((-1.0)*sj3*x3381*x3382))+(((-1.0)*x3384*x3396))+((x3383*x3387))+((sj3*x3382*x3396))+((x3393*x3401)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3405=((0.250000349687704)*r12);
IkReal x3406=((0.749999650312296)*cj4);
IkReal x3407=(cj1*r22);
IkReal x3408=((0.866025201892125)*sj4);
IkReal x3409=(cj1*r20);
IkReal x3410=(sj1*sj5);
IkReal x3411=((0.433012903784321)*r20);
IkReal x3412=((0.433012903784321)*sj5);
IkReal x3413=(cj1*r10);
IkReal x3414=(r22*sj1);
IkReal x3415=((0.433012903784321)*r10);
IkReal x3416=((0.433012903784321)*cj5);
IkReal x3417=(cj1*r21);
IkReal x3418=(cj1*r11);
IkReal x3419=(r11*sj1);
IkReal x3420=(cj1*cj4*x3412);
IkReal x3421=(cj5*sj1*x3408);
IkReal x3422=(cj4*r21*x3416);
if( IKabs((((x3406*x3414))+((r20*x3421))+((cj4*x3410*x3411))+((x3416*x3418))+(((-1.0)*cj1*r12*x3406))+(((-1.0)*cj1*x3405))+(((-1.0)*cj4*x3416*x3418))+(((-1.0)*cj4*x3412*x3413))+((sj5*x3408*x3418))+((x3412*x3413))+((sj1*x3422))+(((-1.0)*x3410*x3411))+(((-1.0)*cj5*x3408*x3413))+(((-1.0)*r21*sj1*x3416))+(((-1.0)*r21*x3408*x3410))+(((0.250000349687704)*x3414)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x3416*x3417))+((cj4*x3416*x3419))+(((0.250000349687704)*x3407))+((r10*x3421))+((x3406*x3407))+((sj1*x3405))+(((-1.0)*sj5*x3408*x3417))+((cj4*x3410*x3415))+((cj5*x3408*x3409))+((cj4*x3409*x3412))+(((-1.0)*x3409*x3412))+((r12*sj1*x3406))+(((-1.0)*x3410*x3415))+(((-1.0)*r11*x3408*x3410))+(((-1.0)*x3416*x3417))+(((-1.0)*x3416*x3419)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x3406*x3414))+((r20*x3421))+((cj4*x3410*x3411))+((x3416*x3418))+(((-1.0)*cj1*r12*x3406))+(((-1.0)*cj1*x3405))+(((-1.0)*cj4*x3416*x3418))+(((-1.0)*cj4*x3412*x3413))+((sj5*x3408*x3418))+((x3412*x3413))+((sj1*x3422))+(((-1.0)*x3410*x3411))+(((-1.0)*cj5*x3408*x3413))+(((-1.0)*r21*sj1*x3416))+(((-1.0)*r21*x3408*x3410))+(((0.250000349687704)*x3414))))+IKsqr((((cj4*x3416*x3417))+((cj4*x3416*x3419))+(((0.250000349687704)*x3407))+((r10*x3421))+((x3406*x3407))+((sj1*x3405))+(((-1.0)*sj5*x3408*x3417))+((cj4*x3410*x3415))+((cj5*x3408*x3409))+((cj4*x3409*x3412))+(((-1.0)*x3409*x3412))+((r12*sj1*x3406))+(((-1.0)*x3410*x3415))+(((-1.0)*r11*x3408*x3410))+(((-1.0)*x3416*x3417))+(((-1.0)*x3416*x3419))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x3406*x3414))+((r20*x3421))+((cj4*x3410*x3411))+((x3416*x3418))+(((-1.0)*cj1*r12*x3406))+(((-1.0)*cj1*x3405))+(((-1.0)*cj4*x3416*x3418))+(((-1.0)*cj4*x3412*x3413))+((sj5*x3408*x3418))+((x3412*x3413))+((sj1*x3422))+(((-1.0)*x3410*x3411))+(((-1.0)*cj5*x3408*x3413))+(((-1.0)*r21*sj1*x3416))+(((-1.0)*r21*x3408*x3410))+(((0.250000349687704)*x3414))), (((cj4*x3416*x3417))+((cj4*x3416*x3419))+(((0.250000349687704)*x3407))+((r10*x3421))+((x3406*x3407))+((sj1*x3405))+(((-1.0)*sj5*x3408*x3417))+((cj4*x3410*x3415))+((cj5*x3408*x3409))+((cj4*x3409*x3412))+(((-1.0)*x3409*x3412))+((r12*sj1*x3406))+(((-1.0)*x3410*x3415))+(((-1.0)*r11*x3408*x3410))+(((-1.0)*x3416*x3417))+(((-1.0)*x3416*x3419))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3423=IKcos(j2);
IkReal x3424=IKsin(j2);
IkReal x3425=(cj5*r11);
IkReal x3426=((0.433012903784321)*cj4);
IkReal x3427=(r21*sj5);
IkReal x3428=((0.500000349687582)*sj4);
IkReal x3429=((0.749999650312296)*sj3);
IkReal x3430=(cj3*cj4);
IkReal x3431=(cj5*r10);
IkReal x3432=((0.0185150129489311)*sj4);
IkReal x3433=(r20*sj5);
IkReal x3434=(cj4*r22);
IkReal x3435=(r10*sj5);
IkReal x3436=(r12*sj3);
IkReal x3437=(r11*sj5);
IkReal x3438=(r22*sj3);
IkReal x3439=((0.27144)*sj1);
IkReal x3440=((0.00925751294893567)*cj4);
IkReal x3441=(cj5*r20);
IkReal x3442=(cj5*r21);
IkReal x3443=(cj4*r12);
IkReal x3444=((0.866025201892125)*sj4);
IkReal x3445=(sj1*x3423);
IkReal x3446=(cj1*x3423);
IkReal x3447=(cj1*x3424);
IkReal x3448=((0.250000349687704)*cj4*sj3);
IkReal x3449=(cj3*x3444);
IkReal x3450=(sj1*x3424);
IkReal x3451=((1.0)*x3447);
evalcond[0]=((((-0.250000349687704)*r22))+(((-1.0)*x3426*x3433))+x3450+x3446+(((-1.0)*x3441*x3444))+(((0.433012903784321)*x3433))+(((-1.0)*x3426*x3442))+((x3427*x3444))+(((0.433012903784321)*x3442))+(((-0.749999650312296)*x3434)));
evalcond[1]=((((-1.0)*x3451))+(((-0.749999650312296)*x3443))+(((-0.250000349687704)*r12))+(((-1.0)*x3426*x3435))+(((-1.0)*x3425*x3426))+x3445+((x3437*x3444))+(((-1.0)*x3431*x3444))+(((0.433012903784321)*x3435))+(((0.433012903784321)*x3425)));
evalcond[2]=((((-1.0)*x3427*x3432))+(((0.0160344678271334)*x3434))+(((0.41)*cj1))+(((-0.27144)*x3446))+(((-0.0160344678271334)*r22))+(((-1.0)*x3424*x3439))+(((-1.0)*pz))+(((0.0648043305514941)*x3433))+((x3440*x3442))+((x3433*x3440))+((x3432*x3441))+(((0.0648043305514941)*x3442)));
evalcond[3]=((((-1.0)*x3432*x3437))+((x3435*x3440))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((0.27144)*x3447))+((x3425*x3440))+(((-1.0)*py))+(((-1.0)*x3423*x3439))+(((0.0648043305514941)*x3435))+(((0.0648043305514941)*x3425))+((x3431*x3432))+(((0.0160344678271334)*x3443)));
evalcond[4]=((((-1.0)*x3451))+((x3429*x3433))+(((-1.0)*sj3*x3427*x3428))+((x3442*x3448))+((cj3*x3428*x3442))+((x3427*x3430))+x3445+((r22*x3449))+(((-1.0)*x3430*x3441))+(((-0.433012903784321)*x3438))+((cj3*x3428*x3433))+((x3433*x3448))+((x3426*x3438))+((sj3*x3428*x3441))+((x3429*x3442)));
evalcond[5]=(((x3429*x3435))+((x3425*x3429))+((r12*x3449))+((sj3*x3428*x3431))+((x3435*x3448))+((x3430*x3437))+(((-1.0)*sj3*x3428*x3437))+(((-1.0)*x3450))+((x3425*x3448))+(((-1.0)*x3446))+((cj3*x3425*x3428))+(((-0.433012903784321)*x3436))+((cj3*x3428*x3435))+(((-1.0)*x3430*x3431))+((x3426*x3436)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3452=(cj4*sj1);
IkReal x3453=((0.433012903784321)*sj0);
IkReal x3454=(cj5*r21);
IkReal x3455=(cj1*r12);
IkReal x3456=(r20*sj5);
IkReal x3457=(r20*sj0);
IkReal x3458=(r10*sj1);
IkReal x3459=((0.749999650312296)*cj4);
IkReal x3460=(r21*sj0);
IkReal x3461=((0.433012903784321)*sj5);
IkReal x3462=(cj1*cj4);
IkReal x3463=(r22*sj0);
IkReal x3464=((0.250000349687704)*x3463);
IkReal x3465=((0.866025201892125)*cj5*sj4);
IkReal x3466=((0.433012903784321)*cj5*r11);
IkReal x3467=(cj1*r10*x3461);
IkReal x3468=((0.866025201892125)*sj1*sj4*sj5);
IkReal x3469=((0.866025201892125)*cj1*sj4*sj5);
CheckValue<IkReal> x3470=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x3470.valid){
continue;
}
CheckValue<IkReal> x3471 = IKatan2WithCheck(IkReal((((sj1*x3457*x3465))+((x3462*x3466))+((r10*x3461*x3462))+(((-1.0)*x3460*x3468))+(((-1.0)*cj1*x3466))+(((-1.0)*r11*x3469))+((x3455*x3459))+(((-1.0)*sj1*x3453*x3454))+(((-1.0)*sj1*x3453*x3456))+(((0.749999650312296)*x3452*x3463))+((x3452*x3453*x3456))+((x3452*x3453*x3454))+((sj1*x3464))+(((-1.0)*x3467))+(((0.250000349687704)*x3455))+((cj1*r10*x3465)))),IkReal(((((-0.250000349687704)*r12*sj1))+(((-0.749999650312296)*r12*x3452))+((x3453*x3456*x3462))+(((-1.0)*r10*x3452*x3461))+((cj1*x3459*x3463))+(((-1.0)*x3458*x3465))+(((-1.0)*x3460*x3469))+((x3453*x3454*x3462))+(((-1.0)*x3452*x3466))+((sj1*x3466))+((r11*x3468))+((cj1*x3464))+(((-1.0)*cj1*x3453*x3456))+(((-1.0)*cj1*x3453*x3454))+((x3458*x3461))+((cj1*x3457*x3465)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3471.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3470.value)))+(x3471.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x3472=IKsin(j2);
IkReal x3473=IKcos(j2);
IkReal x3474=(cj4*sj5);
IkReal x3475=(cj3*r21);
IkReal x3476=((0.433012903784321)*r20);
IkReal x3477=((0.749999650312296)*cj4);
IkReal x3478=(cj4*cj5);
IkReal x3479=((1.0)*cj3);
IkReal x3480=((0.433012903784321)*r01);
IkReal x3481=(sj4*sj5);
IkReal x3482=((0.749999650312296)*sj3);
IkReal x3483=(r10*sj5);
IkReal x3484=((0.500000349687582)*sj3);
IkReal x3485=(cj0*sj1);
IkReal x3486=((0.500000349687582)*cj3);
IkReal x3487=((0.0160344678271334)*r22);
IkReal x3488=(r20*sj3);
IkReal x3489=(r00*sj5);
IkReal x3490=(cj3*r11);
IkReal x3491=((0.0160344678271334)*r12);
IkReal x3492=((0.433012903784321)*r11);
IkReal x3493=(cj5*r11);
IkReal x3494=(r10*sj3);
IkReal x3495=(r00*sj3);
IkReal x3496=((0.433012903784321)*sj3);
IkReal x3497=(cj5*sj4);
IkReal x3498=(r20*sj5);
IkReal x3499=((0.433012903784321)*r21);
IkReal x3500=(sj0*sj1);
IkReal x3501=(cj3*r01);
IkReal x3502=(cj5*r21);
IkReal x3503=((0.0160344678271334)*r02);
IkReal x3504=(cj5*r01);
IkReal x3505=((0.250000349687704)*sj3);
IkReal x3506=(cj1*x3472);
IkReal x3507=((0.500000349687582)*x3497);
IkReal x3508=((0.27144)*x3473);
IkReal x3509=(cj4*x3496);
IkReal x3510=(sj1*x3472);
IkReal x3511=((0.866025201892125)*cj3*sj4);
IkReal x3512=(cj1*x3473);
IkReal x3513=((1.0)*x3473);
evalcond[0]=((((-0.250000349687704)*r22))+((sj5*x3476))+x3512+x3510+((cj5*x3499))+(((-1.0)*r22*x3477))+(((-1.0)*x3478*x3499))+(((0.866025201892125)*r21*x3481))+(((-0.866025201892125)*r20*x3497))+(((-1.0)*x3474*x3476)));
evalcond[1]=((((-0.250000349687704)*r02))+((cj5*x3480))+((cj0*x3506))+(((-0.433012903784321)*r00*x3474))+(((-1.0)*r02*x3477))+(((0.866025201892125)*r01*x3481))+(((-1.0)*x3485*x3513))+(((0.433012903784321)*x3489))+(((-0.866025201892125)*r00*x3497))+(((-1.0)*x3478*x3480)));
evalcond[2]=((((-0.433012903784321)*r10*x3474))+(((-0.250000349687704)*r12))+(((-0.866025201892125)*r10*x3497))+((cj5*x3492))+(((-1.0)*r12*x3477))+(((-1.0)*x3478*x3492))+((sj0*x3506))+(((0.866025201892125)*r11*x3481))+(((0.433012903784321)*x3483))+(((-1.0)*x3500*x3513)));
evalcond[3]=(((cj4*x3487))+(((-0.27144)*x3510))+(((0.41)*cj1))+(((0.0648043305514941)*x3502))+(((0.0185150129489311)*r20*x3497))+(((-1.0)*pz))+(((0.00925751294893567)*r20*x3474))+(((0.0648043305514941)*x3498))+(((0.00925751294893567)*r21*x3478))+(((-1.0)*x3487))+(((-0.0185150129489311)*r21*x3481))+(((-1.0)*cj1*x3508)));
evalcond[4]=(((cj4*x3503))+(((0.00925751294893567)*r00*x3474))+(((0.0648043305514941)*x3504))+(((-1.0)*x3503))+(((0.00925751294893567)*r01*x3478))+((x3485*x3508))+(((-1.0)*px))+(((0.0648043305514941)*x3489))+(((-0.0185150129489311)*r01*x3481))+(((-0.27144)*cj0*x3506))+(((0.0185150129489311)*r00*x3497))+(((-0.41)*x3485))+(((0.0098)*sj0)));
evalcond[5]=((((0.0185150129489311)*r10*x3497))+((x3500*x3508))+(((-0.0185150129489311)*r11*x3481))+(((-1.0)*x3491))+(((0.00925751294893567)*r11*x3478))+((cj4*x3491))+(((-1.0)*py))+(((0.0648043305514941)*x3483))+(((0.0648043305514941)*x3493))+(((0.00925751294893567)*r10*x3474))+(((-0.0098)*cj0))+(((-0.27144)*sj0*x3506))+(((-0.41)*x3500)));
evalcond[6]=((((0.250000349687704)*x3474*x3488))+((x3474*x3475))+(((-1.0)*r21*x3481*x3484))+(((-1.0)*r22*x3496))+((x3482*x3498))+((r20*x3481*x3486))+((r22*x3511))+((sj1*x3473))+((x3475*x3507))+((r20*x3484*x3497))+((x3482*x3502))+((r22*x3509))+(((-1.0)*r20*x3478*x3479))+(((-1.0)*x3506))+((r21*x3478*x3505)));
evalcond[7]=((((-1.0)*r02*x3496))+((r01*x3478*x3505))+((cj0*x3512))+((r00*x3484*x3497))+((r02*x3511))+((x3482*x3489))+((r02*x3509))+((r01*x3486*x3497))+((r00*x3481*x3486))+((x3474*x3501))+(((0.250000349687704)*x3474*x3495))+(((-1.0)*r00*x3478*x3479))+((x3482*x3504))+(((-1.0)*r01*x3481*x3484))+((x3472*x3485)));
evalcond[8]=((((-1.0)*r12*x3496))+((sj4*x3486*x3493))+((r10*x3481*x3486))+((r12*x3509))+(((-1.0)*r11*x3481*x3484))+((x3482*x3493))+((x3482*x3483))+(((-1.0)*r10*x3478*x3479))+((r12*x3511))+(((0.250000349687704)*x3474*x3494))+((sj0*x3512))+((x3472*x3500))+((r10*x3484*x3497))+((r11*x3478*x3505))+((x3474*x3490)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3514=(cj0*r20);
IkReal x3515=(cj1*r00);
IkReal x3516=(r02*sj1);
IkReal x3517=(r00*sj1);
IkReal x3518=((0.433012903784321)*sj5);
IkReal x3519=(cj4*sj1);
IkReal x3520=((0.749999650312296)*cj4);
IkReal x3521=(cj0*r22);
IkReal x3522=(r01*sj1);
IkReal x3523=(cj1*cj4);
IkReal x3524=(cj0*r21);
IkReal x3525=(cj1*r02);
IkReal x3526=((0.866025201892125)*cj5*sj4);
IkReal x3527=((0.866025201892125)*sj4*sj5);
IkReal x3528=((0.433012903784321)*cj5*r01);
IkReal x3529=((0.433012903784321)*cj5*x3524);
CheckValue<IkReal> x3530 = IKatan2WithCheck(IkReal(((((-1.0)*x3515*x3518))+(((-1.0)*cj1*x3528))+(((0.250000349687704)*x3525))+(((-1.0)*sj1*x3514*x3518))+(((-1.0)*sj1*x3524*x3527))+(((0.749999650312296)*x3519*x3521))+((cj4*x3515*x3518))+((x3523*x3528))+(((-1.0)*cj1*r01*x3527))+(((-1.0)*sj1*x3529))+((x3514*x3518*x3519))+((x3520*x3525))+((x3515*x3526))+(((0.250000349687704)*sj1*x3521))+((sj1*x3514*x3526))+((x3519*x3529)))),IkReal(((((-1.0)*x3519*x3528))+(((-1.0)*cj1*x3529))+((cj1*x3514*x3526))+((x3517*x3518))+((x3523*x3529))+(((0.250000349687704)*cj1*x3521))+(((-1.0)*x3517*x3526))+((x3522*x3527))+(((-1.0)*cj1*x3514*x3518))+(((-1.0)*cj1*x3524*x3527))+((x3514*x3518*x3523))+((cj1*x3520*x3521))+(((-0.250000349687704)*x3516))+(((-1.0)*cj4*x3517*x3518))+(((0.433012903784321)*cj5*x3522))+(((-1.0)*x3516*x3520)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3530.valid){
continue;
}
CheckValue<IkReal> x3531=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x3531.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x3530.value)+(((1.5707963267949)*(x3531.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x3532=IKsin(j2);
IkReal x3533=IKcos(j2);
IkReal x3534=(cj4*sj5);
IkReal x3535=(cj3*r21);
IkReal x3536=((0.433012903784321)*r20);
IkReal x3537=((0.749999650312296)*cj4);
IkReal x3538=(cj4*cj5);
IkReal x3539=((1.0)*cj3);
IkReal x3540=((0.433012903784321)*r01);
IkReal x3541=(sj4*sj5);
IkReal x3542=((0.749999650312296)*sj3);
IkReal x3543=(r10*sj5);
IkReal x3544=((0.500000349687582)*sj3);
IkReal x3545=(cj0*sj1);
IkReal x3546=((0.500000349687582)*cj3);
IkReal x3547=((0.0160344678271334)*r22);
IkReal x3548=(r20*sj3);
IkReal x3549=(r00*sj5);
IkReal x3550=(cj3*r11);
IkReal x3551=((0.0160344678271334)*r12);
IkReal x3552=((0.433012903784321)*r11);
IkReal x3553=(cj5*r11);
IkReal x3554=(r10*sj3);
IkReal x3555=(r00*sj3);
IkReal x3556=((0.433012903784321)*sj3);
IkReal x3557=(cj5*sj4);
IkReal x3558=(r20*sj5);
IkReal x3559=((0.433012903784321)*r21);
IkReal x3560=(sj0*sj1);
IkReal x3561=(cj3*r01);
IkReal x3562=(cj5*r21);
IkReal x3563=((0.0160344678271334)*r02);
IkReal x3564=(cj5*r01);
IkReal x3565=((0.250000349687704)*sj3);
IkReal x3566=(cj1*x3532);
IkReal x3567=((0.500000349687582)*x3557);
IkReal x3568=((0.27144)*x3533);
IkReal x3569=(cj4*x3556);
IkReal x3570=(sj1*x3532);
IkReal x3571=((0.866025201892125)*cj3*sj4);
IkReal x3572=(cj1*x3533);
IkReal x3573=((1.0)*x3533);
evalcond[0]=((((-0.866025201892125)*r20*x3557))+(((-0.250000349687704)*r22))+(((-1.0)*x3538*x3559))+x3570+x3572+((sj5*x3536))+((cj5*x3559))+(((-1.0)*r22*x3537))+(((-1.0)*x3534*x3536))+(((0.866025201892125)*r21*x3541)));
evalcond[1]=((((0.433012903784321)*x3549))+(((-0.250000349687704)*r02))+(((0.866025201892125)*r01*x3541))+(((-1.0)*x3538*x3540))+(((-0.866025201892125)*r00*x3557))+(((-1.0)*r02*x3537))+((cj5*x3540))+(((-1.0)*x3545*x3573))+((cj0*x3566))+(((-0.433012903784321)*r00*x3534)));
evalcond[2]=((((0.433012903784321)*x3543))+(((-1.0)*x3560*x3573))+(((-0.250000349687704)*r12))+(((-1.0)*x3538*x3552))+(((-1.0)*r12*x3537))+((sj0*x3566))+((cj5*x3552))+(((-0.866025201892125)*r10*x3557))+(((-0.433012903784321)*r10*x3534))+(((0.866025201892125)*r11*x3541)));
evalcond[3]=((((-0.0185150129489311)*r21*x3541))+(((-0.27144)*x3570))+(((0.0185150129489311)*r20*x3557))+(((0.41)*cj1))+((cj4*x3547))+(((-1.0)*pz))+(((0.0648043305514941)*x3562))+(((0.00925751294893567)*r20*x3534))+(((0.0648043305514941)*x3558))+(((0.00925751294893567)*r21*x3538))+(((-1.0)*x3547))+(((-1.0)*cj1*x3568)));
evalcond[4]=((((0.0185150129489311)*r00*x3557))+((cj4*x3563))+(((-0.0185150129489311)*r01*x3541))+(((-1.0)*x3563))+(((-1.0)*px))+(((0.0648043305514941)*x3564))+(((0.0648043305514941)*x3549))+((x3545*x3568))+(((0.00925751294893567)*r00*x3534))+(((0.00925751294893567)*r01*x3538))+(((0.0098)*sj0))+(((-0.41)*x3545))+(((-0.27144)*cj0*x3566)));
evalcond[5]=((((-0.0185150129489311)*r11*x3541))+(((-0.27144)*sj0*x3566))+((cj4*x3551))+(((0.00925751294893567)*r11*x3538))+(((-1.0)*py))+(((0.0648043305514941)*x3543))+(((0.0185150129489311)*r10*x3557))+(((0.0648043305514941)*x3553))+(((-1.0)*x3551))+(((0.00925751294893567)*r10*x3534))+(((-0.41)*x3560))+(((-0.0098)*cj0))+((x3560*x3568)));
evalcond[6]=(((x3534*x3535))+((x3542*x3558))+((sj1*x3533))+((r20*x3544*x3557))+((x3542*x3562))+(((-1.0)*r21*x3541*x3544))+((r21*x3538*x3565))+(((-1.0)*r22*x3556))+((r22*x3569))+((r20*x3541*x3546))+(((-1.0)*x3566))+((r22*x3571))+(((-1.0)*r20*x3538*x3539))+((x3535*x3567))+(((0.250000349687704)*x3534*x3548)));
evalcond[7]=(((r01*x3546*x3557))+(((0.250000349687704)*x3534*x3555))+((cj0*x3572))+((x3542*x3549))+((r00*x3544*x3557))+((x3542*x3564))+((r01*x3538*x3565))+((x3532*x3545))+(((-1.0)*r01*x3541*x3544))+((r00*x3541*x3546))+((r02*x3571))+(((-1.0)*r00*x3538*x3539))+((x3534*x3561))+((r02*x3569))+(((-1.0)*r02*x3556)));
evalcond[8]=((((-1.0)*r10*x3538*x3539))+(((0.250000349687704)*x3534*x3554))+((sj4*x3546*x3553))+((x3542*x3553))+((x3532*x3560))+((x3542*x3543))+((r11*x3538*x3565))+(((-1.0)*r11*x3541*x3544))+((r12*x3571))+((x3534*x3550))+((sj0*x3572))+(((-1.0)*r12*x3556))+((r12*x3569))+((r10*x3541*x3546))+((r10*x3544*x3557)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3574=((0.26409636501044)*cj4);
IkReal x3575=(r20*sj5);
IkReal x3576=(cj5*r21);
IkReal x3577=(r10*sj5);
IkReal x3578=(cj5*r11);
IkReal x3579=((0.528192360616262)*sj4);
IkReal x3580=((0.18234135315471)*sj0);
IkReal x3581=(r12*sj0);
IkReal x3582=((0.10827950965428)*cj4*sj0);
IkReal x3583=((0.216558867852667)*sj0*sj4);
CheckValue<IkReal> x3584=IKPowWithIntegerCheck(sj0,-2);
if(!x3584.valid){
continue;
}
if( IKabs(((2.4390243902439)*(x3584.value)*(((((-0.0098)*cj0*sj0))+(((-1.0)*x3577*x3582))+(((-0.187545437253636)*cj4*x3581))+((x3578*x3580))+((r11*sj5*x3583))+(((-0.0838945627463637)*x3581))+(((-1.0)*py*sj0))+((x3577*x3580))+(((-1.0)*x3578*x3582))+(((-1.0)*cj5*r10*x3583)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*x3576))+(((-0.444735007694415)*x3575))+((x3574*x3575))+((x3574*x3576))+(((-1.0)*r21*sj5*x3579))+((cj5*r20*x3579))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((2.4390243902439)*(x3584.value)*(((((-0.0098)*cj0*sj0))+(((-1.0)*x3577*x3582))+(((-0.187545437253636)*cj4*x3581))+((x3578*x3580))+((r11*sj5*x3583))+(((-0.0838945627463637)*x3581))+(((-1.0)*py*sj0))+((x3577*x3580))+(((-1.0)*x3578*x3582))+(((-1.0)*cj5*r10*x3583))))))+IKsqr(((((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*x3576))+(((-0.444735007694415)*x3575))+((x3574*x3575))+((x3574*x3576))+(((-1.0)*r21*sj5*x3579))+((cj5*r20*x3579))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((2.4390243902439)*(x3584.value)*(((((-0.0098)*cj0*sj0))+(((-1.0)*x3577*x3582))+(((-0.187545437253636)*cj4*x3581))+((x3578*x3580))+((r11*sj5*x3583))+(((-0.0838945627463637)*x3581))+(((-1.0)*py*sj0))+((x3577*x3580))+(((-1.0)*x3578*x3582))+(((-1.0)*cj5*r10*x3583))))), ((((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*x3576))+(((-0.444735007694415)*x3575))+((x3574*x3575))+((x3574*x3576))+(((-1.0)*r21*sj5*x3579))+((cj5*r20*x3579))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x3585=IKsin(j1);
IkReal x3586=IKcos(j1);
IkReal x3587=sj0*sj0;
IkReal x3588=cj0*cj0;
IkReal x3589=((0.0098)*cj0);
IkReal x3590=(cj0*cj5);
IkReal x3591=(cj5*sj0);
IkReal x3592=((0.0648043305514941)*r21);
IkReal x3593=(r00*sj5);
IkReal x3594=((0.20357990508077)*sj3);
IkReal x3595=((0.135720094919197)*r21);
IkReal x3596=((1.0)*px);
IkReal x3597=((0.117537022603216)*sj3);
IkReal x3598=((0.00925751294893567)*cj4);
IkReal x3599=(r10*sj4);
IkReal x3600=(sj0*sj5);
IkReal x3601=(cj4*sj0);
IkReal x3602=(r20*sj5);
IkReal x3603=((0.10827950965428)*cj4);
IkReal x3604=(cj3*sj4);
IkReal x3605=((0.135720094919197)*sj5);
IkReal x3606=((0.117537022603216)*r11);
IkReal x3607=(cj5*r01);
IkReal x3608=(cj4*r02);
IkReal x3609=((0.117537022603216)*cj4);
IkReal x3610=((0.0160344678271334)*r02);
IkReal x3611=((0.0648043305514941)*r11);
IkReal x3612=((0.0160344678271334)*r12);
IkReal x3613=(cj0*cj4);
IkReal x3614=(cj5*sj3);
IkReal x3615=((0.0678600949192303)*cj4);
IkReal x3616=(r10*sj5);
IkReal x3617=((1.0)*py);
IkReal x3618=(cj5*r00);
IkReal x3619=(cj0*r21);
IkReal x3620=(r11*sj5);
IkReal x3621=((0.0160344678271334)*r22);
IkReal x3622=(r00*sj4);
IkReal x3623=((1.0)*pz);
IkReal x3624=(r22*sj0);
IkReal x3625=(sj3*sj4);
IkReal x3626=(cj5*r21);
IkReal x3627=(r21*sj3);
IkReal x3628=(cj0*r22);
IkReal x3629=((0.0185150129489311)*sj4);
IkReal x3630=(cj5*r11);
IkReal x3631=(r01*sj5);
IkReal x3632=((0.216558867852667)*sj4);
IkReal x3633=((0.135720094919197)*r20);
IkReal x3634=(sj0*x3589);
IkReal x3635=(sj4*x3600);
IkReal x3636=((0.27144)*cj3*cj4);
IkReal x3637=(r11*x3598);
IkReal x3638=((0.41)*x3585);
IkReal x3639=(cj0*x3616);
IkReal x3640=(sj5*x3629);
IkReal x3641=((0.41)*x3586);
IkReal x3642=(cj0*sj0*x3638);
evalcond[0]=(((cj5*r20*x3632))+(((-0.18234135315471)*x3626))+(((-1.0)*r21*sj5*x3632))+((x3603*x3626))+(((0.187545437253636)*cj4*r22))+pz+((x3602*x3603))+(((-0.18234135315471)*x3602))+(((0.0838945627463637)*r22))+(((-1.0)*x3641)));
evalcond[1]=((((0.18234135315471)*r11*x3591))+(((-1.0)*r11*x3591*x3603))+(((-1.0)*x3587*x3638))+(((-0.187545437253636)*r12*x3601))+(((-0.216558867852667)*x3591*x3599))+(((-1.0)*x3634))+(((-1.0)*r10*x3600*x3603))+(((-1.0)*sj0*x3617))+((r11*x3600*x3632))+(((-0.0838945627463637)*r12*sj0))+(((0.18234135315471)*r10*x3600)));
evalcond[2]=((((-0.187545437253636)*cj0*x3608))+(((-1.0)*x3588*x3638))+(((0.18234135315471)*r01*x3590))+((cj0*x3631*x3632))+(((-0.0838945627463637)*cj0*r02))+(((-1.0)*cj0*x3593*x3603))+(((-1.0)*cj0*x3596))+x3634+(((0.18234135315471)*cj0*x3593))+(((-1.0)*r01*x3590*x3603))+(((-0.216558867852667)*x3590*x3622)));
evalcond[3]=((((0.0648043305514941)*r20*x3600))+((x3620*x3636))+((cj4*r12*x3597))+(((-1.0)*sj0*x3621))+(((-1.0)*sj0*x3623))+((x3591*x3592))+((sj3*x3615*x3616))+(((-1.0)*r21*x3600*x3629))+((x3601*x3621))+(((0.135720094919197)*x3599*x3614))+(((-1.0)*cj5*r10*x3636))+((r11*x3614*x3615))+(((0.235073880801598)*r12*x3604))+(((0.135720094919197)*x3604*x3630))+((cj3*x3599*x3605))+((r20*x3598*x3600))+(((-1.0)*r12*x3597))+((r21*x3591*x3598))+((x3594*x3630))+((sj0*x3641))+(((-1.0)*r11*x3605*x3625))+((r20*x3591*x3629))+((x3594*x3616)));
evalcond[4]=((((0.135720094919197)*x3593*x3604))+((sj3*x3593*x3615))+(((0.0648043305514941)*cj0*x3602))+(((-1.0)*x3618*x3636))+((sj3*x3607*x3615))+(((0.135720094919197)*x3614*x3622))+((x3590*x3592))+(((0.235073880801598)*r02*x3604))+((cj0*x3598*x3602))+((x3593*x3594))+(((-1.0)*r02*x3597))+(((0.135720094919197)*x3604*x3607))+((x3631*x3636))+((x3597*x3608))+(((-1.0)*x3619*x3640))+((x3613*x3621))+((x3594*x3607))+((r21*x3590*x3598))+((cj0*x3641))+(((-1.0)*cj0*x3621))+(((-1.0)*cj0*x3623))+((r20*x3590*x3629))+(((-1.0)*r01*x3605*x3625)));
evalcond[5]=((((0.0648043305514941)*x3616))+((x3598*x3630))+((cj5*x3611))+(((-1.0)*r20*x3594*x3600))+((x3597*x3624))+((cj4*x3612))+(((-1.0)*r21*x3591*x3594))+((x3598*x3616))+(((-0.235073880801598)*x3604*x3624))+(((-1.0)*r20*sj3*x3600*x3615))+((r20*x3591*x3636))+(((-1.0)*r22*x3597*x3601))+((x3595*x3600*x3625))+(((-1.0)*x3591*x3625*x3633))+(((-1.0)*x3591*x3595*x3604))+(((-1.0)*x3600*x3604*x3633))+(((-1.0)*sj0*x3638))+(((-1.0)*x3617))+(((-1.0)*x3612))+(((-1.0)*r21*x3600*x3636))+(((0.0185150129489311)*cj5*x3599))+(((-1.0)*x3591*x3615*x3627))+(((-1.0)*x3589))+(((-1.0)*x3620*x3629)));
evalcond[6]=((((-1.0)*r21*x3590*x3594))+(((0.0648043305514941)*x3607))+((x3597*x3628))+(((0.0648043305514941)*x3593))+(((0.0160344678271334)*x3608))+((x3598*x3607))+((cj0*sj5*x3595*x3625))+(((-0.0678600949192303)*sj3*x3602*x3613))+(((-0.235073880801598)*x3604*x3628))+((x3618*x3629))+((r20*x3590*x3636))+(((-1.0)*r22*x3597*x3613))+((x3593*x3598))+(((-0.27144)*cj3*r21*sj5*x3613))+(((-1.0)*cj0*x3638))+(((-1.0)*x3590*x3595*x3604))+(((-1.0)*x3590*x3625*x3633))+(((-0.135720094919197)*cj0*x3602*x3604))+(((-1.0)*x3610))+(((-1.0)*x3590*x3615*x3627))+(((-1.0)*x3596))+(((0.0098)*sj0))+(((-1.0)*cj0*x3594*x3602))+(((-1.0)*x3629*x3631)));
evalcond[7]=((((-0.235073880801598)*x3590*x3599))+(((-1.0)*cj4*x3590*x3606))+(((-0.0678600949192303)*cj0*r12))+(((-0.20357990508077)*r12*x3613))+(((-1.0)*r01*x3600*x3629))+(((-1.0)*sj0*x3596))+(((-1.0)*x3609*x3639))+(((0.0098)*x3587))+((sj0*x3593*x3598))+(((-1.0)*sj0*x3610))+(((0.0648043305514941)*r01*x3591))+((r01*x3591*x3598))+((x3601*x3610))+(((0.235073880801598)*cj0*sj4*x3620))+(((0.117537022603216)*x3639))+(((0.0185150129489311)*x3591*x3622))+(((0.0648043305514941)*sj0*x3593))+(((-1.0)*x3642))+((x3590*x3606)));
evalcond[8]=(((x3590*x3611))+(((-1.0)*r01*x3591*x3609))+((x3598*x3639))+((x3612*x3613))+((x3590*x3637))+(((0.235073880801598)*r01*x3635))+(((0.117537022603216)*r01*x3591))+(((0.0185150129489311)*x3590*x3599))+(((-0.0098)*x3588))+(((0.117537022603216)*sj0*x3593))+(((-1.0)*cj0*x3612))+(((-1.0)*cj0*x3617))+(((-1.0)*cj0*x3620*x3629))+(((-0.235073880801598)*x3591*x3622))+(((-0.117537022603216)*x3593*x3601))+(((-0.20357990508077)*r02*x3601))+(((-0.0678600949192303)*r02*sj0))+(((-1.0)*x3642))+(((0.0648043305514941)*x3639)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3643=((0.250000349687704)*sj1);
IkReal x3644=(cj1*cj4);
IkReal x3645=((0.749999650312296)*r22);
IkReal x3646=(cj4*sj1);
IkReal x3647=((0.749999650312296)*r02);
IkReal x3648=((0.250000349687704)*cj1);
IkReal x3649=((0.433012903784321)*r00*sj5);
IkReal x3650=((0.433012903784321)*r20*sj5);
IkReal x3651=((0.433012903784321)*cj5*r01);
IkReal x3652=((0.433012903784321)*cj5*r21);
IkReal x3653=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3654=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3655=((0.866025201892125)*r01*sj4*sj5);
IkReal x3656=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x3644*x3651))+((r00*x3654))+((x3646*x3650))+((x3646*x3652))+((r20*x3653))+((r02*x3648))+(((-1.0)*cj1*x3655))+(((-1.0)*cj1*x3651))+(((-1.0)*cj1*x3649))+((r22*x3643))+(((-1.0)*sj1*x3652))+(((-1.0)*sj1*x3650))+(((-1.0)*sj1*x3656))+((x3645*x3646))+((x3644*x3649))+((x3644*x3647)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x3644*x3650))+((x3644*x3652))+(((-1.0)*x3646*x3649))+(((-1.0)*x3646*x3647))+(((-1.0)*x3646*x3651))+((r20*x3654))+(((-1.0)*cj1*x3656))+(((-1.0)*cj1*x3650))+(((-1.0)*cj1*x3652))+((sj1*x3651))+((sj1*x3655))+(((-1.0)*r00*x3653))+((sj1*x3649))+((r22*x3648))+(((-1.0)*r02*x3643))+((x3644*x3645)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x3644*x3651))+((r00*x3654))+((x3646*x3650))+((x3646*x3652))+((r20*x3653))+((r02*x3648))+(((-1.0)*cj1*x3655))+(((-1.0)*cj1*x3651))+(((-1.0)*cj1*x3649))+((r22*x3643))+(((-1.0)*sj1*x3652))+(((-1.0)*sj1*x3650))+(((-1.0)*sj1*x3656))+((x3645*x3646))+((x3644*x3649))+((x3644*x3647))))+IKsqr((((x3644*x3650))+((x3644*x3652))+(((-1.0)*x3646*x3649))+(((-1.0)*x3646*x3647))+(((-1.0)*x3646*x3651))+((r20*x3654))+(((-1.0)*cj1*x3656))+(((-1.0)*cj1*x3650))+(((-1.0)*cj1*x3652))+((sj1*x3651))+((sj1*x3655))+(((-1.0)*r00*x3653))+((sj1*x3649))+((r22*x3648))+(((-1.0)*r02*x3643))+((x3644*x3645))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x3644*x3651))+((r00*x3654))+((x3646*x3650))+((x3646*x3652))+((r20*x3653))+((r02*x3648))+(((-1.0)*cj1*x3655))+(((-1.0)*cj1*x3651))+(((-1.0)*cj1*x3649))+((r22*x3643))+(((-1.0)*sj1*x3652))+(((-1.0)*sj1*x3650))+(((-1.0)*sj1*x3656))+((x3645*x3646))+((x3644*x3649))+((x3644*x3647))), (((x3644*x3650))+((x3644*x3652))+(((-1.0)*x3646*x3649))+(((-1.0)*x3646*x3647))+(((-1.0)*x3646*x3651))+((r20*x3654))+(((-1.0)*cj1*x3656))+(((-1.0)*cj1*x3650))+(((-1.0)*cj1*x3652))+((sj1*x3651))+((sj1*x3655))+(((-1.0)*r00*x3653))+((sj1*x3649))+((r22*x3648))+(((-1.0)*r02*x3643))+((x3644*x3645))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3657=IKsin(j2);
IkReal x3658=IKcos(j2);
IkReal x3659=((0.749999650312296)*sj3);
IkReal x3660=(cj5*r01);
IkReal x3661=(r00*sj5);
IkReal x3662=(cj4*cj5);
IkReal x3663=((1.0)*cj3);
IkReal x3664=(r21*sj3);
IkReal x3665=(cj4*sj5);
IkReal x3666=(cj3*r21);
IkReal x3667=((0.500000349687582)*sj4);
IkReal x3668=((0.433012903784321)*r20);
IkReal x3669=(cj4*r22);
IkReal x3670=((0.433012903784321)*sj3);
IkReal x3671=((0.433012903784321)*cj4);
IkReal x3672=(r01*sj5);
IkReal x3673=(r20*sj5);
IkReal x3674=((0.0160344678271334)*r02);
IkReal x3675=(cj4*r02);
IkReal x3676=((0.00925751294893567)*cj4);
IkReal x3677=((0.0185150129489311)*sj4);
IkReal x3678=(r21*sj5);
IkReal x3679=(cj5*r21);
IkReal x3680=((0.866025201892125)*sj4);
IkReal x3681=(cj5*r20);
IkReal x3682=(cj5*r00);
IkReal x3683=((0.250000349687704)*sj3);
IkReal x3684=(cj1*x3658);
IkReal x3685=(sj1*x3657);
IkReal x3686=(cj1*x3657);
IkReal x3687=(sj1*x3658);
IkReal x3688=(x3685+x3684);
evalcond[0]=((((-0.433012903784321)*r21*x3662))+(((-0.250000349687704)*r22))+(((-0.749999650312296)*x3669))+(((0.433012903784321)*x3679))+(((-1.0)*x3665*x3668))+((x3678*x3680))+x3688+(((-1.0)*x3680*x3681))+((sj5*x3668)));
evalcond[1]=((((-0.250000349687704)*r02))+((x3672*x3680))+(((0.433012903784321)*x3661))+(((0.433012903784321)*x3660))+x3686+(((-1.0)*x3660*x3671))+(((-1.0)*x3661*x3671))+(((-1.0)*x3680*x3682))+(((-1.0)*x3687))+(((-0.749999650312296)*x3675)));
evalcond[2]=((((0.41)*cj1))+(((0.0648043305514941)*x3673))+(((0.0648043305514941)*x3679))+(((-0.0160344678271334)*r22))+(((0.00925751294893567)*r20*x3665))+(((0.00925751294893567)*r21*x3662))+(((-1.0)*pz))+(((-0.27144)*x3684))+(((-0.27144)*x3685))+(((0.0160344678271334)*x3669))+(((-1.0)*x3677*x3678))+((x3677*x3681)));
evalcond[3]=((((0.0648043305514941)*x3661))+(((0.0648043305514941)*x3660))+((x3660*x3676))+(((-1.0)*x3672*x3677))+(((-0.41)*sj1))+((x3661*x3676))+(((-1.0)*px))+(((-0.27144)*x3686))+((cj4*x3674))+(((0.27144)*x3687))+(((-1.0)*x3674))+((x3677*x3682)));
evalcond[4]=(((x3659*x3661))+((x3659*x3660))+(((-1.0)*sj3*x3667*x3672))+((sj3*x3667*x3682))+((cj3*x3660*x3667))+((cj3*r02*x3680))+((cj3*r01*x3665))+(((-1.0)*r00*x3662*x3663))+x3688+((cj4*x3660*x3683))+((cj3*x3661*x3667))+((x3670*x3675))+(((-1.0)*r02*x3670))+((cj4*x3661*x3683)));
evalcond[5]=(((cj5*x3666*x3667))+(((0.250000349687704)*x3662*x3664))+((sj3*x3667*x3681))+((cj3*x3667*x3673))+(((-1.0)*sj5*x3664*x3667))+x3687+(((-1.0)*r22*x3670))+(((-1.0)*r20*x3662*x3663))+((x3659*x3673))+((x3659*x3679))+(((-1.0)*x3686))+((cj3*r22*x3680))+((r20*x3665*x3683))+((x3669*x3670))+((x3665*x3666)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3689=(r02*sj1);
IkReal x3690=(cj1*cj4);
IkReal x3691=((0.749999650312296)*r22);
IkReal x3692=(cj4*sj1);
IkReal x3693=((0.250000349687704)*r22);
IkReal x3694=((0.433012903784321)*r00*sj5);
IkReal x3695=((0.433012903784321)*r20*sj5);
IkReal x3696=((0.433012903784321)*cj5*r01);
IkReal x3697=((0.433012903784321)*cj5*r21);
IkReal x3698=((0.866025201892125)*cj5*sj1*sj4);
IkReal x3699=((0.866025201892125)*cj1*cj5*sj4);
IkReal x3700=((0.866025201892125)*r01*sj4*sj5);
IkReal x3701=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*sj1*x3697))+(((-1.0)*sj1*x3695))+((r20*x3698))+(((-0.749999650312296)*r02*x3690))+((x3692*x3695))+((x3692*x3697))+((cj1*x3696))+((cj1*x3694))+((x3691*x3692))+((sj1*x3693))+(((-1.0)*sj1*x3701))+(((-0.250000349687704)*cj1*r02))+((cj1*x3700))+(((-1.0)*r00*x3699))+(((-1.0)*x3690*x3694))+(((-1.0)*x3690*x3696)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj1*x3696))+(((-1.0)*sj1*x3694))+((r00*x3698))+((r20*x3699))+(((-1.0)*cj1*x3701))+(((-1.0)*cj1*x3695))+(((-1.0)*cj1*x3697))+((x3692*x3694))+((x3692*x3696))+((cj1*x3693))+((x3690*x3691))+((x3690*x3697))+((x3690*x3695))+(((-1.0)*sj1*x3700))+(((0.749999650312296)*cj4*x3689))+(((0.250000349687704)*x3689)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj1*x3697))+(((-1.0)*sj1*x3695))+((r20*x3698))+(((-0.749999650312296)*r02*x3690))+((x3692*x3695))+((x3692*x3697))+((cj1*x3696))+((cj1*x3694))+((x3691*x3692))+((sj1*x3693))+(((-1.0)*sj1*x3701))+(((-0.250000349687704)*cj1*r02))+((cj1*x3700))+(((-1.0)*r00*x3699))+(((-1.0)*x3690*x3694))+(((-1.0)*x3690*x3696))))+IKsqr(((((-1.0)*sj1*x3696))+(((-1.0)*sj1*x3694))+((r00*x3698))+((r20*x3699))+(((-1.0)*cj1*x3701))+(((-1.0)*cj1*x3695))+(((-1.0)*cj1*x3697))+((x3692*x3694))+((x3692*x3696))+((cj1*x3693))+((x3690*x3691))+((x3690*x3697))+((x3690*x3695))+(((-1.0)*sj1*x3700))+(((0.749999650312296)*cj4*x3689))+(((0.250000349687704)*x3689))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*sj1*x3697))+(((-1.0)*sj1*x3695))+((r20*x3698))+(((-0.749999650312296)*r02*x3690))+((x3692*x3695))+((x3692*x3697))+((cj1*x3696))+((cj1*x3694))+((x3691*x3692))+((sj1*x3693))+(((-1.0)*sj1*x3701))+(((-0.250000349687704)*cj1*r02))+((cj1*x3700))+(((-1.0)*r00*x3699))+(((-1.0)*x3690*x3694))+(((-1.0)*x3690*x3696))), ((((-1.0)*sj1*x3696))+(((-1.0)*sj1*x3694))+((r00*x3698))+((r20*x3699))+(((-1.0)*cj1*x3701))+(((-1.0)*cj1*x3695))+(((-1.0)*cj1*x3697))+((x3692*x3694))+((x3692*x3696))+((cj1*x3693))+((x3690*x3691))+((x3690*x3697))+((x3690*x3695))+(((-1.0)*sj1*x3700))+(((0.749999650312296)*cj4*x3689))+(((0.250000349687704)*x3689))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3702=IKcos(j2);
IkReal x3703=IKsin(j2);
IkReal x3704=((0.433012903784321)*sj3);
IkReal x3705=((0.749999650312296)*sj3);
IkReal x3706=(r00*sj5);
IkReal x3707=(cj4*cj5);
IkReal x3708=((1.0)*cj3);
IkReal x3709=(cj5*r01);
IkReal x3710=(r21*sj3);
IkReal x3711=(cj4*sj5);
IkReal x3712=(cj3*r21);
IkReal x3713=((0.500000349687582)*sj4);
IkReal x3714=((0.433012903784321)*r20);
IkReal x3715=(cj4*r22);
IkReal x3716=(r20*sj5);
IkReal x3717=((0.0160344678271334)*r02);
IkReal x3718=(cj4*r02);
IkReal x3719=(r01*sj5);
IkReal x3720=(cj5*r00);
IkReal x3721=((0.0185150129489311)*sj4);
IkReal x3722=(r21*sj5);
IkReal x3723=(cj5*r21);
IkReal x3724=((0.866025201892125)*sj4);
IkReal x3725=(cj5*r20);
IkReal x3726=((0.250000349687704)*sj3);
IkReal x3727=(sj1*x3702);
IkReal x3728=(cj1*x3702);
IkReal x3729=(sj1*x3703);
IkReal x3730=(cj1*x3703);
IkReal x3731=((1.0)*x3730);
evalcond[0]=((((-0.250000349687704)*r22))+(((-1.0)*x3711*x3714))+(((-1.0)*x3724*x3725))+x3728+x3729+((x3722*x3724))+(((0.433012903784321)*x3723))+(((-0.433012903784321)*r21*x3707))+(((-0.749999650312296)*x3715))+((sj5*x3714)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x3731))+((x3719*x3724))+(((-0.433012903784321)*cj4*x3706))+(((-0.433012903784321)*r01*x3707))+x3727+(((0.433012903784321)*x3709))+(((0.433012903784321)*x3706))+(((-1.0)*x3720*x3724))+(((-0.749999650312296)*x3718)));
evalcond[2]=((((0.0648043305514941)*x3723))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.00925751294893567)*r20*x3711))+(((-1.0)*pz))+(((0.00925751294893567)*r21*x3707))+(((-1.0)*x3721*x3722))+(((-0.27144)*x3729))+(((-0.27144)*x3728))+((x3721*x3725))+(((0.0648043305514941)*x3716))+(((0.0160344678271334)*x3715)));
evalcond[3]=((((0.00925751294893567)*cj4*x3706))+(((0.0648043305514941)*x3706))+(((0.0648043305514941)*x3709))+((cj4*x3717))+(((-1.0)*x3717))+(((0.41)*sj1))+(((-1.0)*px))+(((0.00925751294893567)*r01*x3707))+(((-1.0)*x3719*x3721))+(((-0.27144)*x3727))+((x3720*x3721))+(((0.27144)*x3730)));
evalcond[4]=(((x3711*x3712))+((r20*x3711*x3726))+(((-1.0)*x3731))+((x3705*x3723))+((cj5*x3712*x3713))+(((-1.0)*sj5*x3710*x3713))+((x3704*x3715))+x3727+((x3705*x3716))+((sj3*x3713*x3725))+(((0.250000349687704)*x3707*x3710))+((cj3*x3713*x3716))+(((-1.0)*r20*x3707*x3708))+(((-1.0)*r22*x3704))+((cj3*r22*x3724)));
evalcond[5]=(((cj3*x3706*x3713))+(((-1.0)*r02*x3704))+((cj3*r02*x3724))+((cj4*x3706*x3726))+(((-1.0)*r00*x3707*x3708))+((cj3*r01*x3711))+((x3704*x3718))+(((-1.0)*sj3*x3713*x3719))+((x3705*x3706))+((x3705*x3709))+(((-1.0)*x3729))+(((-1.0)*x3728))+((sj3*x3713*x3720))+((r01*x3707*x3726))+((cj3*x3709*x3713)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3732=((0.250000349687704)*r12);
IkReal x3733=((0.749999650312296)*cj4);
IkReal x3734=((0.433012903784321)*sj5);
IkReal x3735=(cj1*r10);
IkReal x3736=(cj1*r22);
IkReal x3737=(cj1*r20);
IkReal x3738=((0.866025201892125)*sj4);
IkReal x3739=(r20*sj1);
IkReal x3740=(r22*sj1);
IkReal x3741=(r10*sj1);
IkReal x3742=(r11*sj1);
IkReal x3743=((0.433012903784321)*cj5);
IkReal x3744=(r21*sj1);
IkReal x3745=(cj1*r21);
IkReal x3746=(cj1*r11);
IkReal x3747=(cj5*sj1*x3738);
IkReal x3748=(cj4*r21*x3743);
if( IKabs(((((-1.0)*sj5*x3738*x3746))+(((-1.0)*sj5*x3738*x3744))+((cj1*r12*x3733))+((cj4*x3734*x3739))+((cj4*x3734*x3735))+((cj5*x3735*x3738))+(((-1.0)*x3743*x3744))+(((-1.0)*x3743*x3746))+((cj5*x3738*x3739))+((cj4*x3743*x3746))+((cj4*x3743*x3744))+((cj1*x3732))+(((-1.0)*x3734*x3735))+(((-1.0)*x3734*x3739))+((x3733*x3740))+(((0.250000349687704)*x3740)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.250000349687704)*x3736))+(((-1.0)*sj5*x3738*x3745))+((x3742*x3743))+(((-1.0)*cj4*x3742*x3743))+((cj4*x3734*x3737))+((x3733*x3736))+((sj5*x3738*x3742))+(((-1.0)*x3743*x3745))+(((-1.0)*cj5*x3738*x3741))+((x3734*x3741))+(((-1.0)*r12*sj1*x3733))+(((-1.0)*sj1*x3732))+((cj4*x3743*x3745))+(((-1.0)*x3734*x3737))+((cj5*x3737*x3738))+(((-1.0)*cj4*x3734*x3741)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj5*x3738*x3746))+(((-1.0)*sj5*x3738*x3744))+((cj1*r12*x3733))+((cj4*x3734*x3739))+((cj4*x3734*x3735))+((cj5*x3735*x3738))+(((-1.0)*x3743*x3744))+(((-1.0)*x3743*x3746))+((cj5*x3738*x3739))+((cj4*x3743*x3746))+((cj4*x3743*x3744))+((cj1*x3732))+(((-1.0)*x3734*x3735))+(((-1.0)*x3734*x3739))+((x3733*x3740))+(((0.250000349687704)*x3740))))+IKsqr(((((0.250000349687704)*x3736))+(((-1.0)*sj5*x3738*x3745))+((x3742*x3743))+(((-1.0)*cj4*x3742*x3743))+((cj4*x3734*x3737))+((x3733*x3736))+((sj5*x3738*x3742))+(((-1.0)*x3743*x3745))+(((-1.0)*cj5*x3738*x3741))+((x3734*x3741))+(((-1.0)*r12*sj1*x3733))+(((-1.0)*sj1*x3732))+((cj4*x3743*x3745))+(((-1.0)*x3734*x3737))+((cj5*x3737*x3738))+(((-1.0)*cj4*x3734*x3741))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*sj5*x3738*x3746))+(((-1.0)*sj5*x3738*x3744))+((cj1*r12*x3733))+((cj4*x3734*x3739))+((cj4*x3734*x3735))+((cj5*x3735*x3738))+(((-1.0)*x3743*x3744))+(((-1.0)*x3743*x3746))+((cj5*x3738*x3739))+((cj4*x3743*x3746))+((cj4*x3743*x3744))+((cj1*x3732))+(((-1.0)*x3734*x3735))+(((-1.0)*x3734*x3739))+((x3733*x3740))+(((0.250000349687704)*x3740))), ((((0.250000349687704)*x3736))+(((-1.0)*sj5*x3738*x3745))+((x3742*x3743))+(((-1.0)*cj4*x3742*x3743))+((cj4*x3734*x3737))+((x3733*x3736))+((sj5*x3738*x3742))+(((-1.0)*x3743*x3745))+(((-1.0)*cj5*x3738*x3741))+((x3734*x3741))+(((-1.0)*r12*sj1*x3733))+(((-1.0)*sj1*x3732))+((cj4*x3743*x3745))+(((-1.0)*x3734*x3737))+((cj5*x3737*x3738))+(((-1.0)*cj4*x3734*x3741))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3749=IKsin(j2);
IkReal x3750=IKcos(j2);
IkReal x3751=(cj5*r11);
IkReal x3752=((0.433012903784321)*cj4);
IkReal x3753=(r21*sj5);
IkReal x3754=((0.500000349687582)*sj4);
IkReal x3755=((0.749999650312296)*sj3);
IkReal x3756=(cj3*cj4);
IkReal x3757=(cj5*r10);
IkReal x3758=((0.0185150129489311)*sj4);
IkReal x3759=(r20*sj5);
IkReal x3760=(cj4*r22);
IkReal x3761=(r10*sj5);
IkReal x3762=(r22*sj3);
IkReal x3763=(r11*sj5);
IkReal x3764=((0.00925751294893567)*cj4);
IkReal x3765=(cj5*r21);
IkReal x3766=(r12*sj3);
IkReal x3767=(cj4*r12);
IkReal x3768=(cj5*r20);
IkReal x3769=((0.866025201892125)*sj4);
IkReal x3770=(cj1*x3750);
IkReal x3771=(sj1*x3749);
IkReal x3772=(cj1*x3749);
IkReal x3773=((0.250000349687704)*cj4*sj3);
IkReal x3774=(sj1*x3750);
IkReal x3775=(cj3*x3769);
IkReal x3776=(x3771+x3770);
evalcond[0]=((((-1.0)*x3752*x3759))+(((-0.250000349687704)*r22))+(((-1.0)*x3752*x3765))+(((-0.749999650312296)*x3760))+x3776+(((-1.0)*x3768*x3769))+(((0.433012903784321)*x3759))+(((0.433012903784321)*x3765))+((x3753*x3769)));
evalcond[1]=((((-1.0)*x3757*x3769))+(((-0.250000349687704)*r12))+(((-1.0)*x3752*x3761))+(((-0.749999650312296)*x3767))+(((-1.0)*x3774))+x3772+(((-1.0)*x3751*x3752))+((x3763*x3769))+(((0.433012903784321)*x3751))+(((0.433012903784321)*x3761)));
evalcond[2]=((((0.0648043305514941)*x3759))+(((-1.0)*x3753*x3758))+(((0.41)*cj1))+((x3758*x3768))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x3765))+(((-1.0)*pz))+(((0.0160344678271334)*x3760))+((x3759*x3764))+((x3764*x3765))+(((-0.27144)*x3770))+(((-0.27144)*x3771)));
evalcond[3]=(((x3757*x3758))+(((0.0648043305514941)*x3751))+(((-0.0160344678271334)*r12))+(((0.0648043305514941)*x3761))+(((-0.41)*sj1))+(((-1.0)*py))+(((0.0160344678271334)*x3767))+((x3761*x3764))+(((0.27144)*x3774))+((x3751*x3764))+(((-1.0)*x3758*x3763))+(((-0.27144)*x3772)));
evalcond[4]=(((x3756*x3763))+((x3751*x3755))+(((-1.0)*x3756*x3757))+(((-0.433012903784321)*x3766))+((x3752*x3766))+x3776+((cj3*x3754*x3761))+((cj3*x3751*x3754))+((x3761*x3773))+((x3751*x3773))+((r12*x3775))+((sj3*x3754*x3757))+(((-1.0)*sj3*x3754*x3763))+((x3755*x3761)));
evalcond[5]=(((cj3*x3754*x3759))+((x3755*x3759))+((r22*x3775))+(((-0.433012903784321)*x3762))+(((-1.0)*x3772))+((x3752*x3762))+x3774+((cj3*x3754*x3765))+(((-1.0)*sj3*x3753*x3754))+((x3759*x3773))+(((-1.0)*x3756*x3768))+((x3765*x3773))+((x3753*x3756))+((x3755*x3765))+((sj3*x3754*x3768)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3777=((0.250000349687704)*r12);
IkReal x3778=((0.749999650312296)*cj4);
IkReal x3779=(cj1*r22);
IkReal x3780=((0.866025201892125)*sj4);
IkReal x3781=(cj1*r20);
IkReal x3782=(sj1*sj5);
IkReal x3783=((0.433012903784321)*r20);
IkReal x3784=((0.433012903784321)*sj5);
IkReal x3785=(cj1*r10);
IkReal x3786=(r22*sj1);
IkReal x3787=((0.433012903784321)*r10);
IkReal x3788=((0.433012903784321)*cj5);
IkReal x3789=(cj1*r21);
IkReal x3790=(cj1*r11);
IkReal x3791=(r11*sj1);
IkReal x3792=(cj1*cj4*x3784);
IkReal x3793=(cj5*sj1*x3780);
IkReal x3794=(cj4*r21*x3788);
if( IKabs((((x3784*x3785))+(((-1.0)*cj4*x3788*x3790))+((x3788*x3790))+(((-1.0)*x3782*x3783))+((x3778*x3786))+((sj1*x3794))+((cj4*x3782*x3783))+(((-1.0)*cj5*x3780*x3785))+(((0.250000349687704)*x3786))+(((-1.0)*cj1*r12*x3778))+(((-1.0)*cj4*x3784*x3785))+(((-1.0)*r21*x3780*x3782))+((r20*x3793))+(((-1.0)*r21*sj1*x3788))+(((-1.0)*cj1*x3777))+((sj5*x3780*x3790)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj5*x3780*x3789))+((r12*sj1*x3778))+((cj5*x3780*x3781))+((r10*x3793))+(((-1.0)*x3782*x3787))+(((0.250000349687704)*x3779))+((cj4*x3788*x3789))+((x3778*x3779))+((cj4*x3782*x3787))+((cj4*x3788*x3791))+(((-1.0)*x3781*x3784))+((sj1*x3777))+((cj4*x3781*x3784))+(((-1.0)*r11*x3780*x3782))+(((-1.0)*x3788*x3791))+(((-1.0)*x3788*x3789)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x3784*x3785))+(((-1.0)*cj4*x3788*x3790))+((x3788*x3790))+(((-1.0)*x3782*x3783))+((x3778*x3786))+((sj1*x3794))+((cj4*x3782*x3783))+(((-1.0)*cj5*x3780*x3785))+(((0.250000349687704)*x3786))+(((-1.0)*cj1*r12*x3778))+(((-1.0)*cj4*x3784*x3785))+(((-1.0)*r21*x3780*x3782))+((r20*x3793))+(((-1.0)*r21*sj1*x3788))+(((-1.0)*cj1*x3777))+((sj5*x3780*x3790))))+IKsqr(((((-1.0)*sj5*x3780*x3789))+((r12*sj1*x3778))+((cj5*x3780*x3781))+((r10*x3793))+(((-1.0)*x3782*x3787))+(((0.250000349687704)*x3779))+((cj4*x3788*x3789))+((x3778*x3779))+((cj4*x3782*x3787))+((cj4*x3788*x3791))+(((-1.0)*x3781*x3784))+((sj1*x3777))+((cj4*x3781*x3784))+(((-1.0)*r11*x3780*x3782))+(((-1.0)*x3788*x3791))+(((-1.0)*x3788*x3789))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x3784*x3785))+(((-1.0)*cj4*x3788*x3790))+((x3788*x3790))+(((-1.0)*x3782*x3783))+((x3778*x3786))+((sj1*x3794))+((cj4*x3782*x3783))+(((-1.0)*cj5*x3780*x3785))+(((0.250000349687704)*x3786))+(((-1.0)*cj1*r12*x3778))+(((-1.0)*cj4*x3784*x3785))+(((-1.0)*r21*x3780*x3782))+((r20*x3793))+(((-1.0)*r21*sj1*x3788))+(((-1.0)*cj1*x3777))+((sj5*x3780*x3790))), ((((-1.0)*sj5*x3780*x3789))+((r12*sj1*x3778))+((cj5*x3780*x3781))+((r10*x3793))+(((-1.0)*x3782*x3787))+(((0.250000349687704)*x3779))+((cj4*x3788*x3789))+((x3778*x3779))+((cj4*x3782*x3787))+((cj4*x3788*x3791))+(((-1.0)*x3781*x3784))+((sj1*x3777))+((cj4*x3781*x3784))+(((-1.0)*r11*x3780*x3782))+(((-1.0)*x3788*x3791))+(((-1.0)*x3788*x3789))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x3795=IKcos(j2);
IkReal x3796=IKsin(j2);
IkReal x3797=(cj5*r11);
IkReal x3798=((0.433012903784321)*cj4);
IkReal x3799=(r21*sj5);
IkReal x3800=((0.500000349687582)*sj4);
IkReal x3801=((0.749999650312296)*sj3);
IkReal x3802=(cj3*cj4);
IkReal x3803=(cj5*r10);
IkReal x3804=((0.0185150129489311)*sj4);
IkReal x3805=(r20*sj5);
IkReal x3806=(cj4*r22);
IkReal x3807=(r10*sj5);
IkReal x3808=(r12*sj3);
IkReal x3809=(r11*sj5);
IkReal x3810=(r22*sj3);
IkReal x3811=((0.27144)*sj1);
IkReal x3812=((0.00925751294893567)*cj4);
IkReal x3813=(cj5*r20);
IkReal x3814=(cj5*r21);
IkReal x3815=(cj4*r12);
IkReal x3816=((0.866025201892125)*sj4);
IkReal x3817=(sj1*x3795);
IkReal x3818=(cj1*x3795);
IkReal x3819=(cj1*x3796);
IkReal x3820=((0.250000349687704)*cj4*sj3);
IkReal x3821=(cj3*x3816);
IkReal x3822=(sj1*x3796);
IkReal x3823=((1.0)*x3819);
evalcond[0]=((((0.433012903784321)*x3814))+(((-0.250000349687704)*r22))+(((-1.0)*x3813*x3816))+(((-0.749999650312296)*x3806))+(((-1.0)*x3798*x3814))+x3822+x3818+(((-1.0)*x3798*x3805))+(((0.433012903784321)*x3805))+((x3799*x3816)));
evalcond[1]=((((-1.0)*x3797*x3798))+(((0.433012903784321)*x3797))+(((-0.250000349687704)*r12))+(((-1.0)*x3823))+((x3809*x3816))+(((-1.0)*x3803*x3816))+x3817+(((-0.749999650312296)*x3815))+(((-1.0)*x3798*x3807))+(((0.433012903784321)*x3807)));
evalcond[2]=(((x3805*x3812))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+((x3804*x3813))+(((-1.0)*x3796*x3811))+(((-1.0)*pz))+(((-0.27144)*x3818))+(((-1.0)*x3799*x3804))+(((0.0648043305514941)*x3805))+(((0.0160344678271334)*x3806))+(((0.0648043305514941)*x3814))+((x3812*x3814)));
evalcond[3]=(((x3797*x3812))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+((x3807*x3812))+(((0.27144)*x3819))+(((-1.0)*py))+(((0.0648043305514941)*x3797))+(((0.0648043305514941)*x3807))+((x3803*x3804))+(((-1.0)*x3804*x3809))+(((0.0160344678271334)*x3815))+(((-1.0)*x3795*x3811)));
evalcond[4]=(((x3799*x3802))+(((-1.0)*x3802*x3813))+((cj3*x3800*x3805))+((cj3*x3800*x3814))+((x3805*x3820))+((x3801*x3814))+(((-1.0)*x3823))+((x3801*x3805))+((r22*x3821))+((sj3*x3800*x3813))+((x3798*x3810))+x3817+((x3814*x3820))+(((-0.433012903784321)*x3810))+(((-1.0)*sj3*x3799*x3800)));
evalcond[5]=(((r12*x3821))+((cj3*x3800*x3807))+((x3802*x3809))+((cj3*x3797*x3800))+((x3797*x3801))+(((-1.0)*x3802*x3803))+((x3797*x3820))+(((-1.0)*sj3*x3800*x3809))+((x3807*x3820))+((x3798*x3808))+((x3801*x3807))+(((-1.0)*x3822))+(((-1.0)*x3818))+(((-0.433012903784321)*x3808))+((sj3*x3800*x3803)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3824=(cj4*sj1);
IkReal x3825=((0.433012903784321)*sj0);
IkReal x3826=(cj5*r21);
IkReal x3827=(cj1*r12);
IkReal x3828=(r20*sj5);
IkReal x3829=(r20*sj0);
IkReal x3830=(r10*sj1);
IkReal x3831=((0.749999650312296)*cj4);
IkReal x3832=(r21*sj0);
IkReal x3833=((0.433012903784321)*sj5);
IkReal x3834=(cj1*cj4);
IkReal x3835=(r22*sj0);
IkReal x3836=((0.250000349687704)*x3835);
IkReal x3837=((0.866025201892125)*cj5*sj4);
IkReal x3838=((0.433012903784321)*cj5*r11);
IkReal x3839=(cj1*r10*x3833);
IkReal x3840=((0.866025201892125)*sj1*sj4*sj5);
IkReal x3841=((0.866025201892125)*cj1*sj4*sj5);
CheckValue<IkReal> x3842 = IKatan2WithCheck(IkReal((((x3834*x3838))+((sj1*x3836))+((x3827*x3831))+((cj1*r10*x3837))+((x3824*x3825*x3828))+((x3824*x3825*x3826))+(((-1.0)*r11*x3841))+((sj1*x3829*x3837))+(((-1.0)*cj1*x3838))+(((0.250000349687704)*x3827))+(((-1.0)*sj1*x3825*x3828))+(((-1.0)*sj1*x3825*x3826))+((r10*x3833*x3834))+(((-1.0)*x3839))+(((0.749999650312296)*x3824*x3835))+(((-1.0)*x3832*x3840)))),IkReal(((((-1.0)*cj1*x3825*x3826))+(((-1.0)*cj1*x3825*x3828))+(((-0.250000349687704)*r12*sj1))+(((-1.0)*x3830*x3837))+((x3825*x3826*x3834))+((sj1*x3838))+((cj1*x3831*x3835))+((cj1*x3829*x3837))+((x3825*x3828*x3834))+(((-1.0)*r10*x3824*x3833))+((cj1*x3836))+(((-0.749999650312296)*r12*x3824))+(((-1.0)*x3824*x3838))+((x3830*x3833))+(((-1.0)*x3832*x3841))+((r11*x3840)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3842.valid){
continue;
}
CheckValue<IkReal> x3843=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x3843.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x3842.value)+(((1.5707963267949)*(x3843.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x3844=IKsin(j2);
IkReal x3845=IKcos(j2);
IkReal x3846=(cj4*sj5);
IkReal x3847=(cj3*r21);
IkReal x3848=((0.433012903784321)*r20);
IkReal x3849=((0.749999650312296)*cj4);
IkReal x3850=(cj4*cj5);
IkReal x3851=((1.0)*cj3);
IkReal x3852=((0.433012903784321)*r01);
IkReal x3853=(sj4*sj5);
IkReal x3854=((0.749999650312296)*sj3);
IkReal x3855=(r10*sj5);
IkReal x3856=((0.500000349687582)*sj3);
IkReal x3857=(cj0*sj1);
IkReal x3858=((0.500000349687582)*cj3);
IkReal x3859=((0.0160344678271334)*r22);
IkReal x3860=(r20*sj3);
IkReal x3861=(r00*sj5);
IkReal x3862=(cj3*r11);
IkReal x3863=((0.0160344678271334)*r12);
IkReal x3864=((0.433012903784321)*r11);
IkReal x3865=(cj5*r11);
IkReal x3866=(r10*sj3);
IkReal x3867=(r00*sj3);
IkReal x3868=((0.433012903784321)*sj3);
IkReal x3869=(cj5*sj4);
IkReal x3870=(r20*sj5);
IkReal x3871=((0.433012903784321)*r21);
IkReal x3872=(sj0*sj1);
IkReal x3873=(cj3*r01);
IkReal x3874=(cj5*r21);
IkReal x3875=((0.0160344678271334)*r02);
IkReal x3876=(cj5*r01);
IkReal x3877=((0.250000349687704)*sj3);
IkReal x3878=(cj1*x3844);
IkReal x3879=((0.500000349687582)*x3869);
IkReal x3880=((0.27144)*x3845);
IkReal x3881=(cj4*x3868);
IkReal x3882=(sj1*x3844);
IkReal x3883=((0.866025201892125)*cj3*sj4);
IkReal x3884=(cj1*x3845);
IkReal x3885=((1.0)*x3845);
evalcond[0]=((((-0.250000349687704)*r22))+(((-0.866025201892125)*r20*x3869))+((sj5*x3848))+((cj5*x3871))+x3884+x3882+(((-1.0)*r22*x3849))+(((0.866025201892125)*r21*x3853))+(((-1.0)*x3846*x3848))+(((-1.0)*x3850*x3871)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*r02*x3849))+((cj5*x3852))+(((0.866025201892125)*r01*x3853))+(((-0.433012903784321)*r00*x3846))+(((-1.0)*x3850*x3852))+(((-0.866025201892125)*r00*x3869))+(((0.433012903784321)*x3861))+(((-1.0)*x3857*x3885))+((cj0*x3878)));
evalcond[2]=(((cj5*x3864))+(((-0.250000349687704)*r12))+(((-1.0)*x3850*x3864))+(((-0.433012903784321)*r10*x3846))+(((-0.866025201892125)*r10*x3869))+((sj0*x3878))+(((-1.0)*r12*x3849))+(((-1.0)*x3872*x3885))+(((0.433012903784321)*x3855))+(((0.866025201892125)*r11*x3853)));
evalcond[3]=((((-1.0)*cj1*x3880))+(((-1.0)*x3859))+(((0.00925751294893567)*r20*x3846))+(((0.41)*cj1))+(((-1.0)*pz))+(((-0.0185150129489311)*r21*x3853))+(((0.00925751294893567)*r21*x3850))+(((0.0648043305514941)*x3874))+(((0.0648043305514941)*x3870))+(((-0.27144)*x3882))+(((0.0185150129489311)*r20*x3869))+((cj4*x3859)));
evalcond[4]=((((-0.0185150129489311)*r01*x3853))+(((-0.41)*x3857))+(((0.0185150129489311)*r00*x3869))+(((-0.27144)*cj0*x3878))+((cj4*x3875))+(((0.0648043305514941)*x3861))+(((-1.0)*px))+(((0.0648043305514941)*x3876))+((x3857*x3880))+(((0.00925751294893567)*r01*x3850))+(((-1.0)*x3875))+(((0.00925751294893567)*r00*x3846))+(((0.0098)*sj0)));
evalcond[5]=(((x3872*x3880))+((cj4*x3863))+(((-1.0)*x3863))+(((-0.41)*x3872))+(((-0.27144)*sj0*x3878))+(((0.0648043305514941)*x3865))+(((0.0648043305514941)*x3855))+(((-1.0)*py))+(((0.00925751294893567)*r10*x3846))+(((0.00925751294893567)*r11*x3850))+(((0.0185150129489311)*r10*x3869))+(((-0.0098)*cj0))+(((-0.0185150129489311)*r11*x3853)));
evalcond[6]=(((sj1*x3845))+((r20*x3853*x3858))+((x3846*x3847))+(((0.250000349687704)*x3846*x3860))+((r22*x3881))+((r22*x3883))+((x3847*x3879))+((r20*x3856*x3869))+(((-1.0)*r20*x3850*x3851))+(((-1.0)*x3878))+((x3854*x3870))+((x3854*x3874))+((r21*x3850*x3877))+(((-1.0)*r21*x3853*x3856))+(((-1.0)*r22*x3868)));
evalcond[7]=((((-1.0)*r02*x3868))+(((-1.0)*r00*x3850*x3851))+(((-1.0)*r01*x3853*x3856))+((r00*x3853*x3858))+(((0.250000349687704)*x3846*x3867))+((x3846*x3873))+((cj0*x3884))+((r02*x3881))+((r02*x3883))+((r01*x3858*x3869))+((x3844*x3857))+((x3854*x3876))+((r01*x3850*x3877))+((r00*x3856*x3869))+((x3854*x3861)));
evalcond[8]=(((sj0*x3884))+((x3854*x3855))+(((0.250000349687704)*x3846*x3866))+((x3846*x3862))+((r12*x3883))+((r12*x3881))+(((-1.0)*r10*x3850*x3851))+(((-1.0)*r11*x3853*x3856))+((r11*x3850*x3877))+(((-1.0)*r12*x3868))+((x3844*x3872))+((r10*x3853*x3858))+((sj4*x3858*x3865))+((r10*x3856*x3869))+((x3854*x3865)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x3886=(cj0*r20);
IkReal x3887=(cj1*r00);
IkReal x3888=(r02*sj1);
IkReal x3889=(r00*sj1);
IkReal x3890=((0.433012903784321)*sj5);
IkReal x3891=(cj4*sj1);
IkReal x3892=((0.749999650312296)*cj4);
IkReal x3893=(cj0*r22);
IkReal x3894=(r01*sj1);
IkReal x3895=(cj1*cj4);
IkReal x3896=(cj0*r21);
IkReal x3897=(cj1*r02);
IkReal x3898=((0.866025201892125)*cj5*sj4);
IkReal x3899=((0.866025201892125)*sj4*sj5);
IkReal x3900=((0.433012903784321)*cj5*r01);
IkReal x3901=((0.433012903784321)*cj5*x3896);
CheckValue<IkReal> x3902=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x3902.valid){
continue;
}
CheckValue<IkReal> x3903 = IKatan2WithCheck(IkReal((((cj4*x3887*x3890))+((sj1*x3886*x3898))+(((0.250000349687704)*sj1*x3893))+(((-1.0)*sj1*x3901))+(((0.250000349687704)*x3897))+(((-1.0)*cj1*r01*x3899))+(((-1.0)*x3887*x3890))+((x3887*x3898))+((x3892*x3897))+((x3895*x3900))+((x3886*x3890*x3891))+(((-1.0)*cj1*x3900))+((x3891*x3901))+(((-1.0)*sj1*x3886*x3890))+(((-1.0)*sj1*x3896*x3899))+(((0.749999650312296)*x3891*x3893)))),IkReal(((((-1.0)*x3889*x3898))+((cj1*x3886*x3898))+((cj1*x3892*x3893))+(((-1.0)*cj1*x3896*x3899))+(((-1.0)*cj4*x3889*x3890))+((x3894*x3899))+((x3889*x3890))+(((-1.0)*cj1*x3886*x3890))+((x3895*x3901))+((x3886*x3890*x3895))+(((-0.250000349687704)*x3888))+(((-1.0)*x3891*x3900))+(((0.433012903784321)*cj5*x3894))+(((-1.0)*cj1*x3901))+(((-1.0)*x3888*x3892))+(((0.250000349687704)*cj1*x3893)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3903.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x3902.value)))+(x3903.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x3904=IKsin(j2);
IkReal x3905=IKcos(j2);
IkReal x3906=(cj4*sj5);
IkReal x3907=(cj3*r21);
IkReal x3908=((0.433012903784321)*r20);
IkReal x3909=((0.749999650312296)*cj4);
IkReal x3910=(cj4*cj5);
IkReal x3911=((1.0)*cj3);
IkReal x3912=((0.433012903784321)*r01);
IkReal x3913=(sj4*sj5);
IkReal x3914=((0.749999650312296)*sj3);
IkReal x3915=(r10*sj5);
IkReal x3916=((0.500000349687582)*sj3);
IkReal x3917=(cj0*sj1);
IkReal x3918=((0.500000349687582)*cj3);
IkReal x3919=((0.0160344678271334)*r22);
IkReal x3920=(r20*sj3);
IkReal x3921=(r00*sj5);
IkReal x3922=(cj3*r11);
IkReal x3923=((0.0160344678271334)*r12);
IkReal x3924=((0.433012903784321)*r11);
IkReal x3925=(cj5*r11);
IkReal x3926=(r10*sj3);
IkReal x3927=(r00*sj3);
IkReal x3928=((0.433012903784321)*sj3);
IkReal x3929=(cj5*sj4);
IkReal x3930=(r20*sj5);
IkReal x3931=((0.433012903784321)*r21);
IkReal x3932=(sj0*sj1);
IkReal x3933=(cj3*r01);
IkReal x3934=(cj5*r21);
IkReal x3935=((0.0160344678271334)*r02);
IkReal x3936=(cj5*r01);
IkReal x3937=((0.250000349687704)*sj3);
IkReal x3938=(cj1*x3904);
IkReal x3939=((0.500000349687582)*x3929);
IkReal x3940=((0.27144)*x3905);
IkReal x3941=(cj4*x3928);
IkReal x3942=(sj1*x3904);
IkReal x3943=((0.866025201892125)*cj3*sj4);
IkReal x3944=(cj1*x3905);
IkReal x3945=((1.0)*x3905);
evalcond[0]=((((-0.250000349687704)*r22))+(((-1.0)*x3906*x3908))+(((-1.0)*r22*x3909))+(((-0.866025201892125)*r20*x3929))+x3942+x3944+((cj5*x3931))+(((0.866025201892125)*r21*x3913))+((sj5*x3908))+(((-1.0)*x3910*x3931)));
evalcond[1]=((((-0.250000349687704)*r02))+((cj5*x3912))+((cj0*x3938))+(((-0.433012903784321)*r00*x3906))+(((-1.0)*x3910*x3912))+(((-0.866025201892125)*r00*x3929))+(((0.866025201892125)*r01*x3913))+(((0.433012903784321)*x3921))+(((-1.0)*r02*x3909))+(((-1.0)*x3917*x3945)));
evalcond[2]=((((-0.866025201892125)*r10*x3929))+(((-1.0)*r12*x3909))+(((-0.250000349687704)*r12))+(((-0.433012903784321)*r10*x3906))+(((-1.0)*x3932*x3945))+(((-1.0)*x3910*x3924))+((sj0*x3938))+(((0.433012903784321)*x3915))+(((0.866025201892125)*r11*x3913))+((cj5*x3924)));
evalcond[3]=((((0.0185150129489311)*r20*x3929))+(((-1.0)*x3919))+(((0.00925751294893567)*r20*x3906))+(((0.0648043305514941)*x3930))+(((0.0648043305514941)*x3934))+((cj4*x3919))+(((0.41)*cj1))+(((-1.0)*cj1*x3940))+(((-1.0)*pz))+(((-0.0185150129489311)*r21*x3913))+(((-0.27144)*x3942))+(((0.00925751294893567)*r21*x3910)));
evalcond[4]=(((x3917*x3940))+(((0.0648043305514941)*x3936))+(((0.0648043305514941)*x3921))+(((-1.0)*px))+(((0.00925751294893567)*r00*x3906))+(((0.0185150129489311)*r00*x3929))+(((0.00925751294893567)*r01*x3910))+(((-1.0)*x3935))+(((-0.0185150129489311)*r01*x3913))+(((-0.27144)*cj0*x3938))+((cj4*x3935))+(((-0.41)*x3917))+(((0.0098)*sj0)));
evalcond[5]=((((-0.41)*x3932))+(((-1.0)*x3923))+(((-0.0185150129489311)*r11*x3913))+(((0.00925751294893567)*r11*x3910))+(((0.0648043305514941)*x3925))+((x3932*x3940))+(((-1.0)*py))+(((0.0185150129489311)*r10*x3929))+(((0.0648043305514941)*x3915))+((cj4*x3923))+(((-0.0098)*cj0))+(((0.00925751294893567)*r10*x3906))+(((-0.27144)*sj0*x3938)));
evalcond[6]=(((r22*x3941))+((r22*x3943))+(((-1.0)*x3938))+((r21*x3910*x3937))+((sj1*x3905))+((r20*x3916*x3929))+(((-1.0)*r20*x3910*x3911))+((x3906*x3907))+((x3907*x3939))+(((-1.0)*r22*x3928))+(((-1.0)*r21*x3913*x3916))+(((0.250000349687704)*x3906*x3920))+((r20*x3913*x3918))+((x3914*x3934))+((x3914*x3930)));
evalcond[7]=(((x3904*x3917))+((x3906*x3933))+((cj0*x3944))+(((-1.0)*r00*x3910*x3911))+((r01*x3910*x3937))+((x3914*x3921))+(((-1.0)*r02*x3928))+((r00*x3916*x3929))+(((-1.0)*r01*x3913*x3916))+(((0.250000349687704)*x3906*x3927))+((x3914*x3936))+((r00*x3913*x3918))+((r02*x3943))+((r02*x3941))+((r01*x3918*x3929)));
evalcond[8]=(((x3914*x3915))+((x3906*x3922))+((r10*x3916*x3929))+((sj0*x3944))+(((-1.0)*r12*x3928))+((r11*x3910*x3937))+((x3904*x3932))+((x3914*x3925))+(((-1.0)*r11*x3913*x3916))+((sj4*x3918*x3925))+(((0.250000349687704)*x3906*x3926))+((r12*x3941))+((r12*x3943))+(((-1.0)*r10*x3910*x3911))+((r10*x3913*x3918)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x3946=(cj0*cj4);
IkReal x3947=((0.433012903784321)*r22);
IkReal x3948=((0.433012903784321)*cj5);
IkReal x3949=(r20*sj5);
IkReal x3950=((0.749999650312296)*cj0);
IkReal x3951=(cj5*r21);
IkReal x3952=((0.866025201892125)*sj4);
IkReal x3953=((0.433012903784321)*sj5);
IkReal x3954=(r21*sj5);
IkReal x3955=(cj5*r20);
IkReal x3956=((0.500000349687582)*cj0*sj4);
CheckValue<IkReal> x3957 = IKatan2WithCheck(IkReal(((((-1.0)*x3955*x3956))+(((-0.250000349687704)*x3946*x3949))+(((-1.0)*x3949*x3950))+((cj0*x3947))+(((-1.0)*x3946*x3947))+(((-0.250000349687704)*x3946*x3951))+(((-1.0)*x3950*x3951))+((x3954*x3956)))),IkReal(((((-1.0)*x3949*x3956))+((x3946*x3955))+(((-1.0)*x3951*x3956))+(((-1.0)*x3946*x3954))+(((-1.0)*cj0*r22*x3952)))),IKFAST_ATAN2_MAGTHRESH);
if(!x3957.valid){
continue;
}
CheckValue<IkReal> x3958=IKPowWithIntegerCheck(IKsign((((r02*(((-0.250000349687704)+(((-0.749999650312296)*cj4))))))+((r00*((x3953+(((-1.0)*cj5*x3952))+(((-1.0)*cj4*x3953))))))+((r01*(((((-1.0)*cj4*x3948))+x3948+((sj5*x3952)))))))),-1);
if(!x3958.valid){
continue;
}
j3array[0]=((-1.5707963267949)+(x3957.value)+(((1.5707963267949)*(x3958.value))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[3];
IkReal x3959=IKsin(j3);
IkReal x3960=IKcos(j3);
IkReal x3961=(r11*sj5);
IkReal x3962=(cj5*r20);
IkReal x3963=(cj4*cj5);
IkReal x3964=(r00*sj5);
IkReal x3965=(cj5*r01);
IkReal x3966=(r10*sj5);
IkReal x3967=(r21*sj5);
IkReal x3968=(r20*sj5);
IkReal x3969=(cj5*r21);
IkReal x3970=(cj5*r11);
IkReal x3971=(r01*sj5);
IkReal x3972=((1.0)*x3959);
IkReal x3973=((0.250000349687704)*x3960);
IkReal x3974=((0.749999650312296)*x3960);
IkReal x3975=(cj4*x3959);
IkReal x3976=((0.500000349687582)*sj4*x3960);
IkReal x3977=((0.433012903784321)*r12*x3960);
IkReal x3978=((0.500000349687582)*sj4*x3959);
IkReal x3979=((0.433012903784321)*r02*x3960);
IkReal x3980=((0.866025201892125)*sj4*x3959);
IkReal x3981=((0.433012903784321)*r22*x3960);
evalcond[0]=((((-1.0)*x3962*x3976))+(((-1.0)*x3969*x3974))+(((-1.0)*x3968*x3974))+(((-1.0)*cj4*x3968*x3973))+x3981+(((-1.0)*cj4*x3962*x3972))+(((-1.0)*r21*x3963*x3973))+(((-1.0)*cj4*x3981))+((x3969*x3978))+((x3968*x3978))+((x3967*x3975))+((x3967*x3976))+((r22*x3980)));
evalcond[1]=((((-1.0)*r11*x3963*x3973))+(((-1.0)*cj5*r10*x3976))+cj0+((x3970*x3978))+((x3961*x3975))+((x3961*x3976))+(((-1.0)*r10*x3963*x3972))+(((-1.0)*cj4*x3966*x3973))+(((-1.0)*cj4*x3977))+x3977+(((-1.0)*x3970*x3974))+((x3966*x3978))+(((-1.0)*x3966*x3974))+((r12*x3980)));
evalcond[2]=((((-1.0)*r00*x3963*x3972))+(((-1.0)*sj0))+((x3965*x3978))+(((-1.0)*cj4*x3964*x3973))+(((-1.0)*x3965*x3974))+((x3971*x3976))+((x3971*x3975))+(((-1.0)*cj4*x3979))+x3979+(((-1.0)*r01*x3963*x3973))+((x3964*x3978))+((r02*x3980))+(((-1.0)*x3964*x3974))+(((-1.0)*cj5*r00*x3976)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j1eval[1];
j1eval[0]=sj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal j1eval[1];
j1eval[0]=cj0;
if( IKabs(j1eval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x3982=((0.528192360616262)*sj4);
IkReal x3983=(r20*sj5);
IkReal x3984=((0.26409636501044)*cj4);
IkReal x3985=((0.444735007694415)*cj5);
IkReal x3986=((0.457427895740576)*cj4);
IkReal x3987=(r10*sj5);
if( IKabs(((((-1.0)*r12*x3986))+((r11*x3985))+(((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*x3984*x3987))+(((-1.0)*cj5*r11*x3984))+((r11*sj5*x3982))+(((-1.0)*cj5*r10*x3982))+(((0.444735007694415)*x3987)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((x3983*x3984))+(((0.204620884747229)*r22))+(((-0.444735007694415)*x3983))+(((-1.0)*r21*x3985))+((cj5*r20*x3982))+((cj5*r21*x3984))+((r22*x3986))+(((-1.0)*r21*sj5*x3982))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*r12*x3986))+((r11*x3985))+(((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*x3984*x3987))+(((-1.0)*cj5*r11*x3984))+((r11*sj5*x3982))+(((-1.0)*cj5*r10*x3982))+(((0.444735007694415)*x3987))))+IKsqr((((x3983*x3984))+(((0.204620884747229)*r22))+(((-0.444735007694415)*x3983))+(((-1.0)*r21*x3985))+((cj5*r20*x3982))+((cj5*r21*x3984))+((r22*x3986))+(((-1.0)*r21*sj5*x3982))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((-1.0)*r12*x3986))+((r11*x3985))+(((-2.4390243902439)*py))+(((-0.204620884747229)*r12))+(((-1.0)*x3984*x3987))+(((-1.0)*cj5*r11*x3984))+((r11*sj5*x3982))+(((-1.0)*cj5*r10*x3982))+(((0.444735007694415)*x3987))), (((x3983*x3984))+(((0.204620884747229)*r22))+(((-0.444735007694415)*x3983))+(((-1.0)*r21*x3985))+((cj5*r20*x3982))+((cj5*r21*x3984))+((r22*x3986))+(((-1.0)*r21*sj5*x3982))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x3988=((1.0)*py);
IkReal x3989=(cj5*r11);
IkReal x3990=(cj5*sj3);
IkReal x3991=(r20*sj5);
IkReal x3992=((0.135720094919197)*sj4);
IkReal x3993=(r21*sj5);
IkReal x3994=((0.0185150129489311)*sj4);
IkReal x3995=((0.135720094919197)*sj3);
IkReal x3996=((0.00925751294893567)*cj4);
IkReal x3997=(cj4*cj5);
IkReal x3998=(cj3*r10);
IkReal x3999=((0.0678600949192303)*cj4);
IkReal x4000=(r10*sj5);
IkReal x4001=((0.10827950965428)*cj4);
IkReal x4002=(cj4*r22);
IkReal x4003=((0.0160344678271334)*r12);
IkReal x4004=((0.20357990508077)*sj3);
IkReal x4005=(cj5*r20);
IkReal x4006=((0.216558867852667)*sj4);
IkReal x4007=((0.117537022603216)*sj3);
IkReal x4008=((0.27144)*cj3);
IkReal x4009=(cj5*r21);
IkReal x4010=(cj4*r12);
IkReal x4011=((0.41)*(IKsin(j1)));
IkReal x4012=((0.41)*(IKcos(j1)));
IkReal x4013=(cj5*r10*sj4);
IkReal x4014=(r11*sj4*sj5);
IkReal x4015=((0.235073880801598)*cj3*sj4);
IkReal x4016=(x4011+x3988);
evalcond[0]=((((0.10827950965428)*r21*x3997))+(((-0.18234135315471)*x4009))+(((-1.0)*x3993*x4006))+((x4005*x4006))+((x3991*x4001))+(((-1.0)*x4012))+pz+(((-0.18234135315471)*x3991))+(((0.0838945627463637)*r22))+(((0.187545437253636)*x4002)));
evalcond[1]=((((-0.187545437253636)*x4010))+(((-1.0)*x3989*x4001))+((r11*sj5*x4006))+(((-0.0838945627463637)*r12))+(((-1.0)*x4000*x4001))+(((-1.0)*x4016))+(((0.18234135315471)*x4000))+(((-1.0)*cj5*r10*x4006))+(((0.18234135315471)*x3989)));
evalcond[2]=((((0.0648043305514941)*x3989))+((cj5*r10*x3994))+((x3989*x3996))+(((-1.0)*x4003))+(((-1.0)*r22*x4015))+(((-1.0)*r21*x3990*x3999))+((x3996*x4000))+(((-0.20357990508077)*r21*x3990))+(((-1.0)*x3991*x4004))+(((-1.0)*x4002*x4007))+((r22*x4007))+(((-1.0)*cj3*x3992*x4009))+((r20*x3997*x4008))+(((-1.0)*cj3*x3991*x3992))+(((-1.0)*r20*x3990*x3992))+(((-1.0)*x4016))+(((-1.0)*sj3*x3991*x3999))+((sj3*x3992*x3993))+(((-1.0)*cj4*x3993*x4008))+(((-1.0)*r11*sj5*x3994))+(((0.0648043305514941)*x4000))+((cj4*x4003)));
evalcond[3]=((((-1.0)*x3993*x3994))+((x4000*x4004))+((r10*x3990*x3992))+((x3996*x4009))+(((-0.0160344678271334)*r22))+(((-1.0)*r11*sj3*sj5*x3992))+(((-0.27144)*x3997*x3998))+((x3989*x4004))+((sj3*x3999*x4000))+(((0.0648043305514941)*x3991))+(((-1.0)*pz))+x4012+((cj3*x3989*x3992))+((r12*x4015))+((cj4*r11*sj5*x4008))+(((-1.0)*r12*x4007))+(((0.0160344678271334)*x4002))+((sj3*x3989*x3999))+((x4007*x4010))+((x3994*x4005))+((sj5*x3992*x3998))+(((0.0648043305514941)*x4009))+((x3991*x3996)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4017=((0.250000349687704)*r12);
IkReal x4018=((0.749999650312296)*cj4);
IkReal x4019=((0.433012903784321)*sj5);
IkReal x4020=(cj1*r10);
IkReal x4021=(cj1*r22);
IkReal x4022=(cj1*r20);
IkReal x4023=((0.866025201892125)*sj4);
IkReal x4024=(r20*sj1);
IkReal x4025=(r22*sj1);
IkReal x4026=(r10*sj1);
IkReal x4027=(r11*sj1);
IkReal x4028=((0.433012903784321)*cj5);
IkReal x4029=(r21*sj1);
IkReal x4030=(cj1*r21);
IkReal x4031=(cj1*r11);
IkReal x4032=(cj5*sj1*x4023);
IkReal x4033=(cj4*r21*x4028);
if( IKabs((((cj4*x4019*x4020))+((cj4*x4019*x4024))+(((0.250000349687704)*x4025))+(((-1.0)*x4028*x4029))+((cj5*x4023*x4024))+((x4018*x4025))+((cj1*x4017))+((cj1*r12*x4018))+(((-1.0)*x4028*x4031))+((cj4*x4028*x4029))+((cj5*x4020*x4023))+((cj4*x4028*x4031))+(((-1.0)*sj5*x4023*x4031))+(((-1.0)*x4019*x4024))+(((-1.0)*x4019*x4020))+(((-1.0)*sj5*x4023*x4029)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x4019*x4022))+(((0.250000349687704)*x4021))+((sj5*x4023*x4027))+(((-1.0)*cj4*x4019*x4026))+(((-1.0)*cj4*x4027*x4028))+(((-1.0)*cj5*x4023*x4026))+((x4019*x4026))+((cj5*x4022*x4023))+((x4018*x4021))+(((-1.0)*r12*sj1*x4018))+(((-1.0)*x4028*x4030))+((cj4*x4028*x4030))+(((-1.0)*sj1*x4017))+((x4027*x4028))+(((-1.0)*sj5*x4023*x4030))+(((-1.0)*x4019*x4022)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x4019*x4020))+((cj4*x4019*x4024))+(((0.250000349687704)*x4025))+(((-1.0)*x4028*x4029))+((cj5*x4023*x4024))+((x4018*x4025))+((cj1*x4017))+((cj1*r12*x4018))+(((-1.0)*x4028*x4031))+((cj4*x4028*x4029))+((cj5*x4020*x4023))+((cj4*x4028*x4031))+(((-1.0)*sj5*x4023*x4031))+(((-1.0)*x4019*x4024))+(((-1.0)*x4019*x4020))+(((-1.0)*sj5*x4023*x4029))))+IKsqr((((cj4*x4019*x4022))+(((0.250000349687704)*x4021))+((sj5*x4023*x4027))+(((-1.0)*cj4*x4019*x4026))+(((-1.0)*cj4*x4027*x4028))+(((-1.0)*cj5*x4023*x4026))+((x4019*x4026))+((cj5*x4022*x4023))+((x4018*x4021))+(((-1.0)*r12*sj1*x4018))+(((-1.0)*x4028*x4030))+((cj4*x4028*x4030))+(((-1.0)*sj1*x4017))+((x4027*x4028))+(((-1.0)*sj5*x4023*x4030))+(((-1.0)*x4019*x4022))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x4019*x4020))+((cj4*x4019*x4024))+(((0.250000349687704)*x4025))+(((-1.0)*x4028*x4029))+((cj5*x4023*x4024))+((x4018*x4025))+((cj1*x4017))+((cj1*r12*x4018))+(((-1.0)*x4028*x4031))+((cj4*x4028*x4029))+((cj5*x4020*x4023))+((cj4*x4028*x4031))+(((-1.0)*sj5*x4023*x4031))+(((-1.0)*x4019*x4024))+(((-1.0)*x4019*x4020))+(((-1.0)*sj5*x4023*x4029))), (((cj4*x4019*x4022))+(((0.250000349687704)*x4021))+((sj5*x4023*x4027))+(((-1.0)*cj4*x4019*x4026))+(((-1.0)*cj4*x4027*x4028))+(((-1.0)*cj5*x4023*x4026))+((x4019*x4026))+((cj5*x4022*x4023))+((x4018*x4021))+(((-1.0)*r12*sj1*x4018))+(((-1.0)*x4028*x4030))+((cj4*x4028*x4030))+(((-1.0)*sj1*x4017))+((x4027*x4028))+(((-1.0)*sj5*x4023*x4030))+(((-1.0)*x4019*x4022))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4034=IKsin(j2);
IkReal x4035=IKcos(j2);
IkReal x4036=(cj5*r11);
IkReal x4037=((0.433012903784321)*cj4);
IkReal x4038=(r21*sj5);
IkReal x4039=((0.500000349687582)*sj4);
IkReal x4040=((0.749999650312296)*sj3);
IkReal x4041=(cj3*cj4);
IkReal x4042=(cj5*r10);
IkReal x4043=((0.0185150129489311)*sj4);
IkReal x4044=(r20*sj5);
IkReal x4045=(cj4*r22);
IkReal x4046=(r10*sj5);
IkReal x4047=(r22*sj3);
IkReal x4048=(r11*sj5);
IkReal x4049=((0.00925751294893567)*cj4);
IkReal x4050=(cj5*r21);
IkReal x4051=(r12*sj3);
IkReal x4052=(cj4*r12);
IkReal x4053=(cj5*r20);
IkReal x4054=((0.866025201892125)*sj4);
IkReal x4055=(cj1*x4035);
IkReal x4056=(sj1*x4034);
IkReal x4057=(cj1*x4034);
IkReal x4058=((0.250000349687704)*cj4*sj3);
IkReal x4059=(sj1*x4035);
IkReal x4060=(cj3*x4054);
IkReal x4061=(x4056+x4055);
evalcond[0]=((((-0.250000349687704)*r22))+(((-1.0)*x4053*x4054))+(((-0.749999650312296)*x4045))+x4061+(((-1.0)*x4037*x4050))+(((0.433012903784321)*x4050))+((x4038*x4054))+(((-1.0)*x4037*x4044))+(((0.433012903784321)*x4044)));
evalcond[1]=(((x4048*x4054))+(((-0.250000349687704)*r12))+(((-0.749999650312296)*x4052))+(((-1.0)*x4042*x4054))+x4057+(((-1.0)*x4036*x4037))+(((-1.0)*x4059))+(((-1.0)*x4037*x4046))+(((0.433012903784321)*x4046))+(((0.433012903784321)*x4036)));
evalcond[2]=((((-0.27144)*x4056))+(((-0.27144)*x4055))+((x4049*x4050))+(((0.0160344678271334)*x4045))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x4050))+((x4043*x4053))+(((-1.0)*pz))+(((0.0648043305514941)*x4044))+((x4044*x4049))+(((-1.0)*x4038*x4043)));
evalcond[3]=((((-0.27144)*x4057))+(((0.27144)*x4059))+(((0.0160344678271334)*x4052))+(((-1.0)*x4043*x4048))+((x4046*x4049))+(((-0.0160344678271334)*r12))+((x4036*x4049))+(((-0.41)*sj1))+(((-1.0)*py))+((x4042*x4043))+(((0.0648043305514941)*x4046))+(((0.0648043305514941)*x4036)));
evalcond[4]=(((x4041*x4048))+(((-0.433012903784321)*x4051))+((x4040*x4046))+((cj3*x4039*x4046))+((x4036*x4058))+((x4036*x4040))+((x4037*x4051))+((x4046*x4058))+(((-1.0)*sj3*x4039*x4048))+((cj3*x4036*x4039))+x4061+((r12*x4060))+((sj3*x4039*x4042))+(((-1.0)*x4041*x4042)));
evalcond[5]=(((x4040*x4044))+((cj3*x4039*x4044))+(((-0.433012903784321)*x4047))+((x4037*x4047))+((cj3*x4039*x4050))+(((-1.0)*sj3*x4038*x4039))+((x4044*x4058))+x4059+(((-1.0)*x4057))+(((-1.0)*x4041*x4053))+((x4050*x4058))+((x4038*x4041))+((sj3*x4039*x4053))+((x4040*x4050))+((r22*x4060)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4062=((0.528192360616262)*sj4);
IkReal x4063=((0.26409636501044)*cj4);
IkReal x4064=(r20*sj5);
IkReal x4065=((0.444735007694415)*cj5);
IkReal x4066=((0.457427895740576)*cj4);
IkReal x4067=(r10*sj5);
if( IKabs((((cj5*r10*x4062))+(((-0.444735007694415)*x4067))+(((-1.0)*r11*x4065))+((x4063*x4067))+((cj5*r11*x4063))+((r12*x4066))+(((0.204620884747229)*r12))+(((-1.0)*r11*sj5*x4062))+(((2.4390243902439)*py)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x4062))+(((-0.444735007694415)*x4064))+(((0.204620884747229)*r22))+(((-1.0)*r21*x4065))+((x4063*x4064))+((cj5*r21*x4063))+(((-1.0)*r21*sj5*x4062))+((r22*x4066))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj5*r10*x4062))+(((-0.444735007694415)*x4067))+(((-1.0)*r11*x4065))+((x4063*x4067))+((cj5*r11*x4063))+((r12*x4066))+(((0.204620884747229)*r12))+(((-1.0)*r11*sj5*x4062))+(((2.4390243902439)*py))))+IKsqr((((cj5*r20*x4062))+(((-0.444735007694415)*x4064))+(((0.204620884747229)*r22))+(((-1.0)*r21*x4065))+((x4063*x4064))+((cj5*r21*x4063))+(((-1.0)*r21*sj5*x4062))+((r22*x4066))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((cj5*r10*x4062))+(((-0.444735007694415)*x4067))+(((-1.0)*r11*x4065))+((x4063*x4067))+((cj5*r11*x4063))+((r12*x4066))+(((0.204620884747229)*r12))+(((-1.0)*r11*sj5*x4062))+(((2.4390243902439)*py))), (((cj5*r20*x4062))+(((-0.444735007694415)*x4064))+(((0.204620884747229)*r22))+(((-1.0)*r21*x4065))+((x4063*x4064))+((cj5*r21*x4063))+(((-1.0)*r21*sj5*x4062))+((r22*x4066))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4068=(cj5*sj4);
IkReal x4069=((0.135720094919197)*sj3);
IkReal x4070=(cj5*r11);
IkReal x4071=(cj5*r21);
IkReal x4072=((0.20357990508077)*sj3);
IkReal x4073=(r20*sj5);
IkReal x4074=((0.00925751294893567)*cj4);
IkReal x4075=(cj4*r10);
IkReal x4076=((0.27144)*cj3);
IkReal x4077=((0.10827950965428)*cj4);
IkReal x4078=((0.117537022603216)*sj3);
IkReal x4079=(cj4*r22);
IkReal x4080=(cj3*sj4);
IkReal x4081=(cj4*r12);
IkReal x4082=(r10*sj5);
IkReal x4083=(cj4*sj5);
IkReal x4084=((0.135720094919197)*cj3);
IkReal x4085=((0.41)*(IKcos(j1)));
IkReal x4086=((0.41)*(IKsin(j1)));
IkReal x4087=(r11*sj4*sj5);
IkReal x4088=((0.0678600949192303)*cj4*sj3);
IkReal x4089=(r21*sj4*sj5);
evalcond[0]=((((-0.18234135315471)*x4070))+(((-1.0)*x4086))+(((0.216558867852667)*r10*x4068))+(((-0.216558867852667)*x4087))+((x4070*x4077))+(((0.10827950965428)*sj5*x4075))+(((0.187545437253636)*x4081))+py+(((0.0838945627463637)*r12))+(((-0.18234135315471)*x4082)));
evalcond[1]=((((0.187545437253636)*x4079))+(((-0.18234135315471)*x4071))+(((-0.18234135315471)*x4073))+(((-1.0)*x4085))+(((-0.216558867852667)*x4089))+((x4071*x4077))+(((0.216558867852667)*r20*x4068))+((x4073*x4077))+pz+(((0.0838945627463637)*r22)));
evalcond[2]=(((r11*x4068*x4084))+(((-1.0)*x4069*x4087))+((x4070*x4088))+(((-1.0)*x4071*x4074))+(((-0.0648043305514941)*x4071))+(((-0.0648043305514941)*x4073))+((x4072*x4082))+(((0.0185150129489311)*x4089))+(((-1.0)*x4085))+(((-0.0185150129489311)*r20*x4068))+(((-1.0)*cj5*x4075*x4076))+((x4070*x4072))+pz+(((-1.0)*r12*x4078))+(((0.0160344678271334)*r22))+(((0.235073880801598)*r12*x4080))+((r11*x4076*x4083))+(((-0.0160344678271334)*x4079))+(((0.135720094919197)*x4080*x4082))+(((0.0678600949192303)*sj3*sj5*x4075))+(((-1.0)*x4073*x4074))+((r10*x4068*x4069))+((x4078*x4081)));
evalcond[3]=((((-1.0)*x4069*x4089))+((x4071*x4088))+((x4078*x4079))+(((-1.0)*r22*x4078))+(((0.0648043305514941)*x4082))+((r21*x4076*x4083))+(((-0.0185150129489311)*x4087))+(((0.0185150129489311)*r10*x4068))+(((-0.0160344678271334)*r12))+(((-1.0)*cj4*cj5*r20*x4076))+((x4072*x4073))+((x4070*x4074))+((x4071*x4072))+(((-1.0)*py))+x4086+(((0.235073880801598)*r22*x4080))+((r21*x4068*x4084))+(((0.0160344678271334)*x4081))+(((0.135720094919197)*x4073*x4080))+(((0.0648043305514941)*x4070))+((x4074*x4082))+((r20*x4068*x4069))+((x4073*x4088)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4090=((0.250000349687704)*r12);
IkReal x4091=((0.749999650312296)*cj4);
IkReal x4092=(cj1*r22);
IkReal x4093=((0.866025201892125)*sj4);
IkReal x4094=(cj1*r20);
IkReal x4095=(sj1*sj5);
IkReal x4096=((0.433012903784321)*r20);
IkReal x4097=((0.433012903784321)*sj5);
IkReal x4098=(cj1*r10);
IkReal x4099=(r22*sj1);
IkReal x4100=((0.433012903784321)*r10);
IkReal x4101=((0.433012903784321)*cj5);
IkReal x4102=(cj1*r21);
IkReal x4103=(cj1*r11);
IkReal x4104=(r11*sj1);
IkReal x4105=(cj1*cj4*x4097);
IkReal x4106=(cj5*sj1*x4093);
IkReal x4107=(cj4*r21*x4101);
if( IKabs((((cj4*x4095*x4096))+(((-1.0)*r21*x4093*x4095))+(((-1.0)*cj4*x4101*x4103))+((r20*x4106))+(((-1.0)*cj5*x4093*x4098))+(((-1.0)*cj1*r12*x4091))+(((-1.0)*r21*sj1*x4101))+(((-1.0)*cj1*x4090))+((x4101*x4103))+((sj1*x4107))+((x4091*x4099))+(((-1.0)*x4095*x4096))+((x4097*x4098))+(((0.250000349687704)*x4099))+(((-1.0)*cj4*x4097*x4098))+((sj5*x4093*x4103)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*r11*x4093*x4095))+(((-1.0)*x4095*x4100))+((cj4*x4094*x4097))+(((-1.0)*sj5*x4093*x4102))+((cj4*x4101*x4102))+((cj4*x4101*x4104))+((r12*sj1*x4091))+((x4091*x4092))+(((0.250000349687704)*x4092))+(((-1.0)*x4101*x4104))+(((-1.0)*x4101*x4102))+((cj5*x4093*x4094))+((sj1*x4090))+((r10*x4106))+(((-1.0)*x4094*x4097))+((cj4*x4095*x4100)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x4095*x4096))+(((-1.0)*r21*x4093*x4095))+(((-1.0)*cj4*x4101*x4103))+((r20*x4106))+(((-1.0)*cj5*x4093*x4098))+(((-1.0)*cj1*r12*x4091))+(((-1.0)*r21*sj1*x4101))+(((-1.0)*cj1*x4090))+((x4101*x4103))+((sj1*x4107))+((x4091*x4099))+(((-1.0)*x4095*x4096))+((x4097*x4098))+(((0.250000349687704)*x4099))+(((-1.0)*cj4*x4097*x4098))+((sj5*x4093*x4103))))+IKsqr(((((-1.0)*r11*x4093*x4095))+(((-1.0)*x4095*x4100))+((cj4*x4094*x4097))+(((-1.0)*sj5*x4093*x4102))+((cj4*x4101*x4102))+((cj4*x4101*x4104))+((r12*sj1*x4091))+((x4091*x4092))+(((0.250000349687704)*x4092))+(((-1.0)*x4101*x4104))+(((-1.0)*x4101*x4102))+((cj5*x4093*x4094))+((sj1*x4090))+((r10*x4106))+(((-1.0)*x4094*x4097))+((cj4*x4095*x4100))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x4095*x4096))+(((-1.0)*r21*x4093*x4095))+(((-1.0)*cj4*x4101*x4103))+((r20*x4106))+(((-1.0)*cj5*x4093*x4098))+(((-1.0)*cj1*r12*x4091))+(((-1.0)*r21*sj1*x4101))+(((-1.0)*cj1*x4090))+((x4101*x4103))+((sj1*x4107))+((x4091*x4099))+(((-1.0)*x4095*x4096))+((x4097*x4098))+(((0.250000349687704)*x4099))+(((-1.0)*cj4*x4097*x4098))+((sj5*x4093*x4103))), ((((-1.0)*r11*x4093*x4095))+(((-1.0)*x4095*x4100))+((cj4*x4094*x4097))+(((-1.0)*sj5*x4093*x4102))+((cj4*x4101*x4102))+((cj4*x4101*x4104))+((r12*sj1*x4091))+((x4091*x4092))+(((0.250000349687704)*x4092))+(((-1.0)*x4101*x4104))+(((-1.0)*x4101*x4102))+((cj5*x4093*x4094))+((sj1*x4090))+((r10*x4106))+(((-1.0)*x4094*x4097))+((cj4*x4095*x4100))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4108=IKcos(j2);
IkReal x4109=IKsin(j2);
IkReal x4110=(cj5*r11);
IkReal x4111=((0.433012903784321)*cj4);
IkReal x4112=(r21*sj5);
IkReal x4113=((0.500000349687582)*sj4);
IkReal x4114=((0.749999650312296)*sj3);
IkReal x4115=(cj3*cj4);
IkReal x4116=(cj5*r10);
IkReal x4117=((0.0185150129489311)*sj4);
IkReal x4118=(r20*sj5);
IkReal x4119=(cj4*r22);
IkReal x4120=(r10*sj5);
IkReal x4121=(r12*sj3);
IkReal x4122=(r11*sj5);
IkReal x4123=(r22*sj3);
IkReal x4124=((0.27144)*sj1);
IkReal x4125=((0.00925751294893567)*cj4);
IkReal x4126=(cj5*r20);
IkReal x4127=(cj5*r21);
IkReal x4128=(cj4*r12);
IkReal x4129=((0.866025201892125)*sj4);
IkReal x4130=(sj1*x4108);
IkReal x4131=(cj1*x4108);
IkReal x4132=(cj1*x4109);
IkReal x4133=((0.250000349687704)*cj4*sj3);
IkReal x4134=(cj3*x4129);
IkReal x4135=(sj1*x4109);
IkReal x4136=((1.0)*x4132);
evalcond[0]=((((-0.250000349687704)*r22))+(((-1.0)*x4111*x4127))+(((-1.0)*x4111*x4118))+(((0.433012903784321)*x4118))+(((0.433012903784321)*x4127))+(((-0.749999650312296)*x4119))+x4131+x4135+(((-1.0)*x4126*x4129))+((x4112*x4129)));
evalcond[1]=((((-0.250000349687704)*r12))+(((-1.0)*x4111*x4120))+(((0.433012903784321)*x4110))+(((0.433012903784321)*x4120))+(((-1.0)*x4110*x4111))+(((-1.0)*x4116*x4129))+(((-0.749999650312296)*x4128))+x4130+(((-1.0)*x4136))+((x4122*x4129)));
evalcond[2]=((((-1.0)*x4109*x4124))+((x4125*x4127))+(((0.0160344678271334)*x4119))+(((0.41)*cj1))+(((0.0648043305514941)*x4118))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x4127))+(((-1.0)*x4112*x4117))+(((-1.0)*pz))+((x4117*x4126))+((x4118*x4125))+(((-0.27144)*x4131)));
evalcond[3]=(((x4120*x4125))+(((0.0160344678271334)*x4128))+((x4116*x4117))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((0.0648043305514941)*x4110))+(((0.0648043305514941)*x4120))+(((0.27144)*x4132))+(((-1.0)*py))+(((-1.0)*x4108*x4124))+((x4110*x4125))+(((-1.0)*x4117*x4122)));
evalcond[4]=(((x4112*x4115))+((sj3*x4113*x4126))+(((-1.0)*sj3*x4112*x4113))+((x4118*x4133))+((r22*x4134))+(((-0.433012903784321)*x4123))+(((-1.0)*x4115*x4126))+((x4114*x4127))+((x4127*x4133))+((x4114*x4118))+x4130+(((-1.0)*x4136))+((x4111*x4123))+((cj3*x4113*x4118))+((cj3*x4113*x4127)));
evalcond[5]=((((-1.0)*sj3*x4113*x4122))+((sj3*x4113*x4116))+(((-0.433012903784321)*x4121))+(((-1.0)*x4135))+(((-1.0)*x4131))+((x4110*x4133))+((r12*x4134))+(((-1.0)*x4115*x4116))+((x4114*x4120))+((x4120*x4133))+((x4115*x4122))+((cj3*x4110*x4113))+((x4111*x4121))+((x4110*x4114))+((cj3*x4113*x4120)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4137=((0.26409636501044)*cj4);
IkReal x4138=(r20*sj5);
IkReal x4139=(cj5*r21);
IkReal x4140=((0.457427895740576)*cj4);
IkReal x4141=(r00*sj5);
IkReal x4142=((0.528192360616262)*sj4);
IkReal x4143=(cj5*r01);
if( IKabs(((((0.444735007694415)*x4141))+(((0.444735007694415)*x4143))+(((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*cj5*r00*x4142))+(((-1.0)*r02*x4140))+((r01*sj5*x4142))+(((-1.0)*x4137*x4143))+(((-1.0)*x4137*x4141)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+((r22*x4140))+((cj5*r20*x4142))+(((-0.444735007694415)*x4138))+(((-0.444735007694415)*x4139))+(((-1.0)*r21*sj5*x4142))+((x4137*x4139))+((x4137*x4138))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((0.444735007694415)*x4141))+(((0.444735007694415)*x4143))+(((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*cj5*r00*x4142))+(((-1.0)*r02*x4140))+((r01*sj5*x4142))+(((-1.0)*x4137*x4143))+(((-1.0)*x4137*x4141))))+IKsqr(((((0.204620884747229)*r22))+((r22*x4140))+((cj5*r20*x4142))+(((-0.444735007694415)*x4138))+(((-0.444735007694415)*x4139))+(((-1.0)*r21*sj5*x4142))+((x4137*x4139))+((x4137*x4138))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((0.444735007694415)*x4141))+(((0.444735007694415)*x4143))+(((-2.4390243902439)*px))+(((-0.204620884747229)*r02))+(((-1.0)*cj5*r00*x4142))+(((-1.0)*r02*x4140))+((r01*sj5*x4142))+(((-1.0)*x4137*x4143))+(((-1.0)*x4137*x4141))), ((((0.204620884747229)*r22))+((r22*x4140))+((cj5*r20*x4142))+(((-0.444735007694415)*x4138))+(((-0.444735007694415)*x4139))+(((-1.0)*r21*sj5*x4142))+((x4137*x4139))+((x4137*x4138))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4144=((1.0)*px);
IkReal x4145=((0.187545437253636)*cj4);
IkReal x4146=(r20*sj5);
IkReal x4147=(r01*sj3);
IkReal x4148=(cj5*r21);
IkReal x4149=(cj3*r00);
IkReal x4150=((0.0185150129489311)*sj4);
IkReal x4151=(r21*sj5);
IkReal x4152=((0.20357990508077)*sj3);
IkReal x4153=(cj5*sj4);
IkReal x4154=((0.135720094919197)*sj3);
IkReal x4155=(cj4*cj5);
IkReal x4156=(r00*sj5);
IkReal x4157=((0.00925751294893567)*cj4);
IkReal x4158=((0.10827950965428)*cj4);
IkReal x4159=(cj4*r22);
IkReal x4160=((0.117537022603216)*sj3);
IkReal x4161=(cj5*r01);
IkReal x4162=((0.135720094919197)*cj3);
IkReal x4163=(r01*sj5);
IkReal x4164=((0.216558867852667)*sj4);
IkReal x4165=(cj4*r02);
IkReal x4166=((0.27144)*cj3);
IkReal x4167=((0.41)*(IKsin(j1)));
IkReal x4168=((0.41)*(IKcos(j1)));
IkReal x4169=((0.135720094919197)*sj4*sj5);
IkReal x4170=((0.0678600949192303)*cj4*sj3);
IkReal x4171=((0.235073880801598)*cj3*sj4);
IkReal x4172=(x4167+x4144);
evalcond[0]=((((-1.0)*x4151*x4164))+(((-1.0)*x4168))+(((-0.18234135315471)*x4148))+(((-0.18234135315471)*x4146))+((r22*x4145))+(((0.216558867852667)*r20*x4153))+pz+((x4148*x4158))+((x4146*x4158))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-0.216558867852667)*r00*x4153))+(((-1.0)*x4172))+(((-0.10827950965428)*r01*x4155))+(((-1.0)*r02*x4145))+(((-0.0838945627463637)*r02))+(((-1.0)*x4156*x4158))+(((0.18234135315471)*x4156))+(((0.18234135315471)*x4161))+((x4163*x4164)));
evalcond[2]=(((r22*x4160))+((cj5*r00*x4150))+((r20*x4155*x4166))+(((-1.0)*cj4*x4151*x4166))+(((-1.0)*sj4*x4148*x4162))+(((0.0648043305514941)*x4156))+(((-1.0)*x4172))+(((-1.0)*x4146*x4170))+(((-1.0)*x4159*x4160))+(((-0.0160344678271334)*r02))+(((-1.0)*x4150*x4163))+((sj4*x4151*x4154))+(((-1.0)*x4146*x4152))+(((-1.0)*x4148*x4152))+(((0.0648043305514941)*x4161))+(((-1.0)*sj4*x4146*x4162))+(((-1.0)*r20*x4153*x4154))+(((0.0160344678271334)*x4165))+(((0.00925751294893567)*r01*x4155))+(((-1.0)*r22*x4171))+((x4156*x4157))+(((-1.0)*x4148*x4170)));
evalcond[3]=((((-0.27144)*x4149*x4155))+(((-1.0)*r02*x4160))+((x4152*x4156))+(((0.0648043305514941)*x4148))+(((0.0648043305514941)*x4146))+((x4149*x4169))+((r00*x4153*x4154))+(((-1.0)*x4147*x4169))+((cj4*x4163*x4166))+(((-0.0160344678271334)*r22))+(((-1.0)*x4150*x4151))+((cj5*r20*x4150))+(((-1.0)*pz))+(((0.20357990508077)*cj5*x4147))+((x4160*x4165))+x4168+((x4148*x4157))+(((0.0160344678271334)*x4159))+(((0.0678600949192303)*x4147*x4155))+((x4146*x4157))+((x4156*x4170))+((r01*x4153*x4162))+((r02*x4171)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4173=((0.250000349687704)*sj1);
IkReal x4174=(cj1*cj4);
IkReal x4175=((0.749999650312296)*r22);
IkReal x4176=(cj4*sj1);
IkReal x4177=((0.749999650312296)*r02);
IkReal x4178=((0.250000349687704)*cj1);
IkReal x4179=((0.433012903784321)*r00*sj5);
IkReal x4180=((0.433012903784321)*r20*sj5);
IkReal x4181=((0.433012903784321)*cj5*r01);
IkReal x4182=((0.433012903784321)*cj5*r21);
IkReal x4183=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4184=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4185=((0.866025201892125)*r01*sj4*sj5);
IkReal x4186=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*cj1*x4185))+(((-1.0)*cj1*x4181))+((x4175*x4176))+(((-1.0)*cj1*x4179))+((r20*x4183))+((r22*x4173))+((r00*x4184))+((x4174*x4181))+(((-1.0)*sj1*x4182))+(((-1.0)*sj1*x4180))+(((-1.0)*sj1*x4186))+((r02*x4178))+((x4174*x4177))+((x4174*x4179))+((x4176*x4182))+((x4176*x4180)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj1*x4182))+(((-1.0)*cj1*x4180))+(((-1.0)*cj1*x4186))+((r20*x4184))+(((-1.0)*r00*x4183))+((r22*x4178))+((sj1*x4185))+((sj1*x4181))+(((-1.0)*x4176*x4179))+(((-1.0)*x4176*x4177))+((sj1*x4179))+(((-1.0)*x4176*x4181))+(((-1.0)*r02*x4173))+((x4174*x4180))+((x4174*x4182))+((x4174*x4175)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*x4185))+(((-1.0)*cj1*x4181))+((x4175*x4176))+(((-1.0)*cj1*x4179))+((r20*x4183))+((r22*x4173))+((r00*x4184))+((x4174*x4181))+(((-1.0)*sj1*x4182))+(((-1.0)*sj1*x4180))+(((-1.0)*sj1*x4186))+((r02*x4178))+((x4174*x4177))+((x4174*x4179))+((x4176*x4182))+((x4176*x4180))))+IKsqr(((((-1.0)*cj1*x4182))+(((-1.0)*cj1*x4180))+(((-1.0)*cj1*x4186))+((r20*x4184))+(((-1.0)*r00*x4183))+((r22*x4178))+((sj1*x4185))+((sj1*x4181))+(((-1.0)*x4176*x4179))+(((-1.0)*x4176*x4177))+((sj1*x4179))+(((-1.0)*x4176*x4181))+(((-1.0)*r02*x4173))+((x4174*x4180))+((x4174*x4182))+((x4174*x4175))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj1*x4185))+(((-1.0)*cj1*x4181))+((x4175*x4176))+(((-1.0)*cj1*x4179))+((r20*x4183))+((r22*x4173))+((r00*x4184))+((x4174*x4181))+(((-1.0)*sj1*x4182))+(((-1.0)*sj1*x4180))+(((-1.0)*sj1*x4186))+((r02*x4178))+((x4174*x4177))+((x4174*x4179))+((x4176*x4182))+((x4176*x4180))), ((((-1.0)*cj1*x4182))+(((-1.0)*cj1*x4180))+(((-1.0)*cj1*x4186))+((r20*x4184))+(((-1.0)*r00*x4183))+((r22*x4178))+((sj1*x4185))+((sj1*x4181))+(((-1.0)*x4176*x4179))+(((-1.0)*x4176*x4177))+((sj1*x4179))+(((-1.0)*x4176*x4181))+(((-1.0)*r02*x4173))+((x4174*x4180))+((x4174*x4182))+((x4174*x4175))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4187=IKsin(j2);
IkReal x4188=IKcos(j2);
IkReal x4189=((0.749999650312296)*sj3);
IkReal x4190=(cj5*r01);
IkReal x4191=(r00*sj5);
IkReal x4192=(cj4*cj5);
IkReal x4193=((1.0)*cj3);
IkReal x4194=(r21*sj3);
IkReal x4195=(cj4*sj5);
IkReal x4196=(cj3*r21);
IkReal x4197=((0.500000349687582)*sj4);
IkReal x4198=((0.433012903784321)*r20);
IkReal x4199=(cj4*r22);
IkReal x4200=((0.433012903784321)*sj3);
IkReal x4201=((0.433012903784321)*cj4);
IkReal x4202=(r01*sj5);
IkReal x4203=(r20*sj5);
IkReal x4204=((0.0160344678271334)*r02);
IkReal x4205=(cj4*r02);
IkReal x4206=((0.00925751294893567)*cj4);
IkReal x4207=((0.0185150129489311)*sj4);
IkReal x4208=(r21*sj5);
IkReal x4209=(cj5*r21);
IkReal x4210=((0.866025201892125)*sj4);
IkReal x4211=(cj5*r20);
IkReal x4212=(cj5*r00);
IkReal x4213=((0.250000349687704)*sj3);
IkReal x4214=(cj1*x4188);
IkReal x4215=(sj1*x4187);
IkReal x4216=(cj1*x4187);
IkReal x4217=(sj1*x4188);
IkReal x4218=(x4215+x4214);
evalcond[0]=(((sj5*x4198))+(((-0.749999650312296)*x4199))+(((-0.250000349687704)*r22))+(((-1.0)*x4195*x4198))+(((-1.0)*x4210*x4211))+(((0.433012903784321)*x4209))+(((-0.433012903784321)*r21*x4192))+x4218+((x4208*x4210)));
evalcond[1]=((((-0.250000349687704)*r02))+((x4202*x4210))+(((-1.0)*x4210*x4212))+(((-1.0)*x4191*x4201))+(((-1.0)*x4190*x4201))+(((-0.749999650312296)*x4205))+x4216+(((-1.0)*x4217))+(((0.433012903784321)*x4190))+(((0.433012903784321)*x4191)));
evalcond[2]=((((0.0160344678271334)*x4199))+(((0.0648043305514941)*x4203))+(((0.0648043305514941)*x4209))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-1.0)*x4207*x4208))+(((-1.0)*pz))+((x4207*x4211))+(((0.00925751294893567)*r21*x4192))+(((0.00925751294893567)*r20*x4195))+(((-0.27144)*x4215))+(((-0.27144)*x4214)));
evalcond[3]=(((cj4*x4204))+(((0.27144)*x4217))+(((-1.0)*x4204))+(((-0.41)*sj1))+(((-1.0)*px))+((x4207*x4212))+(((-0.27144)*x4216))+(((-1.0)*x4202*x4207))+((x4191*x4206))+((x4190*x4206))+(((0.0648043305514941)*x4190))+(((0.0648043305514941)*x4191)));
evalcond[4]=(((sj3*x4197*x4212))+(((-1.0)*sj3*x4197*x4202))+(((-1.0)*r02*x4200))+((cj3*r02*x4210))+(((-1.0)*r00*x4192*x4193))+((cj3*x4190*x4197))+((x4189*x4190))+((x4189*x4191))+x4218+((x4200*x4205))+((cj4*x4191*x4213))+((cj4*x4190*x4213))+((cj3*x4191*x4197))+((cj3*r01*x4195)));
evalcond[5]=((((-1.0)*r20*x4192*x4193))+((cj3*x4197*x4203))+((sj3*x4197*x4211))+((r20*x4195*x4213))+((x4199*x4200))+(((-1.0)*r22*x4200))+((x4189*x4209))+((x4189*x4203))+((cj5*x4196*x4197))+(((0.250000349687704)*x4192*x4194))+((cj3*r22*x4210))+(((-1.0)*sj5*x4194*x4197))+x4217+((x4195*x4196))+(((-1.0)*x4216)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4219=(cj5*r21);
IkReal x4220=((0.26409636501044)*cj4);
IkReal x4221=((0.457427895740576)*cj4);
IkReal x4222=((0.528192360616262)*sj4);
IkReal x4223=(cj5*r01);
IkReal x4224=((0.444735007694415)*sj5);
if( IKabs((((r00*sj5*x4220))+(((-0.444735007694415)*x4223))+((cj5*r00*x4222))+((x4220*x4223))+((r02*x4221))+(((-1.0)*r00*x4224))+(((0.204620884747229)*r02))+(((-1.0)*r01*sj5*x4222))+(((2.4390243902439)*px)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+((cj5*r20*x4222))+((r22*x4221))+((x4219*x4220))+((r20*sj5*x4220))+(((-0.444735007694415)*x4219))+(((-1.0)*r21*sj5*x4222))+(((2.4390243902439)*pz))+(((-1.0)*r20*x4224)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((r00*sj5*x4220))+(((-0.444735007694415)*x4223))+((cj5*r00*x4222))+((x4220*x4223))+((r02*x4221))+(((-1.0)*r00*x4224))+(((0.204620884747229)*r02))+(((-1.0)*r01*sj5*x4222))+(((2.4390243902439)*px))))+IKsqr(((((0.204620884747229)*r22))+((cj5*r20*x4222))+((r22*x4221))+((x4219*x4220))+((r20*sj5*x4220))+(((-0.444735007694415)*x4219))+(((-1.0)*r21*sj5*x4222))+(((2.4390243902439)*pz))+(((-1.0)*r20*x4224))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2((((r00*sj5*x4220))+(((-0.444735007694415)*x4223))+((cj5*r00*x4222))+((x4220*x4223))+((r02*x4221))+(((-1.0)*r00*x4224))+(((0.204620884747229)*r02))+(((-1.0)*r01*sj5*x4222))+(((2.4390243902439)*px))), ((((0.204620884747229)*r22))+((cj5*r20*x4222))+((r22*x4221))+((x4219*x4220))+((r20*sj5*x4220))+(((-0.444735007694415)*x4219))+(((-1.0)*r21*sj5*x4222))+(((2.4390243902439)*pz))+(((-1.0)*r20*x4224))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x4225=((0.187545437253636)*cj4);
IkReal x4226=(cj5*r20);
IkReal x4227=(r01*sj5);
IkReal x4228=(cj5*r21);
IkReal x4229=(cj3*r00);
IkReal x4230=(sj4*sj5);
IkReal x4231=((0.20357990508077)*sj3);
IkReal x4232=(r20*sj5);
IkReal x4233=(cj4*cj5);
IkReal x4234=((0.00925751294893567)*cj4);
IkReal x4235=((0.117537022603216)*sj3);
IkReal x4236=((0.10827950965428)*cj4);
IkReal x4237=(r00*sj5);
IkReal x4238=(cj4*r22);
IkReal x4239=(r21*sj5);
IkReal x4240=((0.216558867852667)*sj4);
IkReal x4241=((0.0185150129489311)*sj4);
IkReal x4242=(cj3*sj4);
IkReal x4243=(cj4*r02);
IkReal x4244=(cj5*r01);
IkReal x4245=((0.41)*(IKcos(j1)));
IkReal x4246=((0.41)*(IKsin(j1)));
IkReal x4247=((0.135720094919197)*sj3*sj4);
IkReal x4248=((0.0678600949192303)*cj4*sj3);
IkReal x4249=(cj5*r00*sj4);
IkReal x4250=((0.27144)*cj3*cj4);
evalcond[0]=((((-1.0)*x4227*x4240))+((cj5*r00*x4240))+((x4236*x4237))+(((-1.0)*x4246))+((r02*x4225))+px+(((-0.18234135315471)*x4237))+(((0.10827950965428)*r01*x4233))+(((-0.18234135315471)*x4244))+(((0.0838945627463637)*r02)));
evalcond[1]=(((x4232*x4236))+(((-1.0)*x4245))+((r22*x4225))+((x4226*x4240))+pz+((x4228*x4236))+(((-0.216558867852667)*r21*x4230))+(((-0.18234135315471)*x4232))+(((-0.18234135315471)*x4228))+(((0.0838945627463637)*r22)));
evalcond[2]=((((-1.0)*x4227*x4247))+(((-0.27144)*x4229*x4233))+((x4231*x4244))+((cj5*r00*x4247))+((x4231*x4237))+(((-1.0)*x4232*x4234))+((x4235*x4243))+((x4237*x4248))+(((0.0185150129489311)*r21*x4230))+(((-1.0)*x4245))+(((0.235073880801598)*r02*x4242))+(((0.135720094919197)*x4229*x4230))+(((0.135720094919197)*x4242*x4244))+(((-1.0)*r02*x4235))+(((-0.0648043305514941)*x4228))+(((-0.0648043305514941)*x4232))+pz+(((0.0160344678271334)*r22))+(((-1.0)*x4228*x4234))+(((-1.0)*x4226*x4241))+((x4227*x4250))+(((0.0678600949192303)*r01*sj3*x4233))+(((-0.0160344678271334)*x4238)));
evalcond[3]=((((-1.0)*x4227*x4241))+((x4235*x4238))+((x4232*x4248))+((cj5*r00*x4241))+((x4231*x4232))+(((0.135720094919197)*x4228*x4242))+(((0.0648043305514941)*x4237))+(((0.0648043305514941)*x4244))+(((-0.0160344678271334)*r02))+(((0.0160344678271334)*x4243))+((x4226*x4247))+(((-1.0)*px))+(((-1.0)*r22*x4235))+(((-0.135720094919197)*r21*sj3*x4230))+x4246+((x4228*x4231))+((x4228*x4248))+((x4239*x4250))+(((0.235073880801598)*r22*x4242))+(((0.135720094919197)*cj3*r20*x4230))+(((-1.0)*x4226*x4250))+(((0.00925751294893567)*r01*x4233))+((x4234*x4237)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4251=(r02*sj1);
IkReal x4252=(cj1*cj4);
IkReal x4253=((0.749999650312296)*r22);
IkReal x4254=(cj4*sj1);
IkReal x4255=((0.250000349687704)*r22);
IkReal x4256=((0.433012903784321)*r00*sj5);
IkReal x4257=((0.433012903784321)*r20*sj5);
IkReal x4258=((0.433012903784321)*cj5*r01);
IkReal x4259=((0.433012903784321)*cj5*r21);
IkReal x4260=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4261=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4262=((0.866025201892125)*r01*sj4*sj5);
IkReal x4263=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*sj1*x4259))+(((-1.0)*sj1*x4257))+(((-1.0)*sj1*x4263))+(((-1.0)*x4252*x4256))+(((-1.0)*x4252*x4258))+((x4253*x4254))+(((-1.0)*r00*x4261))+(((-0.749999650312296)*r02*x4252))+((r20*x4260))+((sj1*x4255))+(((-0.250000349687704)*cj1*r02))+((cj1*x4258))+((cj1*x4256))+((x4254*x4259))+((x4254*x4257))+((cj1*x4262)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj1*x4258))+(((-1.0)*sj1*x4256))+(((-1.0)*sj1*x4262))+(((0.749999650312296)*cj4*x4251))+(((0.250000349687704)*x4251))+(((-1.0)*cj1*x4259))+(((-1.0)*cj1*x4257))+((r20*x4261))+((x4252*x4259))+((x4252*x4257))+((x4252*x4253))+((cj1*x4255))+(((-1.0)*cj1*x4263))+((x4254*x4258))+((x4254*x4256))+((r00*x4260)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*sj1*x4259))+(((-1.0)*sj1*x4257))+(((-1.0)*sj1*x4263))+(((-1.0)*x4252*x4256))+(((-1.0)*x4252*x4258))+((x4253*x4254))+(((-1.0)*r00*x4261))+(((-0.749999650312296)*r02*x4252))+((r20*x4260))+((sj1*x4255))+(((-0.250000349687704)*cj1*r02))+((cj1*x4258))+((cj1*x4256))+((x4254*x4259))+((x4254*x4257))+((cj1*x4262))))+IKsqr(((((-1.0)*sj1*x4258))+(((-1.0)*sj1*x4256))+(((-1.0)*sj1*x4262))+(((0.749999650312296)*cj4*x4251))+(((0.250000349687704)*x4251))+(((-1.0)*cj1*x4259))+(((-1.0)*cj1*x4257))+((r20*x4261))+((x4252*x4259))+((x4252*x4257))+((x4252*x4253))+((cj1*x4255))+(((-1.0)*cj1*x4263))+((x4254*x4258))+((x4254*x4256))+((r00*x4260))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*sj1*x4259))+(((-1.0)*sj1*x4257))+(((-1.0)*sj1*x4263))+(((-1.0)*x4252*x4256))+(((-1.0)*x4252*x4258))+((x4253*x4254))+(((-1.0)*r00*x4261))+(((-0.749999650312296)*r02*x4252))+((r20*x4260))+((sj1*x4255))+(((-0.250000349687704)*cj1*r02))+((cj1*x4258))+((cj1*x4256))+((x4254*x4259))+((x4254*x4257))+((cj1*x4262))), ((((-1.0)*sj1*x4258))+(((-1.0)*sj1*x4256))+(((-1.0)*sj1*x4262))+(((0.749999650312296)*cj4*x4251))+(((0.250000349687704)*x4251))+(((-1.0)*cj1*x4259))+(((-1.0)*cj1*x4257))+((r20*x4261))+((x4252*x4259))+((x4252*x4257))+((x4252*x4253))+((cj1*x4255))+(((-1.0)*cj1*x4263))+((x4254*x4258))+((x4254*x4256))+((r00*x4260))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4264=IKcos(j2);
IkReal x4265=IKsin(j2);
IkReal x4266=((0.433012903784321)*sj3);
IkReal x4267=((0.749999650312296)*sj3);
IkReal x4268=(r00*sj5);
IkReal x4269=(cj4*cj5);
IkReal x4270=((1.0)*cj3);
IkReal x4271=(cj5*r01);
IkReal x4272=(r21*sj3);
IkReal x4273=(cj4*sj5);
IkReal x4274=(cj3*r21);
IkReal x4275=((0.500000349687582)*sj4);
IkReal x4276=((0.433012903784321)*r20);
IkReal x4277=(cj4*r22);
IkReal x4278=(r20*sj5);
IkReal x4279=((0.0160344678271334)*r02);
IkReal x4280=(cj4*r02);
IkReal x4281=(r01*sj5);
IkReal x4282=(cj5*r00);
IkReal x4283=((0.0185150129489311)*sj4);
IkReal x4284=(r21*sj5);
IkReal x4285=(cj5*r21);
IkReal x4286=((0.866025201892125)*sj4);
IkReal x4287=(cj5*r20);
IkReal x4288=((0.250000349687704)*sj3);
IkReal x4289=(sj1*x4264);
IkReal x4290=(cj1*x4264);
IkReal x4291=(sj1*x4265);
IkReal x4292=(cj1*x4265);
IkReal x4293=((1.0)*x4292);
evalcond[0]=((((-1.0)*x4273*x4276))+((x4284*x4286))+(((-1.0)*x4286*x4287))+(((-0.433012903784321)*r21*x4269))+(((-0.250000349687704)*r22))+((sj5*x4276))+(((0.433012903784321)*x4285))+(((-0.749999650312296)*x4277))+x4291+x4290);
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x4282*x4286))+((x4281*x4286))+(((-0.433012903784321)*r01*x4269))+(((-0.433012903784321)*cj4*x4268))+(((0.433012903784321)*x4268))+(((-1.0)*x4293))+(((0.433012903784321)*x4271))+x4289+(((-0.749999650312296)*x4280)));
evalcond[2]=(((x4283*x4287))+(((-0.27144)*x4291))+(((-0.27144)*x4290))+(((-1.0)*x4283*x4284))+(((0.41)*cj1))+(((0.00925751294893567)*r21*x4269))+(((0.00925751294893567)*r20*x4273))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x4278))+(((0.0648043305514941)*x4285))+(((-1.0)*pz))+(((0.0160344678271334)*x4277)));
evalcond[3]=((((0.00925751294893567)*cj4*x4268))+((x4282*x4283))+((cj4*x4279))+(((0.41)*sj1))+(((0.0648043305514941)*x4268))+(((0.0648043305514941)*x4271))+(((-1.0)*px))+(((0.00925751294893567)*r01*x4269))+(((-0.27144)*x4289))+(((-1.0)*x4279))+(((0.27144)*x4292))+(((-1.0)*x4281*x4283)));
evalcond[4]=(((x4267*x4278))+((x4266*x4277))+(((-1.0)*sj5*x4272*x4275))+(((-1.0)*x4293))+((x4267*x4285))+((sj3*x4275*x4287))+((cj3*x4275*x4278))+((cj3*r22*x4286))+(((0.250000349687704)*x4269*x4272))+(((-1.0)*r22*x4266))+x4289+((r20*x4273*x4288))+(((-1.0)*r20*x4269*x4270))+((cj5*x4274*x4275))+((x4273*x4274)));
evalcond[5]=(((r01*x4269*x4288))+((x4267*x4271))+((cj4*x4268*x4288))+((x4267*x4268))+((x4266*x4280))+((cj3*r02*x4286))+(((-1.0)*x4291))+(((-1.0)*x4290))+((sj3*x4275*x4282))+(((-1.0)*sj3*x4275*x4281))+(((-1.0)*r02*x4266))+((cj3*x4271*x4275))+((cj3*r01*x4273))+(((-1.0)*r00*x4269*x4270))+((cj3*x4268*x4275)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j1, j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4294=(cj4*sj5);
IkReal x4295=(cj0*r00);
IkReal x4296=(cj0*r02);
IkReal x4297=(cj5*r21);
IkReal x4298=((0.216558867852667)*sj4);
IkReal x4299=((0.528192360616262)*sj4);
IkReal x4300=(cj0*cj5*r01);
CheckValue<IkReal> x4301=IKPowWithIntegerCheck(cj0,-2);
if(!x4301.valid){
continue;
}
if( IKabs(((2.4390243902439)*(x4301.value)*(((((-0.187545437253636)*cj4*x4296))+(((0.0098)*cj0*sj0))+(((0.18234135315471)*sj5*x4295))+(((-1.0)*cj5*x4295*x4298))+(((0.18234135315471)*x4300))+(((-0.10827950965428)*cj4*x4300))+(((-0.0838945627463637)*x4296))+((cj0*r01*sj5*x4298))+(((-0.10827950965428)*x4294*x4295))+(((-1.0)*cj0*px)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj5*r20*x4299))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*x4297))+(((-1.0)*r21*sj5*x4299))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*r20*x4294))+(((0.26409636501044)*cj4*x4297))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((2.4390243902439)*(x4301.value)*(((((-0.187545437253636)*cj4*x4296))+(((0.0098)*cj0*sj0))+(((0.18234135315471)*sj5*x4295))+(((-1.0)*cj5*x4295*x4298))+(((0.18234135315471)*x4300))+(((-0.10827950965428)*cj4*x4300))+(((-0.0838945627463637)*x4296))+((cj0*r01*sj5*x4298))+(((-0.10827950965428)*x4294*x4295))+(((-1.0)*cj0*px))))))+IKsqr((((cj5*r20*x4299))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*x4297))+(((-1.0)*r21*sj5*x4299))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*r20*x4294))+(((0.26409636501044)*cj4*x4297))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((2.4390243902439)*(x4301.value)*(((((-0.187545437253636)*cj4*x4296))+(((0.0098)*cj0*sj0))+(((0.18234135315471)*sj5*x4295))+(((-1.0)*cj5*x4295*x4298))+(((0.18234135315471)*x4300))+(((-0.10827950965428)*cj4*x4300))+(((-0.0838945627463637)*x4296))+((cj0*r01*sj5*x4298))+(((-0.10827950965428)*x4294*x4295))+(((-1.0)*cj0*px))))), (((cj5*r20*x4299))+(((0.204620884747229)*r22))+(((0.457427895740576)*cj4*r22))+(((-0.444735007694415)*x4297))+(((-1.0)*r21*sj5*x4299))+(((-0.444735007694415)*r20*sj5))+(((0.26409636501044)*r20*x4294))+(((0.26409636501044)*cj4*x4297))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x4302=IKsin(j1);
IkReal x4303=IKcos(j1);
IkReal x4304=sj0*sj0;
IkReal x4305=cj0*cj0;
IkReal x4306=((0.0098)*cj0);
IkReal x4307=(cj0*cj5);
IkReal x4308=(cj5*sj0);
IkReal x4309=((0.0648043305514941)*r21);
IkReal x4310=(r00*sj5);
IkReal x4311=((0.20357990508077)*sj3);
IkReal x4312=((0.135720094919197)*r21);
IkReal x4313=((1.0)*px);
IkReal x4314=((0.117537022603216)*sj3);
IkReal x4315=((0.00925751294893567)*cj4);
IkReal x4316=(r10*sj4);
IkReal x4317=(sj0*sj5);
IkReal x4318=(cj4*sj0);
IkReal x4319=(r20*sj5);
IkReal x4320=((0.10827950965428)*cj4);
IkReal x4321=(cj3*sj4);
IkReal x4322=((0.135720094919197)*sj5);
IkReal x4323=((0.117537022603216)*r11);
IkReal x4324=(cj5*r01);
IkReal x4325=(cj4*r02);
IkReal x4326=((0.117537022603216)*cj4);
IkReal x4327=((0.0160344678271334)*r02);
IkReal x4328=((0.0648043305514941)*r11);
IkReal x4329=((0.0160344678271334)*r12);
IkReal x4330=(cj0*cj4);
IkReal x4331=(cj5*sj3);
IkReal x4332=((0.0678600949192303)*cj4);
IkReal x4333=(r10*sj5);
IkReal x4334=((1.0)*py);
IkReal x4335=(cj5*r00);
IkReal x4336=(cj0*r21);
IkReal x4337=(r11*sj5);
IkReal x4338=((0.0160344678271334)*r22);
IkReal x4339=(r00*sj4);
IkReal x4340=((1.0)*pz);
IkReal x4341=(r22*sj0);
IkReal x4342=(sj3*sj4);
IkReal x4343=(cj5*r21);
IkReal x4344=(r21*sj3);
IkReal x4345=(cj0*r22);
IkReal x4346=((0.0185150129489311)*sj4);
IkReal x4347=(cj5*r11);
IkReal x4348=(r01*sj5);
IkReal x4349=((0.216558867852667)*sj4);
IkReal x4350=((0.135720094919197)*r20);
IkReal x4351=(sj0*x4306);
IkReal x4352=(sj4*x4317);
IkReal x4353=((0.27144)*cj3*cj4);
IkReal x4354=(r11*x4315);
IkReal x4355=((0.41)*x4302);
IkReal x4356=(cj0*x4333);
IkReal x4357=(sj5*x4346);
IkReal x4358=((0.41)*x4303);
IkReal x4359=(cj0*sj0*x4355);
evalcond[0]=((((-0.18234135315471)*x4319))+((x4319*x4320))+((x4320*x4343))+(((-1.0)*x4358))+(((0.187545437253636)*cj4*r22))+((cj5*r20*x4349))+pz+(((-0.18234135315471)*x4343))+(((0.0838945627463637)*r22))+(((-1.0)*r21*sj5*x4349)));
evalcond[1]=((((0.18234135315471)*r11*x4308))+(((-1.0)*x4351))+((r11*x4317*x4349))+(((-1.0)*r10*x4317*x4320))+(((-0.216558867852667)*x4308*x4316))+(((-1.0)*sj0*x4334))+(((0.18234135315471)*r10*x4317))+(((-1.0)*r11*x4308*x4320))+(((-1.0)*x4304*x4355))+(((-0.0838945627463637)*r12*sj0))+(((-0.187545437253636)*r12*x4318)));
evalcond[2]=(((cj0*x4348*x4349))+(((-1.0)*x4305*x4355))+(((-0.187545437253636)*cj0*x4325))+(((-0.0838945627463637)*cj0*r02))+(((0.18234135315471)*cj0*x4310))+(((-1.0)*r01*x4307*x4320))+(((-0.216558867852667)*x4307*x4339))+(((-1.0)*cj0*x4310*x4320))+(((-1.0)*cj0*x4313))+x4351+(((0.18234135315471)*r01*x4307)));
evalcond[3]=(((r11*x4331*x4332))+((x4308*x4309))+((x4318*x4338))+(((0.135720094919197)*x4321*x4347))+((r20*x4315*x4317))+(((-1.0)*sj0*x4338))+(((-1.0)*sj0*x4340))+(((0.0648043305514941)*r20*x4317))+((sj3*x4332*x4333))+(((0.235073880801598)*r12*x4321))+((x4311*x4333))+((cj4*r12*x4314))+((x4337*x4353))+(((-1.0)*r11*x4322*x4342))+((r21*x4308*x4315))+((cj3*x4316*x4322))+(((0.135720094919197)*x4316*x4331))+(((-1.0)*r12*x4314))+((r20*x4308*x4346))+((sj0*x4358))+((x4311*x4347))+(((-1.0)*r21*x4317*x4346))+(((-1.0)*cj5*r10*x4353)));
evalcond[4]=(((x4310*x4311))+((cj0*x4358))+((cj0*x4315*x4319))+((sj3*x4324*x4332))+(((-1.0)*cj0*x4340))+((x4348*x4353))+(((0.235073880801598)*r02*x4321))+((x4314*x4325))+((r21*x4307*x4315))+(((-1.0)*cj0*x4338))+(((0.0648043305514941)*cj0*x4319))+((sj3*x4310*x4332))+((x4311*x4324))+((x4307*x4309))+(((-1.0)*r02*x4314))+(((0.135720094919197)*x4310*x4321))+(((0.135720094919197)*x4331*x4339))+(((0.135720094919197)*x4321*x4324))+(((-1.0)*x4336*x4357))+(((-1.0)*x4335*x4353))+((x4330*x4338))+(((-1.0)*r01*x4322*x4342))+((r20*x4307*x4346)));
evalcond[5]=((((-1.0)*r21*x4308*x4311))+(((0.0185150129489311)*cj5*x4316))+((x4312*x4317*x4342))+((cj4*x4329))+((x4314*x4341))+(((-1.0)*r20*sj3*x4317*x4332))+((cj5*x4328))+(((-1.0)*x4329))+(((-1.0)*x4334))+(((0.0648043305514941)*x4333))+(((-1.0)*x4308*x4312*x4321))+((x4315*x4333))+(((-1.0)*r22*x4314*x4318))+(((-0.235073880801598)*x4321*x4341))+(((-1.0)*sj0*x4355))+(((-1.0)*r20*x4311*x4317))+(((-1.0)*x4308*x4332*x4344))+(((-1.0)*r21*x4317*x4353))+((x4315*x4347))+(((-1.0)*x4308*x4342*x4350))+(((-1.0)*x4337*x4346))+((r20*x4308*x4353))+(((-1.0)*x4306))+(((-1.0)*x4317*x4321*x4350)));
evalcond[6]=(((x4310*x4315))+(((-1.0)*x4346*x4348))+(((-1.0)*x4307*x4312*x4321))+(((-1.0)*x4307*x4332*x4344))+((x4314*x4345))+(((-1.0)*cj0*x4355))+(((-1.0)*x4327))+((x4335*x4346))+((cj0*sj5*x4312*x4342))+(((-1.0)*x4313))+(((0.0648043305514941)*x4324))+((x4315*x4324))+(((-0.235073880801598)*x4321*x4345))+(((-1.0)*cj0*x4311*x4319))+(((-1.0)*r22*x4314*x4330))+(((-0.135720094919197)*cj0*x4319*x4321))+(((-0.27144)*cj3*r21*sj5*x4330))+(((-1.0)*x4307*x4342*x4350))+(((-0.0678600949192303)*sj3*x4319*x4330))+(((-1.0)*r21*x4307*x4311))+(((0.0098)*sj0))+(((0.0160344678271334)*x4325))+((r20*x4307*x4353))+(((0.0648043305514941)*x4310)));
evalcond[7]=((((0.235073880801598)*cj0*sj4*x4337))+(((-0.0678600949192303)*cj0*r12))+(((0.0098)*x4304))+((r01*x4308*x4315))+(((-1.0)*sj0*x4313))+(((-1.0)*x4359))+(((-1.0)*x4326*x4356))+((x4318*x4327))+(((0.0648043305514941)*sj0*x4310))+(((-1.0)*sj0*x4327))+(((0.0185150129489311)*x4308*x4339))+((x4307*x4323))+(((-0.235073880801598)*x4307*x4316))+(((0.117537022603216)*x4356))+(((-0.20357990508077)*r12*x4330))+(((-1.0)*cj4*x4307*x4323))+(((0.0648043305514941)*r01*x4308))+((sj0*x4310*x4315))+(((-1.0)*r01*x4317*x4346)));
evalcond[8]=((((0.117537022603216)*sj0*x4310))+(((0.0185150129489311)*x4307*x4316))+(((-1.0)*cj0*x4329))+(((-1.0)*x4359))+(((-1.0)*cj0*x4334))+(((-0.20357990508077)*r02*x4318))+(((-1.0)*cj0*x4337*x4346))+((x4307*x4328))+(((0.235073880801598)*r01*x4352))+(((-0.117537022603216)*x4310*x4318))+(((-1.0)*r01*x4308*x4326))+((x4329*x4330))+(((-0.0098)*x4305))+(((0.0648043305514941)*x4356))+(((-0.235073880801598)*x4308*x4339))+((x4315*x4356))+(((0.117537022603216)*r01*x4308))+(((-0.0678600949192303)*r02*sj0))+((x4307*x4354)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4360=((0.250000349687704)*sj1);
IkReal x4361=(cj1*cj4);
IkReal x4362=((0.749999650312296)*r22);
IkReal x4363=(cj4*sj1);
IkReal x4364=((0.749999650312296)*r02);
IkReal x4365=((0.250000349687704)*cj1);
IkReal x4366=((0.433012903784321)*r00*sj5);
IkReal x4367=((0.433012903784321)*r20*sj5);
IkReal x4368=((0.433012903784321)*cj5*r01);
IkReal x4369=((0.433012903784321)*cj5*r21);
IkReal x4370=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4371=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4372=((0.866025201892125)*r01*sj4*sj5);
IkReal x4373=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*cj1*x4366))+(((-1.0)*cj1*x4368))+((r20*x4370))+((r00*x4371))+(((-1.0)*sj1*x4367))+(((-1.0)*sj1*x4369))+(((-1.0)*sj1*x4373))+((x4363*x4367))+((x4363*x4369))+((x4361*x4366))+((x4361*x4364))+((x4361*x4368))+((x4362*x4363))+((r22*x4360))+(((-1.0)*cj1*x4372))+((r02*x4365)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*cj1*x4367))+(((-1.0)*cj1*x4369))+((sj1*x4372))+((sj1*x4368))+((sj1*x4366))+((r20*x4371))+((x4361*x4367))+((x4361*x4369))+((x4361*x4362))+(((-1.0)*r02*x4360))+(((-1.0)*r00*x4370))+((r22*x4365))+(((-1.0)*x4363*x4366))+(((-1.0)*x4363*x4364))+(((-1.0)*x4363*x4368))+(((-1.0)*cj1*x4373)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*cj1*x4366))+(((-1.0)*cj1*x4368))+((r20*x4370))+((r00*x4371))+(((-1.0)*sj1*x4367))+(((-1.0)*sj1*x4369))+(((-1.0)*sj1*x4373))+((x4363*x4367))+((x4363*x4369))+((x4361*x4366))+((x4361*x4364))+((x4361*x4368))+((x4362*x4363))+((r22*x4360))+(((-1.0)*cj1*x4372))+((r02*x4365))))+IKsqr(((((-1.0)*cj1*x4367))+(((-1.0)*cj1*x4369))+((sj1*x4372))+((sj1*x4368))+((sj1*x4366))+((r20*x4371))+((x4361*x4367))+((x4361*x4369))+((x4361*x4362))+(((-1.0)*r02*x4360))+(((-1.0)*r00*x4370))+((r22*x4365))+(((-1.0)*x4363*x4366))+(((-1.0)*x4363*x4364))+(((-1.0)*x4363*x4368))+(((-1.0)*cj1*x4373))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*cj1*x4366))+(((-1.0)*cj1*x4368))+((r20*x4370))+((r00*x4371))+(((-1.0)*sj1*x4367))+(((-1.0)*sj1*x4369))+(((-1.0)*sj1*x4373))+((x4363*x4367))+((x4363*x4369))+((x4361*x4366))+((x4361*x4364))+((x4361*x4368))+((x4362*x4363))+((r22*x4360))+(((-1.0)*cj1*x4372))+((r02*x4365))), ((((-1.0)*cj1*x4367))+(((-1.0)*cj1*x4369))+((sj1*x4372))+((sj1*x4368))+((sj1*x4366))+((r20*x4371))+((x4361*x4367))+((x4361*x4369))+((x4361*x4362))+(((-1.0)*r02*x4360))+(((-1.0)*r00*x4370))+((r22*x4365))+(((-1.0)*x4363*x4366))+(((-1.0)*x4363*x4364))+(((-1.0)*x4363*x4368))+(((-1.0)*cj1*x4373))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4374=IKsin(j2);
IkReal x4375=IKcos(j2);
IkReal x4376=((0.749999650312296)*sj3);
IkReal x4377=(cj5*r01);
IkReal x4378=(r00*sj5);
IkReal x4379=(cj4*cj5);
IkReal x4380=((1.0)*cj3);
IkReal x4381=(r21*sj3);
IkReal x4382=(cj4*sj5);
IkReal x4383=(cj3*r21);
IkReal x4384=((0.500000349687582)*sj4);
IkReal x4385=((0.433012903784321)*r20);
IkReal x4386=(cj4*r22);
IkReal x4387=((0.433012903784321)*sj3);
IkReal x4388=((0.433012903784321)*cj4);
IkReal x4389=(r01*sj5);
IkReal x4390=(r20*sj5);
IkReal x4391=((0.0160344678271334)*r02);
IkReal x4392=(cj4*r02);
IkReal x4393=((0.00925751294893567)*cj4);
IkReal x4394=((0.0185150129489311)*sj4);
IkReal x4395=(r21*sj5);
IkReal x4396=(cj5*r21);
IkReal x4397=((0.866025201892125)*sj4);
IkReal x4398=(cj5*r20);
IkReal x4399=(cj5*r00);
IkReal x4400=((0.250000349687704)*sj3);
IkReal x4401=(cj1*x4375);
IkReal x4402=(sj1*x4374);
IkReal x4403=(cj1*x4374);
IkReal x4404=(sj1*x4375);
IkReal x4405=(x4401+x4402);
evalcond[0]=((((-0.250000349687704)*r22))+x4405+(((-1.0)*x4382*x4385))+(((-0.749999650312296)*x4386))+(((-0.433012903784321)*r21*x4379))+((x4395*x4397))+(((0.433012903784321)*x4396))+(((-1.0)*x4397*x4398))+((sj5*x4385)));
evalcond[1]=((((-0.250000349687704)*r02))+x4403+((x4389*x4397))+(((-1.0)*x4404))+(((0.433012903784321)*x4377))+(((0.433012903784321)*x4378))+(((-0.749999650312296)*x4392))+(((-1.0)*x4378*x4388))+(((-1.0)*x4377*x4388))+(((-1.0)*x4397*x4399)));
evalcond[2]=((((0.00925751294893567)*r20*x4382))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x4390))+(((0.0648043305514941)*x4396))+(((-0.27144)*x4401))+(((-0.27144)*x4402))+(((-1.0)*pz))+(((0.0160344678271334)*x4386))+(((0.00925751294893567)*r21*x4379))+(((-1.0)*x4394*x4395))+((x4394*x4398)));
evalcond[3]=((((-1.0)*x4391))+((x4378*x4393))+(((-1.0)*x4389*x4394))+(((0.0648043305514941)*x4378))+(((0.0648043305514941)*x4377))+((cj4*x4391))+(((-0.41)*sj1))+(((-0.27144)*x4403))+(((-1.0)*px))+((x4377*x4393))+((x4394*x4399))+(((0.27144)*x4404)));
evalcond[4]=(((cj3*r02*x4397))+(((-1.0)*r02*x4387))+x4405+((x4376*x4377))+((x4376*x4378))+(((-1.0)*sj3*x4384*x4389))+((cj3*x4378*x4384))+((cj4*x4378*x4400))+((cj3*x4377*x4384))+((x4387*x4392))+((cj4*x4377*x4400))+(((-1.0)*r00*x4379*x4380))+((cj3*r01*x4382))+((sj3*x4384*x4399)));
evalcond[5]=(((cj3*r22*x4397))+((r20*x4382*x4400))+((cj3*x4384*x4390))+x4404+((cj5*x4383*x4384))+(((-1.0)*r20*x4379*x4380))+(((-1.0)*r22*x4387))+((x4376*x4396))+((x4376*x4390))+(((-1.0)*x4403))+(((0.250000349687704)*x4379*x4381))+((x4382*x4383))+(((-1.0)*sj5*x4381*x4384))+((x4386*x4387))+((sj3*x4384*x4398)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4406=(r02*sj1);
IkReal x4407=(cj1*cj4);
IkReal x4408=((0.749999650312296)*r22);
IkReal x4409=(cj4*sj1);
IkReal x4410=((0.250000349687704)*r22);
IkReal x4411=((0.433012903784321)*r00*sj5);
IkReal x4412=((0.433012903784321)*r20*sj5);
IkReal x4413=((0.433012903784321)*cj5*r01);
IkReal x4414=((0.433012903784321)*cj5*r21);
IkReal x4415=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4416=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4417=((0.866025201892125)*r01*sj4*sj5);
IkReal x4418=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x4408*x4409))+(((-1.0)*sj1*x4418))+(((-1.0)*sj1*x4412))+(((-1.0)*sj1*x4414))+((cj1*x4413))+((cj1*x4411))+((cj1*x4417))+(((-0.749999650312296)*r02*x4407))+(((-1.0)*x4407*x4411))+(((-1.0)*x4407*x4413))+(((-1.0)*r00*x4416))+((r20*x4415))+(((-0.250000349687704)*cj1*r02))+((x4409*x4414))+((x4409*x4412))+((sj1*x4410)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*sj1*x4411))+(((-1.0)*sj1*x4413))+(((-1.0)*sj1*x4417))+((cj1*x4410))+(((0.749999650312296)*cj4*x4406))+((x4407*x4414))+((x4407*x4412))+((x4407*x4408))+((r00*x4415))+((r20*x4416))+(((-1.0)*cj1*x4418))+(((-1.0)*cj1*x4412))+(((-1.0)*cj1*x4414))+(((0.250000349687704)*x4406))+((x4409*x4413))+((x4409*x4411)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x4408*x4409))+(((-1.0)*sj1*x4418))+(((-1.0)*sj1*x4412))+(((-1.0)*sj1*x4414))+((cj1*x4413))+((cj1*x4411))+((cj1*x4417))+(((-0.749999650312296)*r02*x4407))+(((-1.0)*x4407*x4411))+(((-1.0)*x4407*x4413))+(((-1.0)*r00*x4416))+((r20*x4415))+(((-0.250000349687704)*cj1*r02))+((x4409*x4414))+((x4409*x4412))+((sj1*x4410))))+IKsqr(((((-1.0)*sj1*x4411))+(((-1.0)*sj1*x4413))+(((-1.0)*sj1*x4417))+((cj1*x4410))+(((0.749999650312296)*cj4*x4406))+((x4407*x4414))+((x4407*x4412))+((x4407*x4408))+((r00*x4415))+((r20*x4416))+(((-1.0)*cj1*x4418))+(((-1.0)*cj1*x4412))+(((-1.0)*cj1*x4414))+(((0.250000349687704)*x4406))+((x4409*x4413))+((x4409*x4411))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x4408*x4409))+(((-1.0)*sj1*x4418))+(((-1.0)*sj1*x4412))+(((-1.0)*sj1*x4414))+((cj1*x4413))+((cj1*x4411))+((cj1*x4417))+(((-0.749999650312296)*r02*x4407))+(((-1.0)*x4407*x4411))+(((-1.0)*x4407*x4413))+(((-1.0)*r00*x4416))+((r20*x4415))+(((-0.250000349687704)*cj1*r02))+((x4409*x4414))+((x4409*x4412))+((sj1*x4410))), ((((-1.0)*sj1*x4411))+(((-1.0)*sj1*x4413))+(((-1.0)*sj1*x4417))+((cj1*x4410))+(((0.749999650312296)*cj4*x4406))+((x4407*x4414))+((x4407*x4412))+((x4407*x4408))+((r00*x4415))+((r20*x4416))+(((-1.0)*cj1*x4418))+(((-1.0)*cj1*x4412))+(((-1.0)*cj1*x4414))+(((0.250000349687704)*x4406))+((x4409*x4413))+((x4409*x4411))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4419=IKcos(j2);
IkReal x4420=IKsin(j2);
IkReal x4421=((0.433012903784321)*sj3);
IkReal x4422=((0.749999650312296)*sj3);
IkReal x4423=(r00*sj5);
IkReal x4424=(cj4*cj5);
IkReal x4425=((1.0)*cj3);
IkReal x4426=(cj5*r01);
IkReal x4427=(r21*sj3);
IkReal x4428=(cj4*sj5);
IkReal x4429=(cj3*r21);
IkReal x4430=((0.500000349687582)*sj4);
IkReal x4431=((0.433012903784321)*r20);
IkReal x4432=(cj4*r22);
IkReal x4433=(r20*sj5);
IkReal x4434=((0.0160344678271334)*r02);
IkReal x4435=(cj4*r02);
IkReal x4436=(r01*sj5);
IkReal x4437=(cj5*r00);
IkReal x4438=((0.0185150129489311)*sj4);
IkReal x4439=(r21*sj5);
IkReal x4440=(cj5*r21);
IkReal x4441=((0.866025201892125)*sj4);
IkReal x4442=(cj5*r20);
IkReal x4443=((0.250000349687704)*sj3);
IkReal x4444=(sj1*x4419);
IkReal x4445=(cj1*x4419);
IkReal x4446=(sj1*x4420);
IkReal x4447=(cj1*x4420);
IkReal x4448=((1.0)*x4447);
evalcond[0]=(((sj5*x4431))+(((-1.0)*x4428*x4431))+(((-0.250000349687704)*r22))+x4445+x4446+(((0.433012903784321)*x4440))+((x4439*x4441))+(((-1.0)*x4441*x4442))+(((-0.749999650312296)*x4432))+(((-0.433012903784321)*r21*x4424)));
evalcond[1]=((((-0.250000349687704)*r02))+(((0.433012903784321)*x4426))+(((0.433012903784321)*x4423))+(((-0.433012903784321)*r01*x4424))+(((-0.433012903784321)*cj4*x4423))+x4444+(((-1.0)*x4448))+((x4436*x4441))+(((-1.0)*x4437*x4441))+(((-0.749999650312296)*x4435)));
evalcond[2]=((((0.00925751294893567)*r20*x4428))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x4440))+(((-1.0)*pz))+(((-1.0)*x4438*x4439))+(((0.0160344678271334)*x4432))+((x4438*x4442))+(((-0.27144)*x4445))+(((-0.27144)*x4446))+(((0.0648043305514941)*x4433))+(((0.00925751294893567)*r21*x4424)));
evalcond[3]=((((0.00925751294893567)*r01*x4424))+(((-1.0)*x4434))+(((0.41)*sj1))+(((0.00925751294893567)*cj4*x4423))+(((0.0648043305514941)*x4426))+(((0.0648043305514941)*x4423))+((x4437*x4438))+(((-1.0)*px))+(((0.27144)*x4447))+(((-0.27144)*x4444))+(((-1.0)*x4436*x4438))+((cj4*x4434)));
evalcond[4]=(((cj3*r22*x4441))+((sj3*x4430*x4442))+((cj3*x4430*x4433))+x4444+(((-1.0)*x4448))+((cj5*x4429*x4430))+((x4422*x4440))+((x4422*x4433))+((x4421*x4432))+(((-1.0)*r22*x4421))+(((-1.0)*sj5*x4427*x4430))+((x4428*x4429))+((r20*x4428*x4443))+(((0.250000349687704)*x4424*x4427))+(((-1.0)*r20*x4424*x4425)));
evalcond[5]=(((r01*x4424*x4443))+((x4422*x4426))+((x4422*x4423))+((cj3*x4426*x4430))+(((-1.0)*r00*x4424*x4425))+((cj4*x4423*x4443))+((sj3*x4430*x4437))+(((-1.0)*x4446))+(((-1.0)*x4445))+((x4421*x4435))+((cj3*r02*x4441))+(((-1.0)*r02*x4421))+(((-1.0)*sj3*x4430*x4436))+((cj3*r01*x4428))+((cj3*x4423*x4430)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4449=((0.250000349687704)*r12);
IkReal x4450=((0.749999650312296)*cj4);
IkReal x4451=((0.433012903784321)*sj5);
IkReal x4452=(cj1*r10);
IkReal x4453=(cj1*r22);
IkReal x4454=(cj1*r20);
IkReal x4455=((0.866025201892125)*sj4);
IkReal x4456=(r20*sj1);
IkReal x4457=(r22*sj1);
IkReal x4458=(r10*sj1);
IkReal x4459=(r11*sj1);
IkReal x4460=((0.433012903784321)*cj5);
IkReal x4461=(r21*sj1);
IkReal x4462=(cj1*r21);
IkReal x4463=(cj1*r11);
IkReal x4464=(cj5*sj1*x4455);
IkReal x4465=(cj4*r21*x4460);
if( IKabs((((cj1*x4449))+((x4450*x4457))+((cj5*x4455*x4456))+((cj4*x4460*x4461))+((cj4*x4460*x4463))+((cj5*x4452*x4455))+((cj4*x4451*x4456))+((cj4*x4451*x4452))+(((-1.0)*sj5*x4455*x4461))+(((-1.0)*sj5*x4455*x4463))+(((-1.0)*x4460*x4463))+(((-1.0)*x4460*x4461))+(((-1.0)*x4451*x4452))+(((-1.0)*x4451*x4456))+((cj1*r12*x4450))+(((0.250000349687704)*x4457)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((sj5*x4455*x4459))+((x4450*x4453))+((cj5*x4454*x4455))+((x4451*x4458))+(((-1.0)*cj4*x4451*x4458))+((cj4*x4460*x4462))+(((-1.0)*sj1*x4449))+(((-1.0)*r12*sj1*x4450))+((cj4*x4451*x4454))+((x4459*x4460))+(((-1.0)*sj5*x4455*x4462))+(((-1.0)*x4460*x4462))+(((-1.0)*cj4*x4459*x4460))+(((-1.0)*x4451*x4454))+(((-1.0)*cj5*x4455*x4458))+(((0.250000349687704)*x4453)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj1*x4449))+((x4450*x4457))+((cj5*x4455*x4456))+((cj4*x4460*x4461))+((cj4*x4460*x4463))+((cj5*x4452*x4455))+((cj4*x4451*x4456))+((cj4*x4451*x4452))+(((-1.0)*sj5*x4455*x4461))+(((-1.0)*sj5*x4455*x4463))+(((-1.0)*x4460*x4463))+(((-1.0)*x4460*x4461))+(((-1.0)*x4451*x4452))+(((-1.0)*x4451*x4456))+((cj1*r12*x4450))+(((0.250000349687704)*x4457))))+IKsqr((((sj5*x4455*x4459))+((x4450*x4453))+((cj5*x4454*x4455))+((x4451*x4458))+(((-1.0)*cj4*x4451*x4458))+((cj4*x4460*x4462))+(((-1.0)*sj1*x4449))+(((-1.0)*r12*sj1*x4450))+((cj4*x4451*x4454))+((x4459*x4460))+(((-1.0)*sj5*x4455*x4462))+(((-1.0)*x4460*x4462))+(((-1.0)*cj4*x4459*x4460))+(((-1.0)*x4451*x4454))+(((-1.0)*cj5*x4455*x4458))+(((0.250000349687704)*x4453))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj1*x4449))+((x4450*x4457))+((cj5*x4455*x4456))+((cj4*x4460*x4461))+((cj4*x4460*x4463))+((cj5*x4452*x4455))+((cj4*x4451*x4456))+((cj4*x4451*x4452))+(((-1.0)*sj5*x4455*x4461))+(((-1.0)*sj5*x4455*x4463))+(((-1.0)*x4460*x4463))+(((-1.0)*x4460*x4461))+(((-1.0)*x4451*x4452))+(((-1.0)*x4451*x4456))+((cj1*r12*x4450))+(((0.250000349687704)*x4457))), (((sj5*x4455*x4459))+((x4450*x4453))+((cj5*x4454*x4455))+((x4451*x4458))+(((-1.0)*cj4*x4451*x4458))+((cj4*x4460*x4462))+(((-1.0)*sj1*x4449))+(((-1.0)*r12*sj1*x4450))+((cj4*x4451*x4454))+((x4459*x4460))+(((-1.0)*sj5*x4455*x4462))+(((-1.0)*x4460*x4462))+(((-1.0)*cj4*x4459*x4460))+(((-1.0)*x4451*x4454))+(((-1.0)*cj5*x4455*x4458))+(((0.250000349687704)*x4453))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4466=IKsin(j2);
IkReal x4467=IKcos(j2);
IkReal x4468=(cj5*r11);
IkReal x4469=((0.433012903784321)*cj4);
IkReal x4470=(r21*sj5);
IkReal x4471=((0.500000349687582)*sj4);
IkReal x4472=((0.749999650312296)*sj3);
IkReal x4473=(cj3*cj4);
IkReal x4474=(cj5*r10);
IkReal x4475=((0.0185150129489311)*sj4);
IkReal x4476=(r20*sj5);
IkReal x4477=(cj4*r22);
IkReal x4478=(r10*sj5);
IkReal x4479=(r22*sj3);
IkReal x4480=(r11*sj5);
IkReal x4481=((0.00925751294893567)*cj4);
IkReal x4482=(cj5*r21);
IkReal x4483=(r12*sj3);
IkReal x4484=(cj4*r12);
IkReal x4485=(cj5*r20);
IkReal x4486=((0.866025201892125)*sj4);
IkReal x4487=(cj1*x4467);
IkReal x4488=(sj1*x4466);
IkReal x4489=(cj1*x4466);
IkReal x4490=((0.250000349687704)*cj4*sj3);
IkReal x4491=(sj1*x4467);
IkReal x4492=(cj3*x4486);
IkReal x4493=(x4487+x4488);
evalcond[0]=(((x4470*x4486))+(((-0.250000349687704)*r22))+x4493+(((-0.749999650312296)*x4477))+(((-1.0)*x4485*x4486))+(((0.433012903784321)*x4476))+(((0.433012903784321)*x4482))+(((-1.0)*x4469*x4476))+(((-1.0)*x4469*x4482)));
evalcond[1]=((((-1.0)*x4491))+(((-0.250000349687704)*r12))+x4489+(((-0.749999650312296)*x4484))+(((-1.0)*x4474*x4486))+((x4480*x4486))+(((0.433012903784321)*x4468))+(((-1.0)*x4468*x4469))+(((0.433012903784321)*x4478))+(((-1.0)*x4469*x4478)));
evalcond[2]=((((0.0160344678271334)*x4477))+(((0.41)*cj1))+((x4476*x4481))+(((-0.0160344678271334)*r22))+(((-1.0)*x4470*x4475))+(((-1.0)*pz))+((x4481*x4482))+((x4475*x4485))+(((0.0648043305514941)*x4476))+(((-0.27144)*x4488))+(((-0.27144)*x4487))+(((0.0648043305514941)*x4482)));
evalcond[3]=((((0.0160344678271334)*x4484))+(((-0.0160344678271334)*r12))+(((0.27144)*x4491))+(((-1.0)*x4475*x4480))+((x4478*x4481))+(((-0.41)*sj1))+(((0.0648043305514941)*x4468))+(((-1.0)*py))+((x4474*x4475))+(((0.0648043305514941)*x4478))+((x4468*x4481))+(((-0.27144)*x4489)));
evalcond[4]=(((r12*x4492))+((x4468*x4490))+((sj3*x4471*x4474))+(((-0.433012903784321)*x4483))+x4493+((cj3*x4471*x4478))+(((-1.0)*x4473*x4474))+((x4478*x4490))+(((-1.0)*sj3*x4471*x4480))+((cj3*x4468*x4471))+((x4472*x4478))+((x4473*x4480))+((x4469*x4483))+((x4468*x4472)));
evalcond[5]=((((-1.0)*x4489))+((sj3*x4471*x4485))+(((-0.433012903784321)*x4479))+(((-1.0)*x4473*x4485))+((x4470*x4473))+x4491+((cj3*x4471*x4482))+((cj3*x4471*x4476))+((x4476*x4490))+((r22*x4492))+(((-1.0)*sj3*x4470*x4471))+((x4472*x4476))+((x4472*x4482))+((x4482*x4490))+((x4469*x4479)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4494=((0.250000349687704)*r12);
IkReal x4495=((0.749999650312296)*cj4);
IkReal x4496=(cj1*r22);
IkReal x4497=((0.866025201892125)*sj4);
IkReal x4498=(cj1*r20);
IkReal x4499=(sj1*sj5);
IkReal x4500=((0.433012903784321)*r20);
IkReal x4501=((0.433012903784321)*sj5);
IkReal x4502=(cj1*r10);
IkReal x4503=(r22*sj1);
IkReal x4504=((0.433012903784321)*r10);
IkReal x4505=((0.433012903784321)*cj5);
IkReal x4506=(cj1*r21);
IkReal x4507=(cj1*r11);
IkReal x4508=(r11*sj1);
IkReal x4509=(cj1*cj4*x4501);
IkReal x4510=(cj5*sj1*x4497);
IkReal x4511=(cj4*r21*x4505);
if( IKabs((((cj4*x4499*x4500))+((sj5*x4497*x4507))+(((-1.0)*cj1*x4494))+((x4495*x4503))+(((-1.0)*r21*sj1*x4505))+((x4501*x4502))+((r20*x4510))+(((0.250000349687704)*x4503))+(((-1.0)*cj5*x4497*x4502))+((sj1*x4511))+((x4505*x4507))+(((-1.0)*cj4*x4505*x4507))+(((-1.0)*r21*x4497*x4499))+(((-1.0)*cj1*r12*x4495))+(((-1.0)*cj4*x4501*x4502))+(((-1.0)*x4499*x4500)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj4*x4499*x4504))+((r10*x4510))+(((-1.0)*r11*x4497*x4499))+((cj4*x4498*x4501))+((sj1*x4494))+(((0.250000349687704)*x4496))+((cj4*x4505*x4506))+((cj4*x4505*x4508))+((cj5*x4497*x4498))+(((-1.0)*x4498*x4501))+((x4495*x4496))+(((-1.0)*x4505*x4508))+(((-1.0)*x4505*x4506))+((r12*sj1*x4495))+(((-1.0)*x4499*x4504))+(((-1.0)*sj5*x4497*x4506)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x4499*x4500))+((sj5*x4497*x4507))+(((-1.0)*cj1*x4494))+((x4495*x4503))+(((-1.0)*r21*sj1*x4505))+((x4501*x4502))+((r20*x4510))+(((0.250000349687704)*x4503))+(((-1.0)*cj5*x4497*x4502))+((sj1*x4511))+((x4505*x4507))+(((-1.0)*cj4*x4505*x4507))+(((-1.0)*r21*x4497*x4499))+(((-1.0)*cj1*r12*x4495))+(((-1.0)*cj4*x4501*x4502))+(((-1.0)*x4499*x4500))))+IKsqr((((cj4*x4499*x4504))+((r10*x4510))+(((-1.0)*r11*x4497*x4499))+((cj4*x4498*x4501))+((sj1*x4494))+(((0.250000349687704)*x4496))+((cj4*x4505*x4506))+((cj4*x4505*x4508))+((cj5*x4497*x4498))+(((-1.0)*x4498*x4501))+((x4495*x4496))+(((-1.0)*x4505*x4508))+(((-1.0)*x4505*x4506))+((r12*sj1*x4495))+(((-1.0)*x4499*x4504))+(((-1.0)*sj5*x4497*x4506))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x4499*x4500))+((sj5*x4497*x4507))+(((-1.0)*cj1*x4494))+((x4495*x4503))+(((-1.0)*r21*sj1*x4505))+((x4501*x4502))+((r20*x4510))+(((0.250000349687704)*x4503))+(((-1.0)*cj5*x4497*x4502))+((sj1*x4511))+((x4505*x4507))+(((-1.0)*cj4*x4505*x4507))+(((-1.0)*r21*x4497*x4499))+(((-1.0)*cj1*r12*x4495))+(((-1.0)*cj4*x4501*x4502))+(((-1.0)*x4499*x4500))), (((cj4*x4499*x4504))+((r10*x4510))+(((-1.0)*r11*x4497*x4499))+((cj4*x4498*x4501))+((sj1*x4494))+(((0.250000349687704)*x4496))+((cj4*x4505*x4506))+((cj4*x4505*x4508))+((cj5*x4497*x4498))+(((-1.0)*x4498*x4501))+((x4495*x4496))+(((-1.0)*x4505*x4508))+(((-1.0)*x4505*x4506))+((r12*sj1*x4495))+(((-1.0)*x4499*x4504))+(((-1.0)*sj5*x4497*x4506))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4512=IKcos(j2);
IkReal x4513=IKsin(j2);
IkReal x4514=(cj5*r11);
IkReal x4515=((0.433012903784321)*cj4);
IkReal x4516=(r21*sj5);
IkReal x4517=((0.500000349687582)*sj4);
IkReal x4518=((0.749999650312296)*sj3);
IkReal x4519=(cj3*cj4);
IkReal x4520=(cj5*r10);
IkReal x4521=((0.0185150129489311)*sj4);
IkReal x4522=(r20*sj5);
IkReal x4523=(cj4*r22);
IkReal x4524=(r10*sj5);
IkReal x4525=(r12*sj3);
IkReal x4526=(r11*sj5);
IkReal x4527=(r22*sj3);
IkReal x4528=((0.27144)*sj1);
IkReal x4529=((0.00925751294893567)*cj4);
IkReal x4530=(cj5*r20);
IkReal x4531=(cj5*r21);
IkReal x4532=(cj4*r12);
IkReal x4533=((0.866025201892125)*sj4);
IkReal x4534=(sj1*x4512);
IkReal x4535=(cj1*x4512);
IkReal x4536=(cj1*x4513);
IkReal x4537=((0.250000349687704)*cj4*sj3);
IkReal x4538=(cj3*x4533);
IkReal x4539=(sj1*x4513);
IkReal x4540=((1.0)*x4536);
evalcond[0]=((((-1.0)*x4530*x4533))+(((-0.250000349687704)*r22))+x4539+x4535+(((-0.749999650312296)*x4523))+((x4516*x4533))+(((0.433012903784321)*x4531))+(((0.433012903784321)*x4522))+(((-1.0)*x4515*x4531))+(((-1.0)*x4515*x4522)));
evalcond[1]=((((-0.250000349687704)*r12))+((x4526*x4533))+x4534+(((0.433012903784321)*x4514))+(((-0.749999650312296)*x4532))+(((-1.0)*x4520*x4533))+(((0.433012903784321)*x4524))+(((-1.0)*x4515*x4524))+(((-1.0)*x4540))+(((-1.0)*x4514*x4515)));
evalcond[2]=((((-0.27144)*x4535))+((x4529*x4531))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.0648043305514941)*x4531))+(((0.0160344678271334)*x4523))+((x4521*x4530))+(((0.0648043305514941)*x4522))+(((-1.0)*pz))+(((-1.0)*x4513*x4528))+(((-1.0)*x4516*x4521))+((x4522*x4529)));
evalcond[3]=((((0.27144)*x4536))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((0.0160344678271334)*x4532))+(((-1.0)*x4521*x4526))+((x4514*x4529))+(((0.0648043305514941)*x4524))+(((-1.0)*py))+((x4524*x4529))+(((-1.0)*x4512*x4528))+((x4520*x4521))+(((0.0648043305514941)*x4514)));
evalcond[4]=(((x4518*x4531))+(((-1.0)*x4519*x4530))+((x4516*x4519))+((x4531*x4537))+x4534+((x4515*x4527))+((r22*x4538))+((sj3*x4517*x4530))+(((-1.0)*sj3*x4516*x4517))+((cj3*x4517*x4531))+((cj3*x4517*x4522))+((x4522*x4537))+(((-0.433012903784321)*x4527))+(((-1.0)*x4540))+((x4518*x4522)));
evalcond[5]=((((-1.0)*x4535))+(((-1.0)*x4539))+((r12*x4538))+((cj3*x4514*x4517))+((x4514*x4537))+((x4515*x4525))+((sj3*x4517*x4520))+((x4524*x4537))+((cj3*x4517*x4524))+(((-1.0)*sj3*x4517*x4526))+(((-0.433012903784321)*x4525))+((x4518*x4524))+((x4519*x4526))+((x4514*x4518))+(((-1.0)*x4519*x4520)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4541=(cj4*sj1);
IkReal x4542=((0.433012903784321)*sj0);
IkReal x4543=(cj5*r21);
IkReal x4544=(cj1*r12);
IkReal x4545=(r20*sj5);
IkReal x4546=(r20*sj0);
IkReal x4547=(r10*sj1);
IkReal x4548=((0.749999650312296)*cj4);
IkReal x4549=(r21*sj0);
IkReal x4550=((0.433012903784321)*sj5);
IkReal x4551=(cj1*cj4);
IkReal x4552=(r22*sj0);
IkReal x4553=((0.250000349687704)*x4552);
IkReal x4554=((0.866025201892125)*cj5*sj4);
IkReal x4555=((0.433012903784321)*cj5*r11);
IkReal x4556=(cj1*r10*x4550);
IkReal x4557=((0.866025201892125)*sj1*sj4*sj5);
IkReal x4558=((0.866025201892125)*cj1*sj4*sj5);
CheckValue<IkReal> x4559=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x4559.valid){
continue;
}
CheckValue<IkReal> x4560 = IKatan2WithCheck(IkReal(((((-1.0)*r11*x4558))+(((-1.0)*sj1*x4542*x4543))+(((-1.0)*sj1*x4542*x4545))+(((-1.0)*cj1*x4555))+((x4551*x4555))+(((-1.0)*x4556))+((x4544*x4548))+((sj1*x4546*x4554))+(((0.749999650312296)*x4541*x4552))+(((-1.0)*x4549*x4557))+((r10*x4550*x4551))+((x4541*x4542*x4545))+((x4541*x4542*x4543))+(((0.250000349687704)*x4544))+((sj1*x4553))+((cj1*r10*x4554)))),IkReal(((((-0.250000349687704)*r12*sj1))+((cj1*x4546*x4554))+(((-1.0)*x4547*x4554))+(((-0.749999650312296)*r12*x4541))+((x4542*x4545*x4551))+(((-1.0)*r10*x4541*x4550))+((x4547*x4550))+((r11*x4557))+((cj1*x4553))+(((-1.0)*cj1*x4542*x4543))+(((-1.0)*cj1*x4542*x4545))+((cj1*x4548*x4552))+(((-1.0)*x4549*x4558))+(((-1.0)*x4541*x4555))+((sj1*x4555))+((x4542*x4543*x4551)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4560.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4559.value)))+(x4560.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x4561=IKsin(j2);
IkReal x4562=IKcos(j2);
IkReal x4563=(cj4*sj5);
IkReal x4564=(cj3*r21);
IkReal x4565=((0.433012903784321)*r20);
IkReal x4566=((0.749999650312296)*cj4);
IkReal x4567=(cj4*cj5);
IkReal x4568=((1.0)*cj3);
IkReal x4569=((0.433012903784321)*r01);
IkReal x4570=(sj4*sj5);
IkReal x4571=((0.749999650312296)*sj3);
IkReal x4572=(r10*sj5);
IkReal x4573=((0.500000349687582)*sj3);
IkReal x4574=(cj0*sj1);
IkReal x4575=((0.500000349687582)*cj3);
IkReal x4576=((0.0160344678271334)*r22);
IkReal x4577=(r20*sj3);
IkReal x4578=(r00*sj5);
IkReal x4579=(cj3*r11);
IkReal x4580=((0.0160344678271334)*r12);
IkReal x4581=((0.433012903784321)*r11);
IkReal x4582=(cj5*r11);
IkReal x4583=(r10*sj3);
IkReal x4584=(r00*sj3);
IkReal x4585=((0.433012903784321)*sj3);
IkReal x4586=(cj5*sj4);
IkReal x4587=(r20*sj5);
IkReal x4588=((0.433012903784321)*r21);
IkReal x4589=(sj0*sj1);
IkReal x4590=(cj3*r01);
IkReal x4591=(cj5*r21);
IkReal x4592=((0.0160344678271334)*r02);
IkReal x4593=(cj5*r01);
IkReal x4594=((0.250000349687704)*sj3);
IkReal x4595=(cj1*x4561);
IkReal x4596=((0.500000349687582)*x4586);
IkReal x4597=((0.27144)*x4562);
IkReal x4598=(cj4*x4585);
IkReal x4599=(sj1*x4561);
IkReal x4600=((0.866025201892125)*cj3*sj4);
IkReal x4601=(cj1*x4562);
IkReal x4602=((1.0)*x4562);
evalcond[0]=((((-0.250000349687704)*r22))+x4599+((cj5*x4588))+x4601+(((-1.0)*x4567*x4588))+(((-1.0)*r22*x4566))+(((0.866025201892125)*r21*x4570))+((sj5*x4565))+(((-1.0)*x4563*x4565))+(((-0.866025201892125)*r20*x4586)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x4567*x4569))+(((-0.866025201892125)*r00*x4586))+(((0.433012903784321)*x4578))+(((-1.0)*x4574*x4602))+((cj5*x4569))+(((-1.0)*r02*x4566))+(((-0.433012903784321)*r00*x4563))+((cj0*x4595))+(((0.866025201892125)*r01*x4570)));
evalcond[2]=((((-0.433012903784321)*r10*x4563))+(((-0.250000349687704)*r12))+(((0.433012903784321)*x4572))+((sj0*x4595))+((cj5*x4581))+(((-1.0)*x4567*x4581))+(((0.866025201892125)*r11*x4570))+(((-0.866025201892125)*r10*x4586))+(((-1.0)*r12*x4566))+(((-1.0)*x4589*x4602)));
evalcond[3]=((((-0.27144)*x4599))+(((0.0185150129489311)*r20*x4586))+(((0.00925751294893567)*r20*x4563))+(((-1.0)*x4576))+(((0.00925751294893567)*r21*x4567))+(((0.41)*cj1))+((cj4*x4576))+(((-1.0)*pz))+(((0.0648043305514941)*x4591))+(((0.0648043305514941)*x4587))+(((-1.0)*cj1*x4597))+(((-0.0185150129489311)*r21*x4570)));
evalcond[4]=((((-1.0)*x4592))+(((-0.0185150129489311)*r01*x4570))+((cj4*x4592))+((x4574*x4597))+(((-0.41)*x4574))+(((0.00925751294893567)*r00*x4563))+(((0.0185150129489311)*r00*x4586))+(((-1.0)*px))+(((0.00925751294893567)*r01*x4567))+(((0.0648043305514941)*x4578))+(((0.0648043305514941)*x4593))+(((0.0098)*sj0))+(((-0.27144)*cj0*x4595)));
evalcond[5]=((((0.0185150129489311)*r10*x4586))+(((-1.0)*x4580))+(((-0.0185150129489311)*r11*x4570))+(((0.00925751294893567)*r11*x4567))+((cj4*x4580))+(((-0.41)*x4589))+(((0.00925751294893567)*r10*x4563))+(((-1.0)*py))+((x4589*x4597))+(((0.0648043305514941)*x4572))+(((0.0648043305514941)*x4582))+(((-0.27144)*sj0*x4595))+(((-0.0098)*cj0)));
evalcond[6]=(((x4564*x4596))+(((-1.0)*r22*x4585))+((r22*x4598))+(((-1.0)*r21*x4570*x4573))+(((-1.0)*x4595))+((sj1*x4562))+((r20*x4573*x4586))+((r21*x4567*x4594))+(((0.250000349687704)*x4563*x4577))+(((-1.0)*r20*x4567*x4568))+((r22*x4600))+((x4571*x4591))+((r20*x4570*x4575))+((x4571*x4587))+((x4563*x4564)));
evalcond[7]=((((0.250000349687704)*x4563*x4584))+((r00*x4570*x4575))+((cj0*x4601))+(((-1.0)*r01*x4570*x4573))+((r02*x4598))+(((-1.0)*r00*x4567*x4568))+((r01*x4575*x4586))+((r00*x4573*x4586))+((x4563*x4590))+((x4571*x4578))+(((-1.0)*r02*x4585))+((r02*x4600))+((r01*x4567*x4594))+((x4561*x4574))+((x4571*x4593)));
evalcond[8]=(((r10*x4570*x4575))+((x4563*x4579))+(((0.250000349687704)*x4563*x4583))+((r12*x4600))+((r11*x4567*x4594))+(((-1.0)*r11*x4570*x4573))+((sj0*x4601))+((sj4*x4575*x4582))+((x4571*x4572))+((r10*x4573*x4586))+(((-1.0)*r10*x4567*x4568))+((x4561*x4589))+(((-1.0)*r12*x4585))+((r12*x4598))+((x4571*x4582)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4603=(cj0*r20);
IkReal x4604=(cj1*r00);
IkReal x4605=(r02*sj1);
IkReal x4606=(r00*sj1);
IkReal x4607=((0.433012903784321)*sj5);
IkReal x4608=(cj4*sj1);
IkReal x4609=((0.749999650312296)*cj4);
IkReal x4610=(cj0*r22);
IkReal x4611=(r01*sj1);
IkReal x4612=(cj1*cj4);
IkReal x4613=(cj0*r21);
IkReal x4614=(cj1*r02);
IkReal x4615=((0.866025201892125)*cj5*sj4);
IkReal x4616=((0.866025201892125)*sj4*sj5);
IkReal x4617=((0.433012903784321)*cj5*r01);
IkReal x4618=((0.433012903784321)*cj5*x4613);
CheckValue<IkReal> x4619 = IKatan2WithCheck(IkReal((((x4608*x4618))+(((-1.0)*sj1*x4613*x4616))+(((0.749999650312296)*x4608*x4610))+(((-1.0)*sj1*x4618))+((x4609*x4614))+(((-1.0)*sj1*x4603*x4607))+((cj4*x4604*x4607))+(((0.250000349687704)*sj1*x4610))+(((0.250000349687704)*x4614))+((sj1*x4603*x4615))+(((-1.0)*cj1*x4617))+(((-1.0)*x4604*x4607))+((x4612*x4617))+((x4603*x4607*x4608))+(((-1.0)*cj1*r01*x4616))+((x4604*x4615)))),IkReal(((((0.433012903784321)*cj5*x4611))+(((-1.0)*cj1*x4603*x4607))+(((-1.0)*x4606*x4615))+((x4611*x4616))+(((0.250000349687704)*cj1*x4610))+((x4603*x4607*x4612))+((x4606*x4607))+(((-1.0)*x4608*x4617))+(((-1.0)*cj1*x4613*x4616))+(((-0.250000349687704)*x4605))+((cj1*x4603*x4615))+(((-1.0)*cj1*x4618))+(((-1.0)*cj4*x4606*x4607))+((x4612*x4618))+(((-1.0)*x4605*x4609))+((cj1*x4609*x4610)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4619.valid){
continue;
}
CheckValue<IkReal> x4620=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x4620.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x4619.value)+(((1.5707963267949)*(x4620.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x4621=IKsin(j2);
IkReal x4622=IKcos(j2);
IkReal x4623=(cj4*sj5);
IkReal x4624=(cj3*r21);
IkReal x4625=((0.433012903784321)*r20);
IkReal x4626=((0.749999650312296)*cj4);
IkReal x4627=(cj4*cj5);
IkReal x4628=((1.0)*cj3);
IkReal x4629=((0.433012903784321)*r01);
IkReal x4630=(sj4*sj5);
IkReal x4631=((0.749999650312296)*sj3);
IkReal x4632=(r10*sj5);
IkReal x4633=((0.500000349687582)*sj3);
IkReal x4634=(cj0*sj1);
IkReal x4635=((0.500000349687582)*cj3);
IkReal x4636=((0.0160344678271334)*r22);
IkReal x4637=(r20*sj3);
IkReal x4638=(r00*sj5);
IkReal x4639=(cj3*r11);
IkReal x4640=((0.0160344678271334)*r12);
IkReal x4641=((0.433012903784321)*r11);
IkReal x4642=(cj5*r11);
IkReal x4643=(r10*sj3);
IkReal x4644=(r00*sj3);
IkReal x4645=((0.433012903784321)*sj3);
IkReal x4646=(cj5*sj4);
IkReal x4647=(r20*sj5);
IkReal x4648=((0.433012903784321)*r21);
IkReal x4649=(sj0*sj1);
IkReal x4650=(cj3*r01);
IkReal x4651=(cj5*r21);
IkReal x4652=((0.0160344678271334)*r02);
IkReal x4653=(cj5*r01);
IkReal x4654=((0.250000349687704)*sj3);
IkReal x4655=(cj1*x4621);
IkReal x4656=((0.500000349687582)*x4646);
IkReal x4657=((0.27144)*x4622);
IkReal x4658=(cj4*x4645);
IkReal x4659=(sj1*x4621);
IkReal x4660=((0.866025201892125)*cj3*sj4);
IkReal x4661=(cj1*x4622);
IkReal x4662=((1.0)*x4622);
evalcond[0]=((((-0.250000349687704)*r22))+((sj5*x4625))+(((0.866025201892125)*r21*x4630))+(((-1.0)*r22*x4626))+x4661+x4659+(((-0.866025201892125)*r20*x4646))+(((-1.0)*x4623*x4625))+((cj5*x4648))+(((-1.0)*x4627*x4648)));
evalcond[1]=((((0.433012903784321)*x4638))+(((-0.250000349687704)*r02))+((cj0*x4655))+(((0.866025201892125)*r01*x4630))+(((-1.0)*x4627*x4629))+(((-1.0)*r02*x4626))+(((-1.0)*x4634*x4662))+(((-0.866025201892125)*r00*x4646))+(((-0.433012903784321)*r00*x4623))+((cj5*x4629)));
evalcond[2]=(((sj0*x4655))+(((0.433012903784321)*x4632))+(((-0.250000349687704)*r12))+(((-0.433012903784321)*r10*x4623))+(((0.866025201892125)*r11*x4630))+(((-1.0)*x4649*x4662))+((cj5*x4641))+(((-1.0)*x4627*x4641))+(((-1.0)*r12*x4626))+(((-0.866025201892125)*r10*x4646)));
evalcond[3]=((((0.00925751294893567)*r21*x4627))+(((-1.0)*cj1*x4657))+(((-1.0)*x4636))+(((-0.0185150129489311)*r21*x4630))+((cj4*x4636))+(((0.0185150129489311)*r20*x4646))+(((0.41)*cj1))+(((-1.0)*pz))+(((0.0648043305514941)*x4651))+(((0.0648043305514941)*x4647))+(((0.00925751294893567)*r20*x4623))+(((-0.27144)*x4659)));
evalcond[4]=((((-1.0)*x4652))+(((-0.0185150129489311)*r01*x4630))+(((-0.41)*x4634))+((x4634*x4657))+(((-1.0)*px))+(((-0.27144)*cj0*x4655))+((cj4*x4652))+(((0.0648043305514941)*x4653))+(((0.0648043305514941)*x4638))+(((0.00925751294893567)*r00*x4623))+(((0.00925751294893567)*r01*x4627))+(((0.0185150129489311)*r00*x4646))+(((0.0098)*sj0)));
evalcond[5]=((((-0.27144)*sj0*x4655))+(((0.00925751294893567)*r10*x4623))+(((-0.0185150129489311)*r11*x4630))+(((0.0185150129489311)*r10*x4646))+((x4649*x4657))+(((-1.0)*py))+(((-1.0)*x4640))+(((0.00925751294893567)*r11*x4627))+((cj4*x4640))+(((-0.41)*x4649))+(((0.0648043305514941)*x4632))+(((-0.0098)*cj0))+(((0.0648043305514941)*x4642)));
evalcond[6]=(((sj1*x4622))+((x4631*x4651))+(((-1.0)*r20*x4627*x4628))+((x4623*x4624))+(((0.250000349687704)*x4623*x4637))+((x4624*x4656))+((x4631*x4647))+(((-1.0)*x4655))+((r20*x4633*x4646))+(((-1.0)*r22*x4645))+((r22*x4660))+((r20*x4630*x4635))+((r22*x4658))+(((-1.0)*r21*x4630*x4633))+((r21*x4627*x4654)));
evalcond[7]=(((x4631*x4653))+((r01*x4627*x4654))+((x4631*x4638))+(((-1.0)*r02*x4645))+((r02*x4660))+((x4623*x4650))+((x4621*x4634))+((r00*x4630*x4635))+((r02*x4658))+((r01*x4635*x4646))+((r00*x4633*x4646))+(((-1.0)*r00*x4627*x4628))+(((-1.0)*r01*x4630*x4633))+(((0.250000349687704)*x4623*x4644))+((cj0*x4661)));
evalcond[8]=(((x4631*x4632))+((r12*x4658))+((r10*x4630*x4635))+((sj0*x4661))+((r11*x4627*x4654))+((r12*x4660))+((x4631*x4642))+(((-1.0)*r12*x4645))+((sj4*x4635*x4642))+((x4623*x4639))+(((-1.0)*r10*x4627*x4628))+((r10*x4633*x4646))+(((0.250000349687704)*x4623*x4643))+(((-1.0)*r11*x4630*x4633))+((x4621*x4649)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x4663=((0.26409636501044)*cj4);
IkReal x4664=(r20*sj5);
IkReal x4665=(cj5*r21);
IkReal x4666=(r10*sj5);
IkReal x4667=(cj5*r11);
IkReal x4668=((0.528192360616262)*sj4);
IkReal x4669=((0.18234135315471)*sj0);
IkReal x4670=(r12*sj0);
IkReal x4671=((0.10827950965428)*cj4*sj0);
IkReal x4672=((0.216558867852667)*sj0*sj4);
CheckValue<IkReal> x4673=IKPowWithIntegerCheck(sj0,-2);
if(!x4673.valid){
continue;
}
if( IKabs(((2.4390243902439)*(x4673.value)*(((((-0.0838945627463637)*x4670))+(((-1.0)*cj5*r10*x4672))+((r11*sj5*x4672))+(((-0.0098)*cj0*sj0))+(((-1.0)*x4667*x4671))+(((-0.187545437253636)*cj4*x4670))+(((-1.0)*py*sj0))+((x4666*x4669))+(((-1.0)*x4666*x4671))+((x4667*x4669)))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x4668))+(((0.457427895740576)*cj4*r22))+((cj5*r20*x4668))+((x4663*x4664))+((x4663*x4665))+(((-0.444735007694415)*x4664))+(((-0.444735007694415)*x4665))+(((2.4390243902439)*pz)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((2.4390243902439)*(x4673.value)*(((((-0.0838945627463637)*x4670))+(((-1.0)*cj5*r10*x4672))+((r11*sj5*x4672))+(((-0.0098)*cj0*sj0))+(((-1.0)*x4667*x4671))+(((-0.187545437253636)*cj4*x4670))+(((-1.0)*py*sj0))+((x4666*x4669))+(((-1.0)*x4666*x4671))+((x4667*x4669))))))+IKsqr(((((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x4668))+(((0.457427895740576)*cj4*r22))+((cj5*r20*x4668))+((x4663*x4664))+((x4663*x4665))+(((-0.444735007694415)*x4664))+(((-0.444735007694415)*x4665))+(((2.4390243902439)*pz))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((2.4390243902439)*(x4673.value)*(((((-0.0838945627463637)*x4670))+(((-1.0)*cj5*r10*x4672))+((r11*sj5*x4672))+(((-0.0098)*cj0*sj0))+(((-1.0)*x4667*x4671))+(((-0.187545437253636)*cj4*x4670))+(((-1.0)*py*sj0))+((x4666*x4669))+(((-1.0)*x4666*x4671))+((x4667*x4669))))), ((((0.204620884747229)*r22))+(((-1.0)*r21*sj5*x4668))+(((0.457427895740576)*cj4*r22))+((cj5*r20*x4668))+((x4663*x4664))+((x4663*x4665))+(((-0.444735007694415)*x4664))+(((-0.444735007694415)*x4665))+(((2.4390243902439)*pz))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[9];
IkReal x4674=IKsin(j1);
IkReal x4675=IKcos(j1);
IkReal x4676=sj0*sj0;
IkReal x4677=cj0*cj0;
IkReal x4678=((0.0098)*cj0);
IkReal x4679=(cj0*cj5);
IkReal x4680=(cj5*sj0);
IkReal x4681=((0.0648043305514941)*r21);
IkReal x4682=(r00*sj5);
IkReal x4683=((0.20357990508077)*sj3);
IkReal x4684=((0.135720094919197)*r21);
IkReal x4685=((1.0)*px);
IkReal x4686=((0.117537022603216)*sj3);
IkReal x4687=((0.00925751294893567)*cj4);
IkReal x4688=(r10*sj4);
IkReal x4689=(sj0*sj5);
IkReal x4690=(cj4*sj0);
IkReal x4691=(r20*sj5);
IkReal x4692=((0.10827950965428)*cj4);
IkReal x4693=(cj3*sj4);
IkReal x4694=((0.135720094919197)*sj5);
IkReal x4695=((0.117537022603216)*r11);
IkReal x4696=(cj5*r01);
IkReal x4697=(cj4*r02);
IkReal x4698=((0.117537022603216)*cj4);
IkReal x4699=((0.0160344678271334)*r02);
IkReal x4700=((0.0648043305514941)*r11);
IkReal x4701=((0.0160344678271334)*r12);
IkReal x4702=(cj0*cj4);
IkReal x4703=(cj5*sj3);
IkReal x4704=((0.0678600949192303)*cj4);
IkReal x4705=(r10*sj5);
IkReal x4706=((1.0)*py);
IkReal x4707=(cj5*r00);
IkReal x4708=(cj0*r21);
IkReal x4709=(r11*sj5);
IkReal x4710=((0.0160344678271334)*r22);
IkReal x4711=(r00*sj4);
IkReal x4712=((1.0)*pz);
IkReal x4713=(r22*sj0);
IkReal x4714=(sj3*sj4);
IkReal x4715=(cj5*r21);
IkReal x4716=(r21*sj3);
IkReal x4717=(cj0*r22);
IkReal x4718=((0.0185150129489311)*sj4);
IkReal x4719=(cj5*r11);
IkReal x4720=(r01*sj5);
IkReal x4721=((0.216558867852667)*sj4);
IkReal x4722=((0.135720094919197)*r20);
IkReal x4723=(sj0*x4678);
IkReal x4724=(sj4*x4689);
IkReal x4725=((0.27144)*cj3*cj4);
IkReal x4726=(r11*x4687);
IkReal x4727=((0.41)*x4674);
IkReal x4728=(cj0*x4705);
IkReal x4729=(sj5*x4718);
IkReal x4730=((0.41)*x4675);
IkReal x4731=(cj0*sj0*x4727);
evalcond[0]=((((-0.18234135315471)*x4691))+((cj5*r20*x4721))+(((0.187545437253636)*cj4*r22))+(((-1.0)*r21*sj5*x4721))+(((-1.0)*x4730))+pz+((x4691*x4692))+((x4692*x4715))+(((-0.18234135315471)*x4715))+(((0.0838945627463637)*r22)));
evalcond[1]=((((-0.216558867852667)*x4680*x4688))+(((0.18234135315471)*r10*x4689))+(((-0.187545437253636)*r12*x4690))+(((-1.0)*x4723))+(((-1.0)*sj0*x4706))+(((-1.0)*r10*x4689*x4692))+(((0.18234135315471)*r11*x4680))+(((-1.0)*r11*x4680*x4692))+(((-1.0)*x4676*x4727))+(((-0.0838945627463637)*r12*sj0))+((r11*x4689*x4721)));
evalcond[2]=((((-1.0)*cj0*x4685))+(((-0.0838945627463637)*cj0*r02))+(((-0.187545437253636)*cj0*x4697))+(((-1.0)*x4677*x4727))+((cj0*x4720*x4721))+x4723+(((0.18234135315471)*cj0*x4682))+(((-1.0)*r01*x4679*x4692))+(((-0.216558867852667)*x4679*x4711))+(((0.18234135315471)*r01*x4679))+(((-1.0)*cj0*x4682*x4692)));
evalcond[3]=((((0.0648043305514941)*r20*x4689))+((x4690*x4710))+(((0.235073880801598)*r12*x4693))+((cj4*r12*x4686))+((x4709*x4725))+((x4680*x4681))+(((-1.0)*sj0*x4712))+(((-1.0)*sj0*x4710))+((sj3*x4704*x4705))+((r20*x4687*x4689))+((r11*x4703*x4704))+((sj0*x4730))+(((0.135720094919197)*x4688*x4703))+((r21*x4680*x4687))+((r20*x4680*x4718))+(((0.135720094919197)*x4693*x4719))+(((-1.0)*r11*x4694*x4714))+((x4683*x4719))+(((-1.0)*cj5*r10*x4725))+((cj3*x4688*x4694))+(((-1.0)*r21*x4689*x4718))+(((-1.0)*r12*x4686))+((x4683*x4705)));
evalcond[4]=(((x4683*x4696))+((x4682*x4683))+(((-1.0)*cj0*x4712))+(((-1.0)*cj0*x4710))+(((0.135720094919197)*x4682*x4693))+((sj3*x4682*x4704))+((cj0*x4730))+((x4720*x4725))+(((0.135720094919197)*x4693*x4696))+(((-1.0)*x4707*x4725))+(((0.135720094919197)*x4703*x4711))+((r21*x4679*x4687))+((r20*x4679*x4718))+(((-1.0)*r01*x4694*x4714))+(((-1.0)*r02*x4686))+((sj3*x4696*x4704))+(((0.235073880801598)*r02*x4693))+(((-1.0)*x4708*x4729))+(((0.0648043305514941)*cj0*x4691))+((x4679*x4681))+((x4686*x4697))+((cj0*x4687*x4691))+((x4702*x4710)));
evalcond[5]=((((-1.0)*x4680*x4684*x4693))+(((-1.0)*x4680*x4704*x4716))+(((-1.0)*sj0*x4727))+(((-1.0)*x4709*x4718))+(((0.0648043305514941)*x4705))+(((-1.0)*r22*x4686*x4690))+(((-1.0)*r21*x4689*x4725))+(((-1.0)*x4680*x4714*x4722))+((cj5*x4700))+((x4687*x4705))+((cj4*x4701))+(((-1.0)*x4678))+((x4686*x4713))+(((-1.0)*x4689*x4693*x4722))+(((-1.0)*r20*x4683*x4689))+(((-1.0)*r21*x4680*x4683))+(((-0.235073880801598)*x4693*x4713))+((r20*x4680*x4725))+((x4687*x4719))+((x4684*x4689*x4714))+(((-1.0)*x4701))+(((-1.0)*x4706))+(((0.0185150129489311)*cj5*x4688))+(((-1.0)*r20*sj3*x4689*x4704)));
evalcond[6]=((((-1.0)*x4679*x4704*x4716))+((cj0*sj5*x4684*x4714))+((x4682*x4687))+(((0.0160344678271334)*x4697))+(((0.0648043305514941)*x4682))+(((-0.27144)*cj3*r21*sj5*x4702))+(((0.0648043305514941)*x4696))+(((-1.0)*x4679*x4714*x4722))+(((-1.0)*cj0*x4683*x4691))+((x4686*x4717))+(((-1.0)*cj0*x4727))+(((-1.0)*r21*x4679*x4683))+((r20*x4679*x4725))+(((-0.235073880801598)*x4693*x4717))+(((-1.0)*x4718*x4720))+(((-1.0)*r22*x4686*x4702))+((x4707*x4718))+(((-1.0)*x4699))+(((-0.135720094919197)*cj0*x4691*x4693))+(((-0.0678600949192303)*sj3*x4691*x4702))+(((-1.0)*x4685))+(((-1.0)*x4679*x4684*x4693))+(((0.0098)*sj0))+((x4687*x4696)));
evalcond[7]=((((0.117537022603216)*x4728))+(((-0.0678600949192303)*cj0*r12))+(((-1.0)*r01*x4689*x4718))+((r01*x4680*x4687))+(((-1.0)*x4698*x4728))+(((0.0648043305514941)*sj0*x4682))+((x4690*x4699))+(((-0.20357990508077)*r12*x4702))+(((0.0648043305514941)*r01*x4680))+(((-1.0)*x4731))+(((-1.0)*cj4*x4679*x4695))+(((-1.0)*sj0*x4699))+(((0.235073880801598)*cj0*sj4*x4709))+(((0.0098)*x4676))+((sj0*x4682*x4687))+(((-1.0)*sj0*x4685))+((x4679*x4695))+(((-0.235073880801598)*x4679*x4688))+(((0.0185150129489311)*x4680*x4711)));
evalcond[8]=(((x4679*x4726))+((x4679*x4700))+((x4687*x4728))+(((-1.0)*cj0*x4706))+(((-1.0)*cj0*x4701))+(((-0.235073880801598)*x4680*x4711))+(((-0.0098)*x4677))+(((-1.0)*x4731))+(((-0.20357990508077)*r02*x4690))+(((-1.0)*r01*x4680*x4698))+(((0.235073880801598)*r01*x4724))+(((0.117537022603216)*sj0*x4682))+((x4701*x4702))+(((0.0185150129489311)*x4679*x4688))+(((-1.0)*cj0*x4709*x4718))+(((-0.0678600949192303)*r02*sj0))+(((0.117537022603216)*r01*x4680))+(((-0.117537022603216)*x4682*x4690))+(((0.0648043305514941)*x4728)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
IkReal j2eval[2];
j2eval[0]=cj0;
j2eval[1]=IKsign(cj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal j2eval[2];
j2eval[0]=sj0;
j2eval[1]=IKsign(sj0);
if( IKabs(j2eval[0]) < 0.0000010000000000  || IKabs(j2eval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[1];
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(j0))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4732=((0.250000349687704)*sj1);
IkReal x4733=(cj1*cj4);
IkReal x4734=((0.749999650312296)*r22);
IkReal x4735=(cj4*sj1);
IkReal x4736=((0.749999650312296)*r02);
IkReal x4737=((0.250000349687704)*cj1);
IkReal x4738=((0.433012903784321)*r00*sj5);
IkReal x4739=((0.433012903784321)*r20*sj5);
IkReal x4740=((0.433012903784321)*cj5*r01);
IkReal x4741=((0.433012903784321)*cj5*r21);
IkReal x4742=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4743=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4744=((0.866025201892125)*r01*sj4*sj5);
IkReal x4745=((0.866025201892125)*r21*sj4*sj5);
if( IKabs((((x4734*x4735))+((x4735*x4739))+(((-1.0)*sj1*x4739))+(((-1.0)*cj1*x4738))+(((-1.0)*sj1*x4745))+(((-1.0)*sj1*x4741))+((x4735*x4741))+((r00*x4743))+(((-1.0)*cj1*x4744))+(((-1.0)*cj1*x4740))+((r20*x4742))+((r02*x4737))+((x4733*x4736))+((x4733*x4738))+((r22*x4732))+((x4733*x4740)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x4735*x4736))+(((-1.0)*x4735*x4738))+(((-1.0)*cj1*x4739))+(((-1.0)*cj1*x4745))+(((-1.0)*cj1*x4741))+((r20*x4743))+((sj1*x4738))+(((-1.0)*r00*x4742))+((x4733*x4739))+((x4733*x4734))+((r22*x4737))+(((-1.0)*x4735*x4740))+((x4733*x4741))+((sj1*x4744))+((sj1*x4740))+(((-1.0)*r02*x4732)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((x4734*x4735))+((x4735*x4739))+(((-1.0)*sj1*x4739))+(((-1.0)*cj1*x4738))+(((-1.0)*sj1*x4745))+(((-1.0)*sj1*x4741))+((x4735*x4741))+((r00*x4743))+(((-1.0)*cj1*x4744))+(((-1.0)*cj1*x4740))+((r20*x4742))+((r02*x4737))+((x4733*x4736))+((x4733*x4738))+((r22*x4732))+((x4733*x4740))))+IKsqr(((((-1.0)*x4735*x4736))+(((-1.0)*x4735*x4738))+(((-1.0)*cj1*x4739))+(((-1.0)*cj1*x4745))+(((-1.0)*cj1*x4741))+((r20*x4743))+((sj1*x4738))+(((-1.0)*r00*x4742))+((x4733*x4739))+((x4733*x4734))+((r22*x4737))+(((-1.0)*x4735*x4740))+((x4733*x4741))+((sj1*x4744))+((sj1*x4740))+(((-1.0)*r02*x4732))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((x4734*x4735))+((x4735*x4739))+(((-1.0)*sj1*x4739))+(((-1.0)*cj1*x4738))+(((-1.0)*sj1*x4745))+(((-1.0)*sj1*x4741))+((x4735*x4741))+((r00*x4743))+(((-1.0)*cj1*x4744))+(((-1.0)*cj1*x4740))+((r20*x4742))+((r02*x4737))+((x4733*x4736))+((x4733*x4738))+((r22*x4732))+((x4733*x4740))), ((((-1.0)*x4735*x4736))+(((-1.0)*x4735*x4738))+(((-1.0)*cj1*x4739))+(((-1.0)*cj1*x4745))+(((-1.0)*cj1*x4741))+((r20*x4743))+((sj1*x4738))+(((-1.0)*r00*x4742))+((x4733*x4739))+((x4733*x4734))+((r22*x4737))+(((-1.0)*x4735*x4740))+((x4733*x4741))+((sj1*x4744))+((sj1*x4740))+(((-1.0)*r02*x4732))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4746=IKsin(j2);
IkReal x4747=IKcos(j2);
IkReal x4748=((0.749999650312296)*sj3);
IkReal x4749=(cj5*r01);
IkReal x4750=(r00*sj5);
IkReal x4751=(cj4*cj5);
IkReal x4752=((1.0)*cj3);
IkReal x4753=(r21*sj3);
IkReal x4754=(cj4*sj5);
IkReal x4755=(cj3*r21);
IkReal x4756=((0.500000349687582)*sj4);
IkReal x4757=((0.433012903784321)*r20);
IkReal x4758=(cj4*r22);
IkReal x4759=((0.433012903784321)*sj3);
IkReal x4760=((0.433012903784321)*cj4);
IkReal x4761=(r01*sj5);
IkReal x4762=(r20*sj5);
IkReal x4763=((0.0160344678271334)*r02);
IkReal x4764=(cj4*r02);
IkReal x4765=((0.00925751294893567)*cj4);
IkReal x4766=((0.0185150129489311)*sj4);
IkReal x4767=(r21*sj5);
IkReal x4768=(cj5*r21);
IkReal x4769=((0.866025201892125)*sj4);
IkReal x4770=(cj5*r20);
IkReal x4771=(cj5*r00);
IkReal x4772=((0.250000349687704)*sj3);
IkReal x4773=(cj1*x4747);
IkReal x4774=(sj1*x4746);
IkReal x4775=(cj1*x4746);
IkReal x4776=(sj1*x4747);
IkReal x4777=(x4774+x4773);
evalcond[0]=(((x4767*x4769))+(((-1.0)*x4754*x4757))+(((-1.0)*x4769*x4770))+(((-0.250000349687704)*r22))+(((-0.433012903784321)*r21*x4751))+((sj5*x4757))+(((0.433012903784321)*x4768))+x4777+(((-0.749999650312296)*x4758)));
evalcond[1]=((((-1.0)*x4776))+(((-0.250000349687704)*r02))+(((-1.0)*x4769*x4771))+x4775+(((-1.0)*x4749*x4760))+(((0.433012903784321)*x4749))+(((-1.0)*x4750*x4760))+(((-0.749999650312296)*x4764))+((x4761*x4769))+(((0.433012903784321)*x4750)));
evalcond[2]=((((0.0648043305514941)*x4762))+(((0.0648043305514941)*x4768))+(((0.41)*cj1))+((x4766*x4770))+(((-0.0160344678271334)*r22))+(((-0.27144)*x4773))+(((-0.27144)*x4774))+(((0.00925751294893567)*r20*x4754))+(((-1.0)*pz))+(((0.00925751294893567)*r21*x4751))+(((-1.0)*x4766*x4767))+(((0.0160344678271334)*x4758)));
evalcond[3]=((((-1.0)*x4763))+(((-1.0)*x4761*x4766))+((x4766*x4771))+(((-0.41)*sj1))+(((-0.27144)*x4775))+(((0.0648043305514941)*x4749))+(((-1.0)*px))+(((0.27144)*x4776))+((cj4*x4763))+((x4750*x4765))+(((0.0648043305514941)*x4750))+((x4749*x4765)));
evalcond[4]=((((-1.0)*r00*x4751*x4752))+(((-1.0)*sj3*x4756*x4761))+((cj3*r01*x4754))+((cj3*x4750*x4756))+((sj3*x4756*x4771))+((x4759*x4764))+((cj3*r02*x4769))+((cj4*x4750*x4772))+x4777+((x4748*x4749))+((x4748*x4750))+((cj3*x4749*x4756))+(((-1.0)*r02*x4759))+((cj4*x4749*x4772)));
evalcond[5]=((((-1.0)*x4775))+((x4758*x4759))+((r20*x4754*x4772))+((sj3*x4756*x4770))+((cj5*x4755*x4756))+((x4754*x4755))+(((-1.0)*r20*x4751*x4752))+x4776+(((-1.0)*r22*x4759))+((cj3*r22*x4769))+(((0.250000349687704)*x4751*x4753))+(((-1.0)*sj5*x4753*x4756))+((cj3*x4756*x4762))+((x4748*x4762))+((x4748*x4768)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-3.14159265358979)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4778=(r02*sj1);
IkReal x4779=(cj1*cj4);
IkReal x4780=((0.749999650312296)*r22);
IkReal x4781=(cj4*sj1);
IkReal x4782=((0.250000349687704)*r22);
IkReal x4783=((0.433012903784321)*r00*sj5);
IkReal x4784=((0.433012903784321)*r20*sj5);
IkReal x4785=((0.433012903784321)*cj5*r01);
IkReal x4786=((0.433012903784321)*cj5*r21);
IkReal x4787=((0.866025201892125)*cj5*sj1*sj4);
IkReal x4788=((0.866025201892125)*cj1*cj5*sj4);
IkReal x4789=((0.866025201892125)*r01*sj4*sj5);
IkReal x4790=((0.866025201892125)*r21*sj4*sj5);
if( IKabs(((((-1.0)*x4779*x4785))+(((-1.0)*x4779*x4783))+((x4780*x4781))+((cj1*x4785))+((cj1*x4789))+((cj1*x4783))+(((-0.749999650312296)*r02*x4779))+(((-1.0)*sj1*x4790))+(((-1.0)*sj1*x4784))+(((-1.0)*sj1*x4786))+(((-1.0)*r00*x4788))+((r20*x4787))+(((-0.250000349687704)*cj1*r02))+((sj1*x4782))+((x4781*x4786))+((x4781*x4784)))) < IKFAST_ATAN2_MAGTHRESH && IKabs((((cj1*x4782))+(((0.250000349687704)*x4778))+((x4779*x4780))+((x4779*x4784))+((x4779*x4786))+((r00*x4787))+(((-1.0)*sj1*x4785))+(((-1.0)*sj1*x4789))+(((-1.0)*sj1*x4783))+(((-1.0)*cj1*x4786))+(((-1.0)*cj1*x4784))+((r20*x4788))+(((-1.0)*cj1*x4790))+((x4781*x4783))+((x4781*x4785))+(((0.749999650312296)*cj4*x4778)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x4779*x4785))+(((-1.0)*x4779*x4783))+((x4780*x4781))+((cj1*x4785))+((cj1*x4789))+((cj1*x4783))+(((-0.749999650312296)*r02*x4779))+(((-1.0)*sj1*x4790))+(((-1.0)*sj1*x4784))+(((-1.0)*sj1*x4786))+(((-1.0)*r00*x4788))+((r20*x4787))+(((-0.250000349687704)*cj1*r02))+((sj1*x4782))+((x4781*x4786))+((x4781*x4784))))+IKsqr((((cj1*x4782))+(((0.250000349687704)*x4778))+((x4779*x4780))+((x4779*x4784))+((x4779*x4786))+((r00*x4787))+(((-1.0)*sj1*x4785))+(((-1.0)*sj1*x4789))+(((-1.0)*sj1*x4783))+(((-1.0)*cj1*x4786))+(((-1.0)*cj1*x4784))+((r20*x4788))+(((-1.0)*cj1*x4790))+((x4781*x4783))+((x4781*x4785))+(((0.749999650312296)*cj4*x4778))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x4779*x4785))+(((-1.0)*x4779*x4783))+((x4780*x4781))+((cj1*x4785))+((cj1*x4789))+((cj1*x4783))+(((-0.749999650312296)*r02*x4779))+(((-1.0)*sj1*x4790))+(((-1.0)*sj1*x4784))+(((-1.0)*sj1*x4786))+(((-1.0)*r00*x4788))+((r20*x4787))+(((-0.250000349687704)*cj1*r02))+((sj1*x4782))+((x4781*x4786))+((x4781*x4784))), (((cj1*x4782))+(((0.250000349687704)*x4778))+((x4779*x4780))+((x4779*x4784))+((x4779*x4786))+((r00*x4787))+(((-1.0)*sj1*x4785))+(((-1.0)*sj1*x4789))+(((-1.0)*sj1*x4783))+(((-1.0)*cj1*x4786))+(((-1.0)*cj1*x4784))+((r20*x4788))+(((-1.0)*cj1*x4790))+((x4781*x4783))+((x4781*x4785))+(((0.749999650312296)*cj4*x4778))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4791=IKcos(j2);
IkReal x4792=IKsin(j2);
IkReal x4793=((0.433012903784321)*sj3);
IkReal x4794=((0.749999650312296)*sj3);
IkReal x4795=(r00*sj5);
IkReal x4796=(cj4*cj5);
IkReal x4797=((1.0)*cj3);
IkReal x4798=(cj5*r01);
IkReal x4799=(r21*sj3);
IkReal x4800=(cj4*sj5);
IkReal x4801=(cj3*r21);
IkReal x4802=((0.500000349687582)*sj4);
IkReal x4803=((0.433012903784321)*r20);
IkReal x4804=(cj4*r22);
IkReal x4805=(r20*sj5);
IkReal x4806=((0.0160344678271334)*r02);
IkReal x4807=(cj4*r02);
IkReal x4808=(r01*sj5);
IkReal x4809=(cj5*r00);
IkReal x4810=((0.0185150129489311)*sj4);
IkReal x4811=(r21*sj5);
IkReal x4812=(cj5*r21);
IkReal x4813=((0.866025201892125)*sj4);
IkReal x4814=(cj5*r20);
IkReal x4815=((0.250000349687704)*sj3);
IkReal x4816=(sj1*x4791);
IkReal x4817=(cj1*x4791);
IkReal x4818=(sj1*x4792);
IkReal x4819=(cj1*x4792);
IkReal x4820=((1.0)*x4819);
evalcond[0]=((((-0.433012903784321)*r21*x4796))+(((-0.250000349687704)*r22))+((x4811*x4813))+(((-1.0)*x4800*x4803))+(((-0.749999650312296)*x4804))+(((-1.0)*x4813*x4814))+((sj5*x4803))+x4817+x4818+(((0.433012903784321)*x4812)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*x4820))+(((-1.0)*x4809*x4813))+((x4808*x4813))+(((-0.433012903784321)*r01*x4796))+(((-0.749999650312296)*x4807))+(((0.433012903784321)*x4798))+(((0.433012903784321)*x4795))+(((-0.433012903784321)*cj4*x4795))+x4816);
evalcond[2]=((((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((0.00925751294893567)*r21*x4796))+(((0.0648043305514941)*x4805))+(((-1.0)*pz))+((x4810*x4814))+(((-0.27144)*x4817))+(((-0.27144)*x4818))+(((0.00925751294893567)*r20*x4800))+(((0.0160344678271334)*x4804))+(((0.0648043305514941)*x4812))+(((-1.0)*x4810*x4811)));
evalcond[3]=((((-1.0)*x4808*x4810))+(((0.27144)*x4819))+((x4809*x4810))+(((0.41)*sj1))+(((-1.0)*px))+(((0.0648043305514941)*x4795))+(((0.0648043305514941)*x4798))+(((-0.27144)*x4816))+(((0.00925751294893567)*r01*x4796))+((cj4*x4806))+(((-1.0)*x4806))+(((0.00925751294893567)*cj4*x4795)));
evalcond[4]=((((-1.0)*x4820))+((cj3*r22*x4813))+((sj3*x4802*x4814))+((x4794*x4812))+((x4800*x4801))+((r20*x4800*x4815))+(((-1.0)*r22*x4793))+((cj5*x4801*x4802))+(((0.250000349687704)*x4796*x4799))+((cj3*x4802*x4805))+(((-1.0)*sj5*x4799*x4802))+(((-1.0)*r20*x4796*x4797))+((x4793*x4804))+((x4794*x4805))+x4816);
evalcond[5]=(((cj3*x4795*x4802))+(((-1.0)*r02*x4793))+(((-1.0)*x4818))+(((-1.0)*x4817))+((cj3*x4798*x4802))+((r01*x4796*x4815))+((cj3*r02*x4813))+(((-1.0)*r00*x4796*x4797))+((sj3*x4802*x4809))+(((-1.0)*sj3*x4802*x4808))+((cj4*x4795*x4815))+((x4794*x4798))+((x4794*x4795))+((cj3*r01*x4800))+((x4793*x4807)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((-1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4821=((0.250000349687704)*r12);
IkReal x4822=((0.749999650312296)*cj4);
IkReal x4823=((0.433012903784321)*sj5);
IkReal x4824=(cj1*r10);
IkReal x4825=(cj1*r22);
IkReal x4826=(cj1*r20);
IkReal x4827=((0.866025201892125)*sj4);
IkReal x4828=(r20*sj1);
IkReal x4829=(r22*sj1);
IkReal x4830=(r10*sj1);
IkReal x4831=(r11*sj1);
IkReal x4832=((0.433012903784321)*cj5);
IkReal x4833=(r21*sj1);
IkReal x4834=(cj1*r21);
IkReal x4835=(cj1*r11);
IkReal x4836=(cj5*sj1*x4827);
IkReal x4837=(cj4*r21*x4832);
if( IKabs(((((-1.0)*x4832*x4835))+(((-1.0)*x4832*x4833))+((cj5*x4824*x4827))+((cj4*x4823*x4828))+((cj4*x4823*x4824))+(((0.250000349687704)*x4829))+(((-1.0)*x4823*x4828))+(((-1.0)*x4823*x4824))+((x4822*x4829))+((cj5*x4827*x4828))+((cj1*x4821))+((cj1*r12*x4822))+(((-1.0)*sj5*x4827*x4833))+(((-1.0)*sj5*x4827*x4835))+((cj4*x4832*x4833))+((cj4*x4832*x4835)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((-1.0)*x4832*x4834))+((cj4*x4823*x4826))+(((-1.0)*r12*sj1*x4822))+(((0.250000349687704)*x4825))+((x4823*x4830))+(((-1.0)*x4823*x4826))+((cj5*x4826*x4827))+((x4822*x4825))+((sj5*x4827*x4831))+(((-1.0)*cj4*x4831*x4832))+(((-1.0)*sj1*x4821))+(((-1.0)*cj5*x4827*x4830))+(((-1.0)*cj4*x4823*x4830))+(((-1.0)*sj5*x4827*x4834))+((x4831*x4832))+((cj4*x4832*x4834)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((-1.0)*x4832*x4835))+(((-1.0)*x4832*x4833))+((cj5*x4824*x4827))+((cj4*x4823*x4828))+((cj4*x4823*x4824))+(((0.250000349687704)*x4829))+(((-1.0)*x4823*x4828))+(((-1.0)*x4823*x4824))+((x4822*x4829))+((cj5*x4827*x4828))+((cj1*x4821))+((cj1*r12*x4822))+(((-1.0)*sj5*x4827*x4833))+(((-1.0)*sj5*x4827*x4835))+((cj4*x4832*x4833))+((cj4*x4832*x4835))))+IKsqr(((((-1.0)*x4832*x4834))+((cj4*x4823*x4826))+(((-1.0)*r12*sj1*x4822))+(((0.250000349687704)*x4825))+((x4823*x4830))+(((-1.0)*x4823*x4826))+((cj5*x4826*x4827))+((x4822*x4825))+((sj5*x4827*x4831))+(((-1.0)*cj4*x4831*x4832))+(((-1.0)*sj1*x4821))+(((-1.0)*cj5*x4827*x4830))+(((-1.0)*cj4*x4823*x4830))+(((-1.0)*sj5*x4827*x4834))+((x4831*x4832))+((cj4*x4832*x4834))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((-1.0)*x4832*x4835))+(((-1.0)*x4832*x4833))+((cj5*x4824*x4827))+((cj4*x4823*x4828))+((cj4*x4823*x4824))+(((0.250000349687704)*x4829))+(((-1.0)*x4823*x4828))+(((-1.0)*x4823*x4824))+((x4822*x4829))+((cj5*x4827*x4828))+((cj1*x4821))+((cj1*r12*x4822))+(((-1.0)*sj5*x4827*x4833))+(((-1.0)*sj5*x4827*x4835))+((cj4*x4832*x4833))+((cj4*x4832*x4835))), ((((-1.0)*x4832*x4834))+((cj4*x4823*x4826))+(((-1.0)*r12*sj1*x4822))+(((0.250000349687704)*x4825))+((x4823*x4830))+(((-1.0)*x4823*x4826))+((cj5*x4826*x4827))+((x4822*x4825))+((sj5*x4827*x4831))+(((-1.0)*cj4*x4831*x4832))+(((-1.0)*sj1*x4821))+(((-1.0)*cj5*x4827*x4830))+(((-1.0)*cj4*x4823*x4830))+(((-1.0)*sj5*x4827*x4834))+((x4831*x4832))+((cj4*x4832*x4834))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4838=IKsin(j2);
IkReal x4839=IKcos(j2);
IkReal x4840=(cj5*r11);
IkReal x4841=((0.433012903784321)*cj4);
IkReal x4842=(r21*sj5);
IkReal x4843=((0.500000349687582)*sj4);
IkReal x4844=((0.749999650312296)*sj3);
IkReal x4845=(cj3*cj4);
IkReal x4846=(cj5*r10);
IkReal x4847=((0.0185150129489311)*sj4);
IkReal x4848=(r20*sj5);
IkReal x4849=(cj4*r22);
IkReal x4850=(r10*sj5);
IkReal x4851=(r22*sj3);
IkReal x4852=(r11*sj5);
IkReal x4853=((0.00925751294893567)*cj4);
IkReal x4854=(cj5*r21);
IkReal x4855=(r12*sj3);
IkReal x4856=(cj4*r12);
IkReal x4857=(cj5*r20);
IkReal x4858=((0.866025201892125)*sj4);
IkReal x4859=(cj1*x4839);
IkReal x4860=(sj1*x4838);
IkReal x4861=(cj1*x4838);
IkReal x4862=((0.250000349687704)*cj4*sj3);
IkReal x4863=(sj1*x4839);
IkReal x4864=(cj3*x4858);
IkReal x4865=(x4859+x4860);
evalcond[0]=((((-1.0)*x4841*x4848))+(((-0.250000349687704)*r22))+(((-0.749999650312296)*x4849))+(((0.433012903784321)*x4848))+(((-1.0)*x4857*x4858))+(((0.433012903784321)*x4854))+((x4842*x4858))+(((-1.0)*x4841*x4854))+x4865);
evalcond[1]=((((-0.250000349687704)*r12))+(((-1.0)*x4840*x4841))+(((0.433012903784321)*x4840))+(((-1.0)*x4863))+(((-0.749999650312296)*x4856))+(((0.433012903784321)*x4850))+(((-1.0)*x4846*x4858))+((x4852*x4858))+(((-1.0)*x4841*x4850))+x4861);
evalcond[2]=(((x4853*x4854))+(((-1.0)*x4842*x4847))+(((0.0648043305514941)*x4848))+((x4848*x4853))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+(((-0.27144)*x4859))+(((-0.27144)*x4860))+(((-1.0)*pz))+(((0.0648043305514941)*x4854))+(((0.0160344678271334)*x4849))+((x4847*x4857)));
evalcond[3]=((((-1.0)*x4847*x4852))+((x4840*x4853))+(((0.0160344678271334)*x4856))+(((0.0648043305514941)*x4840))+(((0.27144)*x4863))+(((-0.0160344678271334)*r12))+(((-0.41)*sj1))+(((-0.27144)*x4861))+(((-1.0)*py))+((x4846*x4847))+(((0.0648043305514941)*x4850))+((x4850*x4853)));
evalcond[4]=((((-1.0)*x4845*x4846))+((r12*x4864))+((x4840*x4844))+(((-1.0)*sj3*x4843*x4852))+((cj3*x4840*x4843))+(((-0.433012903784321)*x4855))+((sj3*x4843*x4846))+((x4845*x4852))+((x4841*x4855))+((x4850*x4862))+((x4844*x4850))+((cj3*x4843*x4850))+x4865+((x4840*x4862)));
evalcond[5]=(((x4854*x4862))+((x4848*x4862))+((x4842*x4845))+((r22*x4864))+((sj3*x4843*x4857))+(((-1.0)*sj3*x4842*x4843))+((cj3*x4843*x4848))+((x4844*x4848))+(((-1.0)*x4845*x4857))+(((-1.0)*x4861))+(((-0.433012903784321)*x4851))+((x4841*x4851))+((x4844*x4854))+((cj3*x4843*x4854))+x4863);
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
evalcond[0]=((-3.14159265358979)+(IKfmod(((3.14159265358979)+(IKabs(((1.5707963267949)+j0)))), 6.28318530717959)));
if( IKabs(evalcond[0]) < 0.0000050000000000  )
{
bgotonextstatement=false;
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4866=((0.250000349687704)*r12);
IkReal x4867=((0.749999650312296)*cj4);
IkReal x4868=(cj1*r22);
IkReal x4869=((0.866025201892125)*sj4);
IkReal x4870=(cj1*r20);
IkReal x4871=(sj1*sj5);
IkReal x4872=((0.433012903784321)*r20);
IkReal x4873=((0.433012903784321)*sj5);
IkReal x4874=(cj1*r10);
IkReal x4875=(r22*sj1);
IkReal x4876=((0.433012903784321)*r10);
IkReal x4877=((0.433012903784321)*cj5);
IkReal x4878=(cj1*r21);
IkReal x4879=(cj1*r11);
IkReal x4880=(r11*sj1);
IkReal x4881=(cj1*cj4*x4873);
IkReal x4882=(cj5*sj1*x4869);
IkReal x4883=(cj4*r21*x4877);
if( IKabs((((cj4*x4871*x4872))+(((-1.0)*cj1*r12*x4867))+((x4877*x4879))+(((-1.0)*r21*x4869*x4871))+(((-1.0)*r21*sj1*x4877))+(((-1.0)*cj4*x4873*x4874))+((x4867*x4875))+((r20*x4882))+(((-1.0)*cj4*x4877*x4879))+((x4873*x4874))+(((-1.0)*x4871*x4872))+(((0.250000349687704)*x4875))+((sj1*x4883))+(((-1.0)*cj1*x4866))+((sj5*x4869*x4879))+(((-1.0)*cj5*x4869*x4874)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((0.250000349687704)*x4868))+(((-1.0)*x4877*x4880))+((cj4*x4871*x4876))+((cj4*x4870*x4873))+((x4867*x4868))+((cj4*x4877*x4878))+(((-1.0)*r11*x4869*x4871))+((r12*sj1*x4867))+(((-1.0)*sj5*x4869*x4878))+((cj4*x4877*x4880))+((cj5*x4869*x4870))+(((-1.0)*x4871*x4876))+(((-1.0)*x4870*x4873))+((r10*x4882))+((sj1*x4866))+(((-1.0)*x4877*x4878)))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr((((cj4*x4871*x4872))+(((-1.0)*cj1*r12*x4867))+((x4877*x4879))+(((-1.0)*r21*x4869*x4871))+(((-1.0)*r21*sj1*x4877))+(((-1.0)*cj4*x4873*x4874))+((x4867*x4875))+((r20*x4882))+(((-1.0)*cj4*x4877*x4879))+((x4873*x4874))+(((-1.0)*x4871*x4872))+(((0.250000349687704)*x4875))+((sj1*x4883))+(((-1.0)*cj1*x4866))+((sj5*x4869*x4879))+(((-1.0)*cj5*x4869*x4874))))+IKsqr(((((0.250000349687704)*x4868))+(((-1.0)*x4877*x4880))+((cj4*x4871*x4876))+((cj4*x4870*x4873))+((x4867*x4868))+((cj4*x4877*x4878))+(((-1.0)*r11*x4869*x4871))+((r12*sj1*x4867))+(((-1.0)*sj5*x4869*x4878))+((cj4*x4877*x4880))+((cj5*x4869*x4870))+(((-1.0)*x4871*x4876))+(((-1.0)*x4870*x4873))+((r10*x4882))+((sj1*x4866))+(((-1.0)*x4877*x4878))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2((((cj4*x4871*x4872))+(((-1.0)*cj1*r12*x4867))+((x4877*x4879))+(((-1.0)*r21*x4869*x4871))+(((-1.0)*r21*sj1*x4877))+(((-1.0)*cj4*x4873*x4874))+((x4867*x4875))+((r20*x4882))+(((-1.0)*cj4*x4877*x4879))+((x4873*x4874))+(((-1.0)*x4871*x4872))+(((0.250000349687704)*x4875))+((sj1*x4883))+(((-1.0)*cj1*x4866))+((sj5*x4869*x4879))+(((-1.0)*cj5*x4869*x4874))), ((((0.250000349687704)*x4868))+(((-1.0)*x4877*x4880))+((cj4*x4871*x4876))+((cj4*x4870*x4873))+((x4867*x4868))+((cj4*x4877*x4878))+(((-1.0)*r11*x4869*x4871))+((r12*sj1*x4867))+(((-1.0)*sj5*x4869*x4878))+((cj4*x4877*x4880))+((cj5*x4869*x4870))+(((-1.0)*x4871*x4876))+(((-1.0)*x4870*x4873))+((r10*x4882))+((sj1*x4866))+(((-1.0)*x4877*x4878))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[6];
IkReal x4884=IKcos(j2);
IkReal x4885=IKsin(j2);
IkReal x4886=(cj5*r11);
IkReal x4887=((0.433012903784321)*cj4);
IkReal x4888=(r21*sj5);
IkReal x4889=((0.500000349687582)*sj4);
IkReal x4890=((0.749999650312296)*sj3);
IkReal x4891=(cj3*cj4);
IkReal x4892=(cj5*r10);
IkReal x4893=((0.0185150129489311)*sj4);
IkReal x4894=(r20*sj5);
IkReal x4895=(cj4*r22);
IkReal x4896=(r10*sj5);
IkReal x4897=(r12*sj3);
IkReal x4898=(r11*sj5);
IkReal x4899=(r22*sj3);
IkReal x4900=((0.27144)*sj1);
IkReal x4901=((0.00925751294893567)*cj4);
IkReal x4902=(cj5*r20);
IkReal x4903=(cj5*r21);
IkReal x4904=(cj4*r12);
IkReal x4905=((0.866025201892125)*sj4);
IkReal x4906=(sj1*x4884);
IkReal x4907=(cj1*x4884);
IkReal x4908=(cj1*x4885);
IkReal x4909=((0.250000349687704)*cj4*sj3);
IkReal x4910=(cj3*x4905);
IkReal x4911=(sj1*x4885);
IkReal x4912=((1.0)*x4908);
evalcond[0]=(x4911+x4907+(((-0.250000349687704)*r22))+(((-1.0)*x4902*x4905))+(((0.433012903784321)*x4894))+((x4888*x4905))+(((0.433012903784321)*x4903))+(((-1.0)*x4887*x4894))+(((-0.749999650312296)*x4895))+(((-1.0)*x4887*x4903)));
evalcond[1]=(x4906+(((-0.250000349687704)*r12))+(((-1.0)*x4912))+(((-0.749999650312296)*x4904))+(((0.433012903784321)*x4896))+(((0.433012903784321)*x4886))+(((-1.0)*x4892*x4905))+(((-1.0)*x4887*x4896))+(((-1.0)*x4886*x4887))+((x4898*x4905)));
evalcond[2]=((((0.0648043305514941)*x4894))+(((-1.0)*x4888*x4893))+(((0.41)*cj1))+(((-0.0160344678271334)*r22))+((x4901*x4903))+((x4894*x4901))+(((-1.0)*pz))+((x4893*x4902))+(((-0.27144)*x4907))+(((0.0160344678271334)*x4895))+(((0.0648043305514941)*x4903))+(((-1.0)*x4885*x4900)));
evalcond[3]=((((0.0648043305514941)*x4896))+(((0.0648043305514941)*x4886))+((x4896*x4901))+((x4886*x4901))+((x4892*x4893))+(((-0.0160344678271334)*r12))+(((0.41)*sj1))+(((-1.0)*x4893*x4898))+(((-1.0)*py))+(((0.0160344678271334)*x4904))+(((0.27144)*x4908))+(((-1.0)*x4884*x4900)));
evalcond[4]=(((x4887*x4899))+x4906+(((-0.433012903784321)*x4899))+((sj3*x4889*x4902))+((x4890*x4894))+((cj3*x4889*x4903))+(((-1.0)*x4912))+((x4903*x4909))+((x4894*x4909))+((x4888*x4891))+((cj3*x4889*x4894))+((x4890*x4903))+(((-1.0)*sj3*x4888*x4889))+(((-1.0)*x4891*x4902))+((r22*x4910)));
evalcond[5]=(((x4887*x4897))+(((-0.433012903784321)*x4897))+((x4890*x4896))+((x4896*x4909))+((x4886*x4909))+(((-1.0)*x4911))+(((-1.0)*x4907))+((x4891*x4898))+(((-1.0)*x4891*x4892))+((r12*x4910))+((cj3*x4889*x4896))+((cj3*x4886*x4889))+((sj3*x4889*x4892))+((x4886*x4890))+(((-1.0)*sj3*x4889*x4898)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}
} while(0);
if( bgotonextstatement )
{
bool bgotonextstatement = true;
do
{
if( 1 )
{
bgotonextstatement=false;
continue; // branch miss [j2]

}
} while(0);
if( bgotonextstatement )
{
}
}
}
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4913=(cj4*sj1);
IkReal x4914=((0.433012903784321)*sj0);
IkReal x4915=(cj5*r21);
IkReal x4916=(cj1*r12);
IkReal x4917=(r20*sj5);
IkReal x4918=(r20*sj0);
IkReal x4919=(r10*sj1);
IkReal x4920=((0.749999650312296)*cj4);
IkReal x4921=(r21*sj0);
IkReal x4922=((0.433012903784321)*sj5);
IkReal x4923=(cj1*cj4);
IkReal x4924=(r22*sj0);
IkReal x4925=((0.250000349687704)*x4924);
IkReal x4926=((0.866025201892125)*cj5*sj4);
IkReal x4927=((0.433012903784321)*cj5*r11);
IkReal x4928=(cj1*r10*x4922);
IkReal x4929=((0.866025201892125)*sj1*sj4*sj5);
IkReal x4930=((0.866025201892125)*cj1*sj4*sj5);
CheckValue<IkReal> x4931=IKPowWithIntegerCheck(IKsign(sj0),-1);
if(!x4931.valid){
continue;
}
CheckValue<IkReal> x4932 = IKatan2WithCheck(IkReal((((r10*x4922*x4923))+((cj1*r10*x4926))+((x4923*x4927))+(((-1.0)*sj1*x4914*x4917))+(((-1.0)*sj1*x4914*x4915))+((x4913*x4914*x4915))+((x4913*x4914*x4917))+(((0.250000349687704)*x4916))+(((-1.0)*cj1*x4927))+((sj1*x4918*x4926))+(((-1.0)*x4921*x4929))+(((-1.0)*r11*x4930))+(((0.749999650312296)*x4913*x4924))+(((-1.0)*x4928))+((sj1*x4925))+((x4916*x4920)))),IkReal(((((-0.749999650312296)*r12*x4913))+((x4919*x4922))+(((-0.250000349687704)*r12*sj1))+(((-1.0)*cj1*x4914*x4915))+(((-1.0)*cj1*x4914*x4917))+(((-1.0)*r10*x4913*x4922))+(((-1.0)*x4919*x4926))+((cj1*x4918*x4926))+((cj1*x4920*x4924))+(((-1.0)*x4913*x4927))+(((-1.0)*x4921*x4930))+((x4914*x4917*x4923))+((r11*x4929))+((x4914*x4915*x4923))+((sj1*x4927))+((cj1*x4925)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4932.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(((1.5707963267949)*(x4931.value)))+(x4932.value));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x4933=IKsin(j2);
IkReal x4934=IKcos(j2);
IkReal x4935=(cj4*sj5);
IkReal x4936=(cj3*r21);
IkReal x4937=((0.433012903784321)*r20);
IkReal x4938=((0.749999650312296)*cj4);
IkReal x4939=(cj4*cj5);
IkReal x4940=((1.0)*cj3);
IkReal x4941=((0.433012903784321)*r01);
IkReal x4942=(sj4*sj5);
IkReal x4943=((0.749999650312296)*sj3);
IkReal x4944=(r10*sj5);
IkReal x4945=((0.500000349687582)*sj3);
IkReal x4946=(cj0*sj1);
IkReal x4947=((0.500000349687582)*cj3);
IkReal x4948=((0.0160344678271334)*r22);
IkReal x4949=(r20*sj3);
IkReal x4950=(r00*sj5);
IkReal x4951=(cj3*r11);
IkReal x4952=((0.0160344678271334)*r12);
IkReal x4953=((0.433012903784321)*r11);
IkReal x4954=(cj5*r11);
IkReal x4955=(r10*sj3);
IkReal x4956=(r00*sj3);
IkReal x4957=((0.433012903784321)*sj3);
IkReal x4958=(cj5*sj4);
IkReal x4959=(r20*sj5);
IkReal x4960=((0.433012903784321)*r21);
IkReal x4961=(sj0*sj1);
IkReal x4962=(cj3*r01);
IkReal x4963=(cj5*r21);
IkReal x4964=((0.0160344678271334)*r02);
IkReal x4965=(cj5*r01);
IkReal x4966=((0.250000349687704)*sj3);
IkReal x4967=(cj1*x4933);
IkReal x4968=((0.500000349687582)*x4958);
IkReal x4969=((0.27144)*x4934);
IkReal x4970=(cj4*x4957);
IkReal x4971=(sj1*x4933);
IkReal x4972=((0.866025201892125)*cj3*sj4);
IkReal x4973=(cj1*x4934);
IkReal x4974=((1.0)*x4934);
evalcond[0]=(x4971+x4973+(((0.866025201892125)*r21*x4942))+(((-0.250000349687704)*r22))+(((-1.0)*x4935*x4937))+(((-1.0)*x4939*x4960))+((sj5*x4937))+(((-1.0)*r22*x4938))+((cj5*x4960))+(((-0.866025201892125)*r20*x4958)));
evalcond[1]=((((-0.250000349687704)*r02))+(((-1.0)*r02*x4938))+(((-1.0)*x4939*x4941))+(((-1.0)*x4946*x4974))+(((0.433012903784321)*x4950))+((cj5*x4941))+(((-0.433012903784321)*r00*x4935))+(((0.866025201892125)*r01*x4942))+((cj0*x4967))+(((-0.866025201892125)*r00*x4958)));
evalcond[2]=((((-0.250000349687704)*r12))+(((-1.0)*x4939*x4953))+((sj0*x4967))+(((0.433012903784321)*x4944))+(((-0.433012903784321)*r10*x4935))+(((-1.0)*x4961*x4974))+(((-0.866025201892125)*r10*x4958))+(((-1.0)*r12*x4938))+(((0.866025201892125)*r11*x4942))+((cj5*x4953)));
evalcond[3]=((((-0.0185150129489311)*r21*x4942))+(((0.41)*cj1))+(((-1.0)*x4948))+(((-0.27144)*x4971))+(((-1.0)*pz))+((cj4*x4948))+(((0.0185150129489311)*r20*x4958))+(((0.00925751294893567)*r21*x4939))+(((0.0648043305514941)*x4959))+(((0.00925751294893567)*r20*x4935))+(((0.0648043305514941)*x4963))+(((-1.0)*cj1*x4969)));
evalcond[4]=((((0.00925751294893567)*r01*x4939))+(((0.00925751294893567)*r00*x4935))+(((-1.0)*x4964))+(((-1.0)*px))+((x4946*x4969))+(((-0.0185150129489311)*r01*x4942))+((cj4*x4964))+(((0.0185150129489311)*r00*x4958))+(((0.0098)*sj0))+(((0.0648043305514941)*x4950))+(((-0.41)*x4946))+(((0.0648043305514941)*x4965))+(((-0.27144)*cj0*x4967)));
evalcond[5]=((((-0.41)*x4961))+((x4961*x4969))+(((-0.27144)*sj0*x4967))+(((0.00925751294893567)*r10*x4935))+(((-1.0)*x4952))+(((-1.0)*py))+((cj4*x4952))+(((0.0648043305514941)*x4944))+(((0.0185150129489311)*r10*x4958))+(((-0.0185150129489311)*r11*x4942))+(((-0.0098)*cj0))+(((0.00925751294893567)*r11*x4939))+(((0.0648043305514941)*x4954)));
evalcond[6]=(((x4935*x4936))+(((0.250000349687704)*x4935*x4949))+(((-1.0)*r21*x4942*x4945))+((r22*x4970))+((r22*x4972))+(((-1.0)*r20*x4939*x4940))+((r20*x4942*x4947))+((x4943*x4963))+(((-1.0)*r22*x4957))+((x4943*x4959))+((r21*x4939*x4966))+(((-1.0)*x4967))+((x4936*x4968))+((sj1*x4934))+((r20*x4945*x4958)));
evalcond[7]=((((0.250000349687704)*x4935*x4956))+(((-1.0)*r00*x4939*x4940))+((r01*x4947*x4958))+((x4943*x4965))+((r00*x4945*x4958))+((x4943*x4950))+(((-1.0)*r02*x4957))+((r02*x4970))+((r02*x4972))+(((-1.0)*r01*x4942*x4945))+((x4935*x4962))+((x4933*x4946))+((r01*x4939*x4966))+((r00*x4942*x4947))+((cj0*x4973)));
evalcond[8]=(((sj4*x4947*x4954))+(((0.250000349687704)*x4935*x4955))+((r10*x4942*x4947))+(((-1.0)*r11*x4942*x4945))+((sj0*x4973))+((r12*x4970))+((r12*x4972))+((x4943*x4944))+((x4943*x4954))+(((-1.0)*r10*x4939*x4940))+((x4933*x4961))+(((-1.0)*r12*x4957))+((r11*x4939*x4966))+((r10*x4945*x4958))+((x4935*x4951)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x4975=(cj0*r20);
IkReal x4976=(cj1*r00);
IkReal x4977=(r02*sj1);
IkReal x4978=(r00*sj1);
IkReal x4979=((0.433012903784321)*sj5);
IkReal x4980=(cj4*sj1);
IkReal x4981=((0.749999650312296)*cj4);
IkReal x4982=(cj0*r22);
IkReal x4983=(r01*sj1);
IkReal x4984=(cj1*cj4);
IkReal x4985=(cj0*r21);
IkReal x4986=(cj1*r02);
IkReal x4987=((0.866025201892125)*cj5*sj4);
IkReal x4988=((0.866025201892125)*sj4*sj5);
IkReal x4989=((0.433012903784321)*cj5*r01);
IkReal x4990=((0.433012903784321)*cj5*x4985);
CheckValue<IkReal> x4991 = IKatan2WithCheck(IkReal(((((-1.0)*cj1*x4989))+(((0.749999650312296)*x4980*x4982))+(((0.250000349687704)*sj1*x4982))+((x4984*x4989))+(((-1.0)*cj1*r01*x4988))+(((0.250000349687704)*x4986))+(((-1.0)*sj1*x4990))+((x4976*x4987))+(((-1.0)*x4976*x4979))+((sj1*x4975*x4987))+(((-1.0)*sj1*x4975*x4979))+(((-1.0)*sj1*x4985*x4988))+((cj4*x4976*x4979))+((x4980*x4990))+((x4981*x4986))+((x4975*x4979*x4980)))),IkReal(((((-1.0)*x4977*x4981))+(((0.250000349687704)*cj1*x4982))+(((0.433012903784321)*cj5*x4983))+(((-1.0)*cj4*x4978*x4979))+((cj1*x4981*x4982))+(((-0.250000349687704)*x4977))+((x4984*x4990))+(((-1.0)*x4978*x4987))+(((-1.0)*x4980*x4989))+((x4978*x4979))+((cj1*x4975*x4987))+(((-1.0)*cj1*x4990))+(((-1.0)*cj1*x4985*x4988))+((x4975*x4979*x4984))+((x4983*x4988))+(((-1.0)*cj1*x4975*x4979)))),IKFAST_ATAN2_MAGTHRESH);
if(!x4991.valid){
continue;
}
CheckValue<IkReal> x4992=IKPowWithIntegerCheck(IKsign(cj0),-1);
if(!x4992.valid){
continue;
}
j2array[0]=((-1.5707963267949)+(x4991.value)+(((1.5707963267949)*(x4992.value))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[9];
IkReal x4993=IKsin(j2);
IkReal x4994=IKcos(j2);
IkReal x4995=(cj4*sj5);
IkReal x4996=(cj3*r21);
IkReal x4997=((0.433012903784321)*r20);
IkReal x4998=((0.749999650312296)*cj4);
IkReal x4999=(cj4*cj5);
IkReal x5000=((1.0)*cj3);
IkReal x5001=((0.433012903784321)*r01);
IkReal x5002=(sj4*sj5);
IkReal x5003=((0.749999650312296)*sj3);
IkReal x5004=(r10*sj5);
IkReal x5005=((0.500000349687582)*sj3);
IkReal x5006=(cj0*sj1);
IkReal x5007=((0.500000349687582)*cj3);
IkReal x5008=((0.0160344678271334)*r22);
IkReal x5009=(r20*sj3);
IkReal x5010=(r00*sj5);
IkReal x5011=(cj3*r11);
IkReal x5012=((0.0160344678271334)*r12);
IkReal x5013=((0.433012903784321)*r11);
IkReal x5014=(cj5*r11);
IkReal x5015=(r10*sj3);
IkReal x5016=(r00*sj3);
IkReal x5017=((0.433012903784321)*sj3);
IkReal x5018=(cj5*sj4);
IkReal x5019=(r20*sj5);
IkReal x5020=((0.433012903784321)*r21);
IkReal x5021=(sj0*sj1);
IkReal x5022=(cj3*r01);
IkReal x5023=(cj5*r21);
IkReal x5024=((0.0160344678271334)*r02);
IkReal x5025=(cj5*r01);
IkReal x5026=((0.250000349687704)*sj3);
IkReal x5027=(cj1*x4993);
IkReal x5028=((0.500000349687582)*x5018);
IkReal x5029=((0.27144)*x4994);
IkReal x5030=(cj4*x5017);
IkReal x5031=(sj1*x4993);
IkReal x5032=((0.866025201892125)*cj3*sj4);
IkReal x5033=(cj1*x4994);
IkReal x5034=((1.0)*x4994);
evalcond[0]=(((sj5*x4997))+((cj5*x5020))+(((-1.0)*r22*x4998))+(((-0.250000349687704)*r22))+(((-0.866025201892125)*r20*x5018))+(((0.866025201892125)*r21*x5002))+x5033+x5031+(((-1.0)*x4995*x4997))+(((-1.0)*x4999*x5020)));
evalcond[1]=(((cj0*x5027))+(((-0.250000349687704)*r02))+(((-1.0)*x5006*x5034))+((cj5*x5001))+(((0.866025201892125)*r01*x5002))+(((-1.0)*r02*x4998))+(((0.433012903784321)*x5010))+(((-0.866025201892125)*r00*x5018))+(((-1.0)*x4999*x5001))+(((-0.433012903784321)*r00*x4995)));
evalcond[2]=((((-0.250000349687704)*r12))+(((-0.433012903784321)*r10*x4995))+(((-0.866025201892125)*r10*x5018))+(((-1.0)*r12*x4998))+((sj0*x5027))+(((-1.0)*x5021*x5034))+(((0.866025201892125)*r11*x5002))+(((0.433012903784321)*x5004))+(((-1.0)*x4999*x5013))+((cj5*x5013)));
evalcond[3]=((((0.00925751294893567)*r20*x4995))+(((0.00925751294893567)*r21*x4999))+((cj4*x5008))+(((0.41)*cj1))+(((-1.0)*pz))+(((-1.0)*cj1*x5029))+(((-0.0185150129489311)*r21*x5002))+(((0.0185150129489311)*r20*x5018))+(((-0.27144)*x5031))+(((0.0648043305514941)*x5019))+(((0.0648043305514941)*x5023))+(((-1.0)*x5008)));
evalcond[4]=(((cj4*x5024))+(((-0.41)*x5006))+(((-0.0185150129489311)*r01*x5002))+(((0.00925751294893567)*r00*x4995))+(((0.00925751294893567)*r01*x4999))+(((-1.0)*px))+(((0.0648043305514941)*x5010))+((x5006*x5029))+(((-1.0)*x5024))+(((-0.27144)*cj0*x5027))+(((0.0098)*sj0))+(((0.0648043305514941)*x5025))+(((0.0185150129489311)*r00*x5018)));
evalcond[5]=((((0.0648043305514941)*x5004))+(((-0.41)*x5021))+(((-0.0185150129489311)*r11*x5002))+(((0.0185150129489311)*r10*x5018))+((x5021*x5029))+(((-0.27144)*sj0*x5027))+(((0.00925751294893567)*r10*x4995))+(((-1.0)*py))+(((0.00925751294893567)*r11*x4999))+(((0.0648043305514941)*x5014))+(((-0.0098)*cj0))+((cj4*x5012))+(((-1.0)*x5012)));
evalcond[6]=(((x4995*x4996))+(((-1.0)*r20*x4999*x5000))+(((0.250000349687704)*x4995*x5009))+((r20*x5005*x5018))+((x5003*x5023))+(((-1.0)*r21*x5002*x5005))+((sj1*x4994))+(((-1.0)*x5027))+((r20*x5002*x5007))+(((-1.0)*r22*x5017))+((x5003*x5019))+((r22*x5032))+((r22*x5030))+((r21*x4999*x5026))+((x4996*x5028)));
evalcond[7]=(((r01*x5007*x5018))+(((-1.0)*r00*x4999*x5000))+((r02*x5032))+((r02*x5030))+(((-1.0)*r02*x5017))+((x5003*x5025))+(((0.250000349687704)*x4995*x5016))+((x4995*x5022))+((x4993*x5006))+((r00*x5002*x5007))+((r00*x5005*x5018))+((x5003*x5010))+((r01*x4999*x5026))+(((-1.0)*r01*x5002*x5005))+((cj0*x5033)));
evalcond[8]=(((r12*x5032))+((r12*x5030))+((x5003*x5004))+(((-1.0)*r11*x5002*x5005))+(((0.250000349687704)*x4995*x5015))+((r10*x5002*x5007))+((sj0*x5033))+((x4995*x5011))+((sj4*x5007*x5014))+(((-1.0)*r10*x4999*x5000))+(((-1.0)*r12*x5017))+((x5003*x5014))+((x4993*x5021))+((r11*x4999*x5026))+((r10*x5005*x5018)));
if( IKabs(evalcond[0]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[1]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[2]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[3]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[4]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[5]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[6]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[7]) > IKFAST_EVALCOND_THRESH  || IKabs(evalcond[8]) > IKFAST_EVALCOND_THRESH  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}

}

}
}
}
// [(0, 0), (0, 1), (1, 0), (1, 1), (2, 0), (2, 1), (3, 0), (3, 1)] (original are [(0, 0), (0, 1), (1, 0), (1, 1), (2, 0), (2, 1)])
static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    // HACK should be 1e-5*norm
    IkReal tol = 1e-2*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        // HACK should be tol*100
        if( IKabs(wi[i]) < 5e-5 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API bool ComputeIk2(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions, void* pOpenRAVEManip) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:GenericRobot - j2n6s200 (50052f08c3be0e949bcd441a8fe5e83e)>"; }

IKFAST_API const char* GetIkFastVersion() { return "0x1000004a"; }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
